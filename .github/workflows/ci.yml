name: CI

on:
  # Make sure that settings are set to require permission
  # to run workflows by external contributors!
  pull_request:
    branches: ["main"]

jobs:
  check-format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: check-format-cpp
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20
          sudo apt-get -y update
          sudo apt-get -y install clang-format-20
          sudo rm /usr/bin/clang-format
          sudo ln -s $(which clang-format-20) /usr/bin/clang-format
          clang-format --version
          git fetch origin main --no-recurse-submodules
          git clang-format-20 --diff FETCH_HEAD --extensions c,h,m,mm,cc,cp,cpp,c++,cxx,hh,hpp,hxx,inc

      - name: check-format-python
        if: success() || failure()
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install autopep8==2.3.2
          echo "Running autopep8..."
          git fetch origin main --no-recurse-submodules
          git reset FETCH_HEAD
          FILES=$(comm -23 <(git ls-files '*.py' --modified | sort) <(git ls-files '*.py' --deleted | sort))
          STATUS=$?
          if [[ $FILES ]]; then
            exec 3>&1
            OUTPUT=$(autopep8 --max-line-length 200 --diff $FILES 3>&- | tee /dev/fd/3)
            exec 3>&-
            if [[ $OUTPUT ]]; then
              STATUS=1
            else
              STATUS=0
            fi
          else
            STATUS=0
          fi
          echo "autopep8 exited with $STATUS"
          deactivate
          exit $STATUS

  build-polygeist:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - name: cache-polygeist-restore
        id: cache-polygeist-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            build/
            llvm-project/build/
          key: polygeist-build

      - name: checkout-polygeist
        if: steps.cache-polygeist-restore.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: 'EPFL-LAP/Polygeist'
          submodules: recursive

      - name: build-polygeist
        if: steps.cache-polygeist-restore.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss for Polygeist build artifacts, need to rebuild"
          sudo apt-get -y install ccache
          bash build-polygeist.sh --release --force
      
      - name: cache-polygeist-save
        id: cache-polygeist-save
        if: steps.cache-polygeist-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            build/
            llvm-project/build/
          key: polygeist-build

  integration:
    if: github.event.pull_request.draft == false
    runs-on: self-hosted
    needs: [build-polygeist]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: fetch-polygeist
        uses: actions/cache/restore@v4
        with:
          path: |
            build/
            llvm-project/build/
          key: polygeist-build

      - name: move-build-artifacts
        run: |
          mv build/ Polygeist/
          mv llvm-project/build Polygeist/llvm-project
          rmdir llvm-project

      - name: build
        run: ./build.sh --debug --force

      - name: check-dynamatic
        if: steps.build.outputs.exit_code == 0
        run: ninja -C build check-dynamatic

      - name: check-dynamatic-experimental
        if: steps.build.outputs.exit_code == 0
        run: ninja -C build check-dynamatic-experimental

      - name: integration-test
        if: steps.build.outputs.exit_code == 0
        run: ninja -C build run-ci-integration-tests

      - uses: actions/upload-artifact@v4
        if: steps.build.outputs.exit_code == 0
        with: 
          name: integration-report
          path: |
            integration-test/*/out*/comp
            integration-test/*/out*/sim/report.txt
            integration-test/*/out/dynamatic_out.txt

