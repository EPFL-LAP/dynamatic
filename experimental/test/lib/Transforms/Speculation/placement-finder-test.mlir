// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --handshake-speculation="json-path=%S/placement-finder-test.json automatic=true" --split-input-file

// CHECK-LABEL:   handshake.func @placeSimpleSave(
// CHECK-SAME:                                    %[[VAL_0:.*]]: none, ...) attributes {argNames = ["start"], resNames = []} {
// CHECK:           %[[VAL_1:.*]]:2 = fork [2] %[[VAL_0]] {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
// CHECK:           %[[VAL_2:.*]] = constant %[[VAL_1]]#0 {handshake.bb = 0 : ui32, handshake.name = "constant1", value = false} : i1
// CHECK:           %[[VAL_3:.*]] = constant %[[VAL_1]]#1 {handshake.bb = 1 : ui32, handshake.name = "constant0", value = true} : i1
// CHECK:           %[[VAL_4:.*]]:4 = fork [4] %[[VAL_3]] {handshake.bb = 1 : ui32, handshake.name = "fork0"} : i1
// CHECK:           %[[VAL_5:.*]] = mux %[[VAL_3]] {{\[}}%[[VAL_2]], %[[VAL_3]]] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : i1, i1
// CHECK:           %[[VAL_6:.*]], %[[VAL_7:.*]], %[[VAL_8:.*]], %[[VAL_9:.*]], %[[VAL_10:.*]], %[[VAL_11:.*]] = speculator{{\[}}%[[VAL_1]]#1] %[[VAL_5]] {handshake.bb = 1 : ui32, handshake.name = "speculator0"} : i1
// CHECK:           %[[VAL_12:.*]], %[[VAL_13:.*]] = speculating_branch{{\[}}%[[VAL_6]]] %[[VAL_14:.*]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch0"} : i1, i1
// CHECK:           %[[VAL_15:.*]], %[[VAL_16:.*]] = cond_br %[[VAL_12]], %[[VAL_8]] {handshake.bb = 1 : ui32, handshake.name = "cond_br0"} : i1
// CHECK:           %[[VAL_17:.*]], %[[VAL_18:.*]] = speculating_branch{{\[}}%[[VAL_19:.*]]] %[[VAL_4]]#1 {handshake.bb = 1 : ui32, handshake.name = "speculating_branch1"} : i1, i1
// CHECK:           %[[VAL_20:.*]], %[[VAL_21:.*]] = cond_br %[[VAL_17]], %[[VAL_15]] {handshake.bb = 1 : ui32, handshake.name = "cond_br5"} : i1
// CHECK:           %[[VAL_22:.*]], %[[VAL_23:.*]] = speculating_branch{{\[}}%[[VAL_24:.*]]] %[[VAL_4]]#2 {handshake.bb = 1 : ui32, handshake.name = "speculating_branch2"} : i1, i1
// CHECK:           %[[VAL_25:.*]], %[[VAL_26:.*]] = cond_br %[[VAL_22]], %[[VAL_20]] {handshake.bb = 1 : ui32, handshake.name = "cond_br6"} : i1
// CHECK:           %[[VAL_27:.*]], %[[VAL_28:.*]] = speculating_branch{{\[}}%[[VAL_29:.*]]] %[[VAL_4]]#3 {handshake.bb = 1 : ui32, handshake.name = "speculating_branch3"} : i1, i1
// CHECK:           %[[VAL_30:.*]], %[[VAL_31:.*]] = cond_br %[[VAL_27]], %[[VAL_25]] {handshake.bb = 1 : ui32, handshake.name = "cond_br7"} : i1
// CHECK:           %[[VAL_14]] = spec_save{{\[}}%[[VAL_7]]] %[[VAL_4]]#0 {handshake.bb = 1 : ui32, handshake.name = "spec_save0"} : i1
// CHECK:           %[[VAL_19]], %[[VAL_32:.*]] = cond_br %[[VAL_14]], %[[VAL_6]] {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : i1
// CHECK:           %[[VAL_24]], %[[VAL_33:.*]] = cond_br %[[VAL_4]]#1, %[[VAL_19]] {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : i1
// CHECK:           %[[VAL_29]], %[[VAL_34:.*]] = cond_br %[[VAL_4]]#2, %[[VAL_24]] {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : i1
// CHECK:           %[[VAL_35:.*]], %[[VAL_36:.*]] = cond_br %[[VAL_4]]#3, %[[VAL_29]] {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : i1
// CHECK:           %[[VAL_37:.*]] = spec_commit{{\[}}%[[VAL_30]]] %[[VAL_35]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit0"} : i1
// CHECK:           end {handshake.bb = 1 : ui32, handshake.name = "end0"} %[[VAL_37]] : i1
// CHECK:         }
handshake.func @placeSimpleSave(%start: none) {
  %0:2 =  fork [2] %start  {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
  %4 = constant %0#0 {handshake.bb = 0 : ui32, handshake.name = "constant1", value = 0 : i1} : i1
  %1 = constant %0#1 {handshake.bb = 1 : ui32, handshake.name = "constant0", value = 1 : i1} : i1
  %2:4 = fork [4] %1  {handshake.bb = 1 : ui32, handshake.name = "fork0"} : i1
  %3 = mux %1 [%4, %1] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : i1, i1
  %trueResult1, %falseResult1 = cond_br %2#0, %3 {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : i1
  %trueResult2, %falseResult2 = cond_br %2#1, %trueResult1 {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : i1
  %trueResult3, %falseResult3 = cond_br %2#2, %trueResult2 {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : i1
  %trueResult4, %falseResult4 = cond_br %2#3, %trueResult3 {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : i1
  end {handshake.bb = 1 : ui32, handshake.name = "end0"} %trueResult4 : i1
}

// -----

// CHECK-LABEL:   handshake.func @placeCommitsOnMultipleBranches(
// CHECK-SAME:                                                   %[[VAL_0:.*]]: none, ...) attributes {argNames = ["start"], resNames = []} {
// CHECK:           %[[VAL_1:.*]]:2 = fork [2] %[[VAL_0]] {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
// CHECK:           %[[VAL_2:.*]] = constant %[[VAL_1]]#0 {handshake.bb = 0 : ui32, handshake.name = "constant0", value = true} : i1
// CHECK:           %[[VAL_3:.*]]:2 = fork [2] %[[VAL_2]] {handshake.bb = 0 : ui32, handshake.name = "fork0"} : i1
// CHECK:           %[[VAL_4:.*]], %[[VAL_5:.*]] = control_merge %[[VAL_1]]#1 {handshake.bb = 1 : ui32, handshake.name = "control_merge0"} : none, i1
// CHECK:           %[[VAL_6:.*]] = mux %[[VAL_2]] {{\[}}%[[VAL_4]], %[[VAL_4]]] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : i1, none
// CHECK:           %[[VAL_7:.*]], %[[VAL_8:.*]], %[[VAL_9:.*]], %[[VAL_10:.*]], %[[VAL_11:.*]], %[[VAL_12:.*]] = speculator{{\[}}%[[VAL_1]]#1] %[[VAL_6]] {handshake.bb = 1 : ui32, handshake.name = "speculator0"} : none
// CHECK:           %[[VAL_13:.*]], %[[VAL_14:.*]] = speculating_branch{{\[}}%[[VAL_7]]] %[[VAL_15:.*]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch0"} : none, i1
// CHECK:           %[[VAL_16:.*]], %[[VAL_17:.*]] = cond_br %[[VAL_13]], %[[VAL_9]] {handshake.bb = 1 : ui32, handshake.name = "cond_br0"} : i1
// CHECK:           %[[VAL_18:.*]], %[[VAL_19:.*]] = speculating_branch{{\[}}%[[VAL_20:.*]]] %[[VAL_3]]#1 {handshake.bb = 1 : ui32, handshake.name = "speculating_branch1"} : none, i1
// CHECK:           %[[VAL_21:.*]], %[[VAL_22:.*]] = cond_br %[[VAL_18]], %[[VAL_16]] {handshake.bb = 1 : ui32, handshake.name = "cond_br5"} : i1
// CHECK:           %[[VAL_23:.*]], %[[VAL_24:.*]] = speculating_branch{{\[}}%[[VAL_25:.*]]] %[[VAL_2]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch2"} : none, i1
// CHECK:           %[[VAL_26:.*]], %[[VAL_27:.*]] = cond_br %[[VAL_23]], %[[VAL_22]] {handshake.bb = 1 : ui32, handshake.name = "cond_br6"} : i1
// CHECK:           %[[VAL_28:.*]], %[[VAL_29:.*]] = speculating_branch{{\[}}%[[VAL_30:.*]]] %[[VAL_2]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch3"} : none, i1
// CHECK:           %[[VAL_31:.*]], %[[VAL_32:.*]] = cond_br %[[VAL_28]], %[[VAL_21]] {handshake.bb = 1 : ui32, handshake.name = "cond_br7"} : i1
// CHECK:           %[[VAL_15]] = spec_save{{\[}}%[[VAL_8]]] %[[VAL_3]]#0 {handshake.bb = 1 : ui32, handshake.name = "spec_save0"} : i1
// CHECK:           %[[VAL_20]], %[[VAL_33:.*]] = cond_br %[[VAL_15]], %[[VAL_7]] {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : none
// CHECK:           %[[VAL_30]], %[[VAL_25]] = cond_br %[[VAL_3]]#1, %[[VAL_20]] {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : none
// CHECK:           %[[VAL_34:.*]], %[[VAL_35:.*]] = cond_br %[[VAL_2]], %[[VAL_30]] {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : none
// CHECK:           %[[VAL_36:.*]], %[[VAL_37:.*]] = cond_br %[[VAL_2]], %[[VAL_25]] {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : none
// CHECK:           %[[VAL_38:.*]] = spec_commit{{\[}}%[[VAL_17]]] %[[VAL_33]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit0"} : none
// CHECK:           %[[VAL_39:.*]] = spec_commit{{\[}}%[[VAL_31]]] %[[VAL_34]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit1"} : none
// CHECK:           %[[VAL_40:.*]] = spec_commit{{\[}}%[[VAL_27]]] %[[VAL_37]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit2"} : none
// CHECK:           %[[VAL_41:.*]] = spec_commit{{\[}}%[[VAL_26]]] %[[VAL_36]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit3"} : none
// CHECK:           %[[VAL_42:.*]] = spec_commit{{\[}}%[[VAL_32]]] %[[VAL_35]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit4"} : none
// CHECK:           end {handshake.bb = 1 : ui32, handshake.name = "end0"} %[[VAL_38]], %[[VAL_39]], %[[VAL_41]], %[[VAL_42]], %[[VAL_40]] : none, none, none, none, none
// CHECK:         }
handshake.func @placeCommitsOnMultipleBranches(%start: none) {
  %0:2 =  fork [2] %start  {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
  %1 = constant %0#0 {handshake.bb = 0 : ui32, handshake.name = "constant0", value = 1 : i1} : i1
  %2:2 = fork [2] %1  {handshake.bb = 0 : ui32, handshake.name = "fork0"} : i1
  %result, %index = control_merge %0#1 {handshake.bb = 1 : ui32, handshake.name = "control_merge0"} : none, i1
  %3 = mux %1 [%result, %result] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : i1, none
  %trueResult1, %falseResult1 = cond_br %2#0, %3 {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : none
  %trueResult2, %falseResult2 = cond_br %2#1, %trueResult1 {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : none
  %trueResult3, %falseResult3 = cond_br %1, %trueResult2  {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : none
  %trueResult4, %falseResult4 = cond_br %1, %falseResult2  {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : none
  end {handshake.bb = 1 : ui32, handshake.name = "end0"} %falseResult1, %trueResult3, %trueResult4, %falseResult3, %falseResult4 : none, none, none, none, none
}

// -----

// CHECK-LABEL:   handshake.func @placeSaveCommitsOnAllPaths(
// CHECK-SAME:                                               %[[VAL_0:.*]]: none, ...) attributes {argNames = ["start"], resNames = []} {
// CHECK:           %[[VAL_1:.*]]:2 = fork [2] %[[VAL_0]] {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
// CHECK:           %[[VAL_2:.*]] = constant %[[VAL_1]]#0 {handshake.bb = 0 : ui32, handshake.name = "constant1", value = false} : i1
// CHECK:           %[[VAL_3:.*]], %[[VAL_4:.*]] = control_merge %[[VAL_5:.*]], %[[VAL_2]] {handshake.bb = 1 : ui32, handshake.name = "control_merge0"} : i1, i1
// CHECK:           %[[VAL_6:.*]] = spec_save_commit{{\[}}%[[VAL_7:.*]]] %[[VAL_8:.*]]#2 {handshake.bb = 1 : ui32, handshake.name = "spec_save_commit0"} : i1
// CHECK:           %[[VAL_9:.*]] = spec_save_commit{{\[}}%[[VAL_7]]] %[[VAL_3]] {handshake.bb = 1 : ui32, handshake.name = "spec_save_commit1"} : i1
// CHECK:           %[[VAL_5]], %[[VAL_10:.*]] = cond_br %[[VAL_6]], %[[VAL_9]] {handshake.bb = 1 : ui32, handshake.name = "cond_br0"} : i1
// CHECK:           %[[VAL_11:.*]] = constant %[[VAL_1]]#1 {handshake.bb = 1 : ui32, handshake.name = "constant0", value = true} : i1
// CHECK:           %[[VAL_12:.*]] = mux %[[VAL_4]] {{\[}}%[[VAL_13:.*]], %[[VAL_11]]] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : i1, i1
// CHECK:           %[[VAL_8]]:3 = fork [3] %[[VAL_12]] {handshake.bb = 1 : ui32, handshake.name = "fork0"} : i1
// CHECK:           %[[VAL_14:.*]], %[[VAL_15:.*]], %[[VAL_16:.*]], %[[VAL_17:.*]], %[[VAL_18:.*]], %[[VAL_19:.*]] = speculator{{\[}}%[[VAL_1]]#1] %[[VAL_8]]#1 {handshake.bb = 1 : ui32, handshake.name = "speculator0"} : i1
// CHECK:           %[[VAL_20:.*]], %[[VAL_21:.*]] = speculating_branch{{\[}}%[[VAL_14]]] %[[VAL_6]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch0"} : i1, i1
// CHECK:           %[[VAL_22:.*]], %[[VAL_23:.*]] = cond_br %[[VAL_20]], %[[VAL_18]] {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : i3
// CHECK:           %[[VAL_24:.*]], %[[VAL_25:.*]] = cond_br %[[VAL_19]], %[[VAL_22]] {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : i3
// CHECK:           %[[VAL_7]] = merge %[[VAL_17]], %[[VAL_24]] {handshake.bb = 1 : ui32, handshake.name = "merge0"} : i3
// CHECK:           %[[VAL_26:.*]], %[[VAL_27:.*]] = speculating_branch{{\[}}%[[VAL_14]]] %[[VAL_28:.*]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch1"} : i1, i1
// CHECK:           %[[VAL_29:.*]], %[[VAL_30:.*]] = cond_br %[[VAL_26]], %[[VAL_16]] {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : i1
// CHECK:           %[[VAL_31:.*]], %[[VAL_32:.*]] = speculating_branch{{\[}}%[[VAL_6]]] %[[VAL_6]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch2"} : i1, i1
// CHECK:           %[[VAL_33:.*]], %[[VAL_34:.*]] = cond_br %[[VAL_31]], %[[VAL_29]] {handshake.bb = 1 : ui32, handshake.name = "cond_br5"} : i1
// CHECK:           %[[VAL_28]] = spec_save_commit{{\[}}%[[VAL_7]]] %[[VAL_8]]#0 {handshake.bb = 1 : ui32, handshake.name = "spec_save_commit2"} : i1
// CHECK:           %[[VAL_13]], %[[VAL_35:.*]] = cond_br %[[VAL_28]], %[[VAL_14]] {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : i1
// CHECK:           %[[VAL_36:.*]] = spec_commit{{\[}}%[[VAL_34]]] %[[VAL_10]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit0"} : i1
// CHECK:           end {handshake.bb = 1 : ui32, handshake.name = "end0"} %[[VAL_36]] : i1
// CHECK:         }
handshake.func @placeSaveCommitsOnAllPaths(%start: none) {
  %0:2 =  fork [2] %start  {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
  %4 = constant %0#0 {handshake.bb = 0 : ui32, handshake.name = "constant1", value = 0 : i1} : i1
  %result, %index = control_merge %trueResult, %4 {handshake.bb = 1 : ui32, handshake.name = "control_merge0"} : i1, i1
  %trueResult, %falseResult = cond_br %3#2, %result {handshake.bb = 1 : ui32, handshake.name = "cond_br0"} : i1
  %1 = constant %0#1 {handshake.bb = 1 : ui32, handshake.name = "constant0", value = 1 : i1} : i1
  %2 = mux %index [%trueResult1, %1] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : i1, i1
  %3:3 = fork [3] %2  {handshake.bb = 1 : ui32, handshake.name = "fork0"} : i1
  %trueResult1, %falseResult1 = cond_br %3#0, %3#1 {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : i1
  end {handshake.bb = 1 : ui32, handshake.name =  "end0"} %falseResult  : i1
}

// -----

// CHECK-LABEL:   handshake.func @multipleBBs(
// CHECK-SAME:                                %[[VAL_0:.*]]: none, ...) attributes {argNames = ["start"], resNames = []} {
// CHECK:           %[[VAL_1:.*]]:3 = fork [3] %[[VAL_0]] {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
// CHECK:           %[[VAL_2:.*]] = constant %[[VAL_1]]#0 {handshake.bb = 0 : ui32, handshake.name = "constant10", value = false} : i1
// CHECK:           %[[VAL_3:.*]] = constant %[[VAL_1]]#1 {handshake.bb = 1 : ui32, handshake.name = "constant0", value = true} : i1
// CHECK:           %[[VAL_4:.*]], %[[VAL_5:.*]], %[[VAL_6:.*]], %[[VAL_7:.*]], %[[VAL_8:.*]], %[[VAL_9:.*]] = speculator{{\[}}%[[VAL_1]]#1] %[[VAL_2]] {handshake.bb = 1 : ui32, handshake.name = "speculator0"} : i1
// CHECK:           %[[VAL_10:.*]], %[[VAL_11:.*]] = speculating_branch{{\[}}%[[VAL_4]]] %[[VAL_12:.*]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch0"} : i1, i1
// CHECK:           %[[VAL_13:.*]], %[[VAL_14:.*]] = cond_br %[[VAL_10]], %[[VAL_6]] {handshake.bb = 1 : ui32, handshake.name = "cond_br0"} : i1
// CHECK:           %[[VAL_15:.*]], %[[VAL_16:.*]] = speculating_branch{{\[}}%[[VAL_17:.*]]] %[[VAL_18:.*]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch1"} : i1, i1
// CHECK:           %[[VAL_19:.*]], %[[VAL_20:.*]] = cond_br %[[VAL_15]], %[[VAL_13]] {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : i1
// CHECK:           %[[VAL_21:.*]], %[[VAL_22:.*]] = speculating_branch{{\[}}%[[VAL_17]]] %[[VAL_23:.*]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch2"} : i1, i1
// CHECK:           %[[VAL_24:.*]], %[[VAL_25:.*]] = cond_br %[[VAL_21]], %[[VAL_13]] {handshake.bb = 1 : ui32, handshake.name = "cond_br5"} : i1
// CHECK:           %[[VAL_12]] = spec_save{{\[}}%[[VAL_5]]] %[[VAL_3]] {handshake.bb = 1 : ui32, handshake.name = "spec_save0"} : i1
// CHECK:           %[[VAL_17]], %[[VAL_26:.*]] = cond_br %[[VAL_12]], %[[VAL_4]] {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : i1
// CHECK:           %[[VAL_18]] = constant %[[VAL_1]]#2 {handshake.bb = 1 : ui32, handshake.name = "constant1", value = true} : i1
// CHECK:           %[[VAL_27:.*]], %[[VAL_28:.*]] = cond_br %[[VAL_18]], %[[VAL_17]] {handshake.bb = 2 : ui32, handshake.name = "cond_br2"} : i1
// CHECK:           %[[VAL_29:.*]] = source {handshake.bb = 3 : ui32, handshake.name = "source3"}
// CHECK:           %[[VAL_23]] = constant %[[VAL_29]] {handshake.bb = 3 : ui32, handshake.name = "constant2", value = true} : i1
// CHECK:           %[[VAL_30:.*]], %[[VAL_31:.*]] = cond_br %[[VAL_23]], %[[VAL_17]] {handshake.bb = 3 : ui32, handshake.name = "cond_br3"} : i1
// CHECK:           %[[VAL_32:.*]] = spec_commit{{\[}}%[[VAL_24]]] %[[VAL_30]] {handshake.bb = 4 : ui32, handshake.name = "spec_commit0"} : i1
// CHECK:           %[[VAL_33:.*]] = spec_commit{{\[}}%[[VAL_19]]] %[[VAL_27]] {handshake.bb = 4 : ui32, handshake.name = "spec_commit1"} : i1
// CHECK:           %[[VAL_34:.*]] = merge %[[VAL_33]], %[[VAL_32]] {handshake.bb = 4 : ui32, handshake.name = "merge0"} : i1
// CHECK:           end {handshake.bb = 4 : ui32, handshake.name = "end0"} %[[VAL_34]] : i1
// CHECK:         }
handshake.func @multipleBBs(%start: none) {
  %0:3 =  fork [3] %start  {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
  %10 = constant %0#0 {handshake.bb = 0 : ui32, handshake.name = "constant10", value = 0 : i1} : i1
  %1 = constant %0#1 {handshake.bb = 1 : ui32, handshake.name = "constant0", value = 1 : i1} : i1
  %trueResult1, %falseResult1 = cond_br %1, %10 {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : i1
  %5 = constant %0#2 {handshake.bb = 1 : ui32, handshake.name = "constant1", value = 1 : i1} : i1
  %trueResult2, %falseResult2 = cond_br %5, %trueResult1 {handshake.bb = 2 : ui32, handshake.name = "cond_br2"} : i1
  %8 = source {handshake.bb = 3 : ui32, handshake.name = "source3"}
  %9 = constant %8 {handshake.bb = 3 : ui32, handshake.name = "constant2", value = 1 : i1} : i1
  %trueResult3, %falseResult3 = cond_br %9, %trueResult1 {handshake.bb = 3 : ui32, handshake.name = "cond_br3"} : i1
  %12 = merge %trueResult2, %trueResult3 {handshake.bb = 4 : ui32, handshake.name = "merge0"} : i1
  end {handshake.bb = 4 : ui32, handshake.name = "end0"} %12 : i1
}
