// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --handshake-speculation="json-path=%S/commitTest.json"

// CHECK:           %[[VAL_5:.*]], %[[VAL_6:.*]], %[[VAL_7:.*]], %[[VAL_8:.*]], %[[VAL_9:.*]], %[[VAL_10:.*]] = speculator %[[VAL_4]] {bb = 0 : ui32, name = #[[?]]<"speculator0">} : i1
// CHECK:           %[[VAL_11:.*]], %[[VAL_12:.*]] = speculating_branch{{\[}}%[[VAL_13:.*]]] %[[VAL_14:.*]] {bb = 0 : ui32, name = #[[?]]<"speculating_branch0">} : i1, i1
// CHECK:           %[[VAL_15:.*]], %[[VAL_16:.*]] = cond_br %[[VAL_11]], %[[VAL_7]] {bb = 0 : ui32, name = #[[?]]<"cond_br0">} : i1
// CHECK:           %[[VAL_17:.*]], %[[VAL_18:.*]] = speculating_branch{{\[}}%[[VAL_19:.*]]] %[[VAL_20:.*]] {bb = 0 : ui32, name = #[[?]]<"speculating_branch1">} : i1, i1
// CHECK:           %[[VAL_21:.*]], %[[VAL_22:.*]] = cond_br %[[VAL_17]], %[[VAL_15]] {bb = 0 : ui32, name = #[[?]]<"cond_br5">} : i1
// CHECK:           %[[VAL_23:.*]], %[[VAL_24:.*]] = speculating_branch{{\[}}%[[VAL_25:.*]]] %[[VAL_26:.*]] {bb = 0 : ui32, name = #[[?]]<"speculating_branch2">} : i1, i1
// CHECK:           %[[VAL_27:.*]], %[[VAL_28:.*]] = cond_br %[[VAL_23]], %[[VAL_22]] {bb = 0 : ui32, name = #[[?]]<"cond_br6">} : i1
// CHECK:           %[[VAL_29:.*]], %[[VAL_30:.*]] = speculating_branch{{\[}}%[[VAL_31:.*]]] %[[VAL_19]] {bb = 0 : ui32, name = #[[?]]<"speculating_branch3">} : i1, i1
// CHECK:           %[[VAL_32:.*]], %[[VAL_33:.*]] = cond_br %[[VAL_29]], %[[VAL_21]] {bb = 0 : ui32, name = #[[?]]<"cond_br7">} : i1
// CHECK:           %[[VAL_14]] = spec_save{{\[}}%[[VAL_6]]] %[[VAL_3]]#0 {bb = 0 : ui32, name = #[[?]]<"spec_save0">} : i1
// CHECK:           %[[VAL_13]], %[[VAL_34:.*]] = cond_br %[[VAL_14]], %[[VAL_5]] {bb = 0 : ui32, name = #[[?]]<"cond_br1">} : i1
// CHECK:           %[[VAL_20]] = spec_save{{\[}}%[[VAL_6]]] %[[VAL_3]]#1 {bb = 0 : ui32, name = #[[?]]<"spec_save1">} : i1
// CHECK:           %[[VAL_19]], %[[VAL_26]] = cond_br %[[VAL_20]], %[[VAL_13]] {bb = 0 : ui32, name = #[[?]]<"cond_br2">} : i1
// CHECK:           %[[VAL_31]], %[[VAL_35:.*]] = cond_br %[[VAL_19]], %[[VAL_2]] {bb = 0 : ui32, name = #[[?]]<"cond_br3">} : i1
// CHECK:           %[[VAL_25]], %[[VAL_36:.*]] = cond_br %[[VAL_26]], %[[VAL_2]] {bb = 0 : ui32, name = #[[?]]<"cond_br4">} : i1
// CHECK:           %[[VAL_37:.*]] = spec_commit{{\[}}%[[VAL_28]]] %[[VAL_36]] {bb = 0 : ui32, name = #[[?]]<"spec_commit0">} : i1
// CHECK:           %[[VAL_38:.*]] = spec_commit{{\[}}%[[VAL_16]]] %[[VAL_34]] {bb = 0 : ui32, name = #[[?]]<"spec_commit1">} : i1
// CHECK:           %[[VAL_39:.*]] = spec_commit{{\[}}%[[VAL_32]]] %[[VAL_31]] {bb = 0 : ui32, name = #[[?]]<"spec_commit2">} : i1
// CHECK:           %[[VAL_40:.*]] = spec_commit{{\[}}%[[VAL_27]]] %[[VAL_25]] {bb = 0 : ui32, name = #[[?]]<"spec_commit3">} : i1
// CHECK:           %[[VAL_41:.*]] = spec_commit{{\[}}%[[VAL_33]]] %[[VAL_35]] {bb = 0 : ui32, name = #[[?]]<"spec_commit4">} : i1
handshake.func @placeCommitsOnMultipleBranches(%start: i1) {
  %0 = source {bb = 0 : ui32, name = #handshake.name<"source1">}
  %1 = constant %0 {bb = 0 : ui32, name = #handshake.name<"constant0">, value = 1 : i1} : i1
  %2:2 = fork [2] %1  {bb = 0 : ui32, name = #handshake.name<"fork0">} : i1
  %3 = mux %1 [%start, %1] {bb = 0 : ui32, name = #handshake.name<"mux0">} : i1, i1
  %trueResult1, %falseResult1 = cond_br %2#0, %3 {bb = 0 : ui32, name = #handshake.name<"cond_br1">} : i1
  %trueResult2, %falseResult2 = cond_br %2#1, %trueResult1 {bb = 0 : ui32, name = #handshake.name<"cond_br2">} : i1
  %trueResult3, %falseResult3 = cond_br %trueResult2, %1 {bb = 0 : ui32, name = #handshake.name<"cond_br3">} : i1
  %trueResult4, %falseResult4 = cond_br %falseResult2, %1 {bb = 0 : ui32, name = #handshake.name<"cond_br4">} : i1
  end {bb = 0 : ui32, name = #handshake.name<"end0">} %falseResult1, %trueResult3, %trueResult4, %falseResult3, %falseResult4 : i1, i1, i1, i1, i1
}
