// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --handshake-speculation="json-path=%S/single_loop_1.json"

// CHECK-LABEL:   handshake.func @if_loop_1(
// CHECK-SAME:                              %[[VAL_0:.*]]: memref<100xi32>,
// CHECK-SAME:                              %[[VAL_1:.*]]: i32,
// CHECK-SAME:                              %[[VAL_2:.*]]: none, ...) -> i32 attributes {argNames = ["a", "n", "start"], resNames = ["out0"]} {
// CHECK:           %[[VAL_3:.*]], %[[VAL_4:.*]] = mem_controller{{\[}}%[[VAL_0]] : memref<100xi32>] (%[[VAL_5:.*]]) {connectedBlocks = [2 : i32], name = #handshake.name<"mem_controller0">} : (i32) -> (i32, none)
// CHECK:           %[[VAL_6:.*]] = buffer [1] seq %[[VAL_2]] {bb = 0 : ui32, name = #handshake.name<"buffer2">} : none
// CHECK:           %[[VAL_7:.*]] = buffer [1] fifo %[[VAL_6]] {bb = 0 : ui32, name = #handshake.name<"buffer3">} : none
// CHECK:           %[[VAL_8:.*]]:2 = fork [2] %[[VAL_7]] {bb = 0 : ui32, name = #handshake.name<"fork0">} : none
// CHECK:           %[[VAL_9:.*]] = constant %[[VAL_8]]#1 {bb = 0 : ui32, name = #handshake.name<"constant0">, value = false} : i1
// CHECK:           %[[VAL_10:.*]]:2 = fork [2] %[[VAL_9]] {bb = 0 : ui32, name = #handshake.name<"fork1">} : i1
// CHECK:           %[[VAL_11:.*]] = arith.extsi %[[VAL_10]]#0 {bb = 0 : ui32, name = #handshake.name<"extsi5">} : i1 to i32
// CHECK:           %[[VAL_12:.*]] = arith.extsi %[[VAL_10]]#1 {bb = 0 : ui32, name = #handshake.name<"extsi6">} : i1 to i32
// CHECK:           %[[VAL_13:.*]] = buffer [1] seq %[[VAL_1]] {bb = 0 : ui32, name = #handshake.name<"buffer0">} : i32
// CHECK:           %[[VAL_14:.*]] = buffer [1] fifo %[[VAL_13]] {bb = 0 : ui32, name = #handshake.name<"buffer1">} : i32
// CHECK:           %[[VAL_15:.*]] = spec_commit{{\[}}%[[VAL_16:.*]]] %[[VAL_17:.*]]#2 {bb = 1 : ui32, name = #handshake.name<"spec_commit0">} : i1
// CHECK:           %[[VAL_18:.*]] = mux %[[VAL_15]] {{\[}}%[[VAL_19:.*]], %[[VAL_11]]] {bb = 1 : ui32, name = #handshake.name<"mux0">} : i1, i32
// CHECK:           %[[VAL_20:.*]] = buffer [1] seq %[[VAL_18]] {bb = 1 : ui32, name = #handshake.name<"buffer4">} : i32
// CHECK:           %[[VAL_21:.*]] = buffer [1] fifo %[[VAL_20]] {bb = 1 : ui32, name = #handshake.name<"buffer5">} : i32
// CHECK:           %[[VAL_22:.*]]:2 = fork [2] %[[VAL_21]] {bb = 1 : ui32, name = #handshake.name<"fork2">} : i32
// CHECK:           %[[VAL_23:.*]] = mux %[[VAL_17]]#1 {{\[}}%[[VAL_24:.*]], %[[VAL_12]]] {bb = 1 : ui32, name = #handshake.name<"mux1">} : i1, i32
// CHECK:           %[[VAL_25:.*]] = mux %[[VAL_17]]#0 {{\[}}%[[VAL_26:.*]], %[[VAL_14]]] {bb = 1 : ui32, name = #handshake.name<"mux2">} : i1, i32
// CHECK:           %[[VAL_27:.*]] = buffer [1] seq %[[VAL_25]] {bb = 1 : ui32, name = #handshake.name<"buffer8">} : i32
// CHECK:           %[[VAL_28:.*]] = buffer [1] fifo %[[VAL_27]] {bb = 1 : ui32, name = #handshake.name<"buffer9">} : i32
// CHECK:           %[[VAL_29:.*]]:2 = fork [2] %[[VAL_28]] {bb = 1 : ui32, name = #handshake.name<"fork3">} : i32
// CHECK:           %[[VAL_30:.*]] = spec_commit{{\[}}%[[VAL_31:.*]]] %[[VAL_32:.*]] {bb = 1 : ui32, name = #handshake.name<"spec_commit1">} : none
// CHECK:           %[[VAL_33:.*]], %[[VAL_34:.*]] = control_merge %[[VAL_30]], %[[VAL_8]]#0 {bb = 1 : ui32, name = #handshake.name<"control_merge3">} : none, i1
// CHECK:           %[[VAL_35:.*]] = buffer [1] seq %[[VAL_34]] {bb = 1 : ui32, name = #handshake.name<"buffer12">} : i1
// CHECK:           %[[VAL_36:.*]] = buffer [1] fifo %[[VAL_35]] {bb = 1 : ui32, name = #handshake.name<"buffer13">} : i1
// CHECK:           %[[VAL_17]]:3 = fork [3] %[[VAL_36]] {bb = 1 : ui32, name = #handshake.name<"fork4">} : i1
// CHECK:           %[[VAL_37:.*]] = arith.cmpi ult, %[[VAL_22]]#1, %[[VAL_29]]#1 {bb = 1 : ui32, name = #handshake.name<"cmpi1">} : i32
// CHECK:           %[[VAL_38:.*]], %[[VAL_39:.*]], %[[VAL_16]], %[[VAL_40:.*]], %[[VAL_41:.*]], %[[VAL_42:.*]] = speculator %[[VAL_37]] {bb = 1 : ui32, name = #handshake.name<"speculator0">} : i1
// CHECK:           %[[VAL_43:.*]], %[[VAL_44:.*]] = speculating_branch{{\[}}%[[VAL_45:.*]]] %[[VAL_46:.*]]#2 {name = #handshake.name<"speculating_branch0">} : i32, i1
// CHECK:           %[[VAL_47:.*]], %[[VAL_48:.*]] = cond_br %[[VAL_43]], %[[VAL_16]] {name = #handshake.name<"cond_br0">} : i1
// CHECK:           %[[VAL_49:.*]], %[[VAL_50:.*]] = speculating_branch{{\[}}%[[VAL_51:.*]]] %[[VAL_46]]#1 {name = #handshake.name<"speculating_branch1">} : i32, i1
// CHECK:           %[[VAL_52:.*]], %[[VAL_53:.*]] = cond_br %[[VAL_49]], %[[VAL_16]] {name = #handshake.name<"cond_br5">} : i1
// CHECK:           %[[VAL_54:.*]], %[[VAL_55:.*]] = speculating_branch{{\[}}%[[VAL_56:.*]]] %[[VAL_46]]#0 {name = #handshake.name<"speculating_branch2">} : none, i1
// CHECK:           %[[VAL_31]], %[[VAL_57:.*]] = cond_br %[[VAL_54]], %[[VAL_16]] {name = #handshake.name<"cond_br6">} : i1
// CHECK:           %[[VAL_46]]:4 = fork [4] %[[VAL_38]] {bb = 1 : ui32, name = #handshake.name<"fork5">} : i1
// CHECK:           %[[VAL_58:.*]] = spec_save{{\[}}%[[VAL_39]]] %[[VAL_29]]#0 {bb = 1 : ui32, name = #handshake.name<"spec_save0">} : i32
// CHECK:           %[[VAL_59:.*]], %[[VAL_60:.*]] = cond_br %[[VAL_46]]#3, %[[VAL_58]] {bb = 1 : ui32, name = #handshake.name<"cond_br1">} : i32
// CHECK:           sink %[[VAL_60]] {name = #handshake.name<"sink0">} : i32
// CHECK:           %[[VAL_61:.*]] = spec_save{{\[}}%[[VAL_39]]] %[[VAL_22]]#0 {bb = 1 : ui32, name = #handshake.name<"spec_save1">} : i32
// CHECK:           %[[VAL_45]], %[[VAL_62:.*]] = cond_br %[[VAL_46]]#2, %[[VAL_61]] {bb = 1 : ui32, name = #handshake.name<"cond_br2">} : i32
// CHECK:           sink %[[VAL_62]] {name = #handshake.name<"sink1">} : i32
// CHECK:           %[[VAL_63:.*]] = buffer [1] seq %[[VAL_23]] {bb = 1 : ui32, name = #handshake.name<"buffer6">} : i32
// CHECK:           %[[VAL_64:.*]] = buffer [1] fifo %[[VAL_63]] {bb = 1 : ui32, name = #handshake.name<"buffer7">} : i32
// CHECK:           %[[VAL_65:.*]] = spec_save{{\[}}%[[VAL_39]]] %[[VAL_64]] {bb = 1 : ui32, name = #handshake.name<"spec_save2">} : i32
// CHECK:           %[[VAL_51]], %[[VAL_66:.*]] = cond_br %[[VAL_46]]#1, %[[VAL_65]] {bb = 1 : ui32, name = #handshake.name<"cond_br3">} : i32
// CHECK:           %[[VAL_67:.*]] = buffer [1] seq %[[VAL_33]] {bb = 1 : ui32, name = #handshake.name<"buffer10">} : none
// CHECK:           %[[VAL_68:.*]] = buffer [1] fifo %[[VAL_67]] {bb = 1 : ui32, name = #handshake.name<"buffer11">} : none
// CHECK:           %[[VAL_69:.*]] = spec_save{{\[}}%[[VAL_39]]] %[[VAL_68]] {bb = 1 : ui32, name = #handshake.name<"spec_save3">} : none
// CHECK:           %[[VAL_56]], %[[VAL_70:.*]] = cond_br %[[VAL_46]]#0, %[[VAL_69]] {bb = 1 : ui32, name = #handshake.name<"cond_br4">} : none
// CHECK:           sink %[[VAL_70]] {name = #handshake.name<"sink2">} : none
// CHECK:           %[[VAL_71:.*]] = buffer [1] seq %[[VAL_45]] {bb = 2 : ui32, name = #handshake.name<"buffer16">} : i32
// CHECK:           %[[VAL_72:.*]] = buffer [1] fifo %[[VAL_71]] {bb = 2 : ui32, name = #handshake.name<"buffer17">} : i32
// CHECK:           %[[VAL_73:.*]]:2 = fork [2] %[[VAL_72]] {bb = 2 : ui32, name = #handshake.name<"fork6">} : i32
// CHECK:           %[[VAL_74:.*]] = source {bb = 2 : ui32, name = #handshake.name<"source0">}
// CHECK:           %[[VAL_75:.*]] = constant %[[VAL_74]] {bb = 2 : ui32, name = #handshake.name<"constant4">, value = 1 : i2} : i2
// CHECK:           %[[VAL_76:.*]] = arith.extsi %[[VAL_75]] {bb = 2 : ui32, name = #handshake.name<"extsi1">} : i2 to i32
// CHECK:           %[[VAL_77:.*]] = source {bb = 2 : ui32, name = #handshake.name<"source1">}
// CHECK:           %[[VAL_78:.*]] = constant %[[VAL_77]] {bb = 2 : ui32, name = #handshake.name<"constant9">, value = 10 : i5} : i5
// CHECK:           %[[VAL_79:.*]] = arith.extsi %[[VAL_78]] {bb = 2 : ui32, name = #handshake.name<"extsi2">} : i5 to i32
// CHECK:           %[[VAL_80:.*]] = source {bb = 2 : ui32, name = #handshake.name<"source2">}
// CHECK:           %[[VAL_81:.*]] = constant %[[VAL_80]] {bb = 2 : ui32, name = #handshake.name<"constant10">, value = false} : i1
// CHECK:           %[[VAL_82:.*]] = arith.extsi %[[VAL_81]] {bb = 2 : ui32, name = #handshake.name<"extsi3">} : i1 to i32
// CHECK:           %[[VAL_83:.*]] = source {bb = 2 : ui32, name = #handshake.name<"source3">}
// CHECK:           %[[VAL_84:.*]] = constant %[[VAL_83]] {bb = 2 : ui32, name = #handshake.name<"constant11">, value = 2 : i3} : i3
// CHECK:           %[[VAL_85:.*]] = arith.extsi %[[VAL_84]] {bb = 2 : ui32, name = #handshake.name<"extsi4">} : i3 to i32
// CHECK:           %[[VAL_86:.*]] = spec_commit{{\[}}%[[VAL_47]]] %[[VAL_73]]#1 {bb = 2 : ui32, name = #handshake.name<"spec_commit2">} : i32
// CHECK:           %[[VAL_5]], %[[VAL_87:.*]] = mc_load{{\[}}%[[VAL_86]]] %[[VAL_3]] {bb = 2 : ui32, name = #handshake.name<"mc_load0">} : i32, i32
// CHECK:           %[[VAL_88:.*]]:2 = fork [2] %[[VAL_87]] {bb = 2 : ui32, name = #handshake.name<"fork7">} : i32
// CHECK:           %[[VAL_89:.*]] = arith.shli %[[VAL_88]]#1, %[[VAL_85]] {bb = 2 : ui32, name = #handshake.name<"shli0">} : i32
// CHECK:           %[[VAL_90:.*]] = arith.addi %[[VAL_88]]#0, %[[VAL_89]] {bb = 2 : ui32, name = #handshake.name<"addi2">} : i32
// CHECK:           %[[VAL_91:.*]]:2 = fork [2] %[[VAL_90]] {bb = 2 : ui32, name = #handshake.name<"fork8">} : i32
// CHECK:           %[[VAL_92:.*]] = arith.cmpi sgt, %[[VAL_91]]#1, %[[VAL_79]] {bb = 2 : ui32, name = #handshake.name<"cmpi0">} : i32
// CHECK:           %[[VAL_93:.*]] = arith.select %[[VAL_92]], %[[VAL_91]]#0, %[[VAL_82]] {bb = 2 : ui32, name = #handshake.name<"select0">} : i32
// CHECK:           %[[VAL_94:.*]] = buffer [1] seq %[[VAL_51]] {bb = 2 : ui32, name = #handshake.name<"buffer18">} : i32
// CHECK:           %[[VAL_95:.*]] = buffer [1] fifo %[[VAL_94]] {bb = 2 : ui32, name = #handshake.name<"buffer19">} : i32
// CHECK:           %[[VAL_96:.*]] = spec_commit{{\[}}%[[VAL_52]]] %[[VAL_95]] {bb = 2 : ui32, name = #handshake.name<"spec_commit3">} : i32
// CHECK:           %[[VAL_24]] = arith.addi %[[VAL_96]], %[[VAL_93]] {bb = 2 : ui32, name = #handshake.name<"addi1">} : i32
// CHECK:           %[[VAL_19]] = arith.addi %[[VAL_73]]#0, %[[VAL_76]] {bb = 2 : ui32, name = #handshake.name<"addi0">} : i32
// CHECK:           %[[VAL_97:.*]] = buffer [1] seq %[[VAL_59]] {bb = 2 : ui32, name = #handshake.name<"buffer14">} : i32
// CHECK:           %[[VAL_26]] = buffer [1] fifo %[[VAL_97]] {bb = 2 : ui32, name = #handshake.name<"buffer15">} : i32
// CHECK:           %[[VAL_98:.*]] = buffer [1] seq %[[VAL_56]] {bb = 2 : ui32, name = #handshake.name<"buffer20">} : none
// CHECK:           %[[VAL_32]] = buffer [1] fifo %[[VAL_98]] {bb = 2 : ui32, name = #handshake.name<"buffer21">} : none
// CHECK:           %[[VAL_99:.*]] = spec_commit{{\[}}%[[VAL_53]]] %[[VAL_66]] {bb = 3 : ui32, name = #handshake.name<"spec_commit4">} : i32
// CHECK:           %[[VAL_100:.*]] = buffer [1] seq %[[VAL_99]] {bb = 3 : ui32, name = #handshake.name<"buffer22">} : i32
// CHECK:           %[[VAL_101:.*]] = buffer [1] fifo %[[VAL_100]] {bb = 3 : ui32, name = #handshake.name<"buffer23">} : i32
// CHECK:           %[[VAL_102:.*]] = d_return {bb = 3 : ui32, name = #handshake.name<"d_return0">} %[[VAL_101]] : i32
// CHECK:           end {bb = 3 : ui32, name = #handshake.name<"end0">} %[[VAL_102]], %[[VAL_4]] : i32, none
// CHECK:         }
handshake.func @if_loop_1(%arg0: memref<100xi32>, %arg1: i32, %arg2: none, ...) -> i32 attributes {argNames = ["a", "n", "start"], resNames = ["out0"]} {
  %memOutputs, %done = mem_controller[%arg0 : memref<100xi32>] (%addressResult) {connectedBlocks = [2 : i32], name = #handshake.name<"mem_controller0">} : (i32) -> (i32, none)
  %0 = buffer [1] seq %arg2 {bb = 0 : ui32, name = #handshake.name<"buffer2">} : none
  %1 = buffer [1] fifo %0 {bb = 0 : ui32, name = #handshake.name<"buffer3">} : none
  %2:2 = fork [2] %1 {bb = 0 : ui32, name = #handshake.name<"fork0">} : none
  %3 = constant %2#1 {bb = 0 : ui32, name = #handshake.name<"constant0">, value = false} : i1
  %4:2 = fork [2] %3 {bb = 0 : ui32, name = #handshake.name<"fork1">} : i1
  %5 = arith.extsi %4#0 {bb = 0 : ui32, name = #handshake.name<"extsi5">} : i1 to i32
  %6 = arith.extsi %4#1 {bb = 0 : ui32, name = #handshake.name<"extsi6">} : i1 to i32
  %7 = buffer [1] seq %arg1 {bb = 0 : ui32, name = #handshake.name<"buffer0">} : i32
  %8 = buffer [1] fifo %7 {bb = 0 : ui32, name = #handshake.name<"buffer1">} : i32
  %9 = mux %20#2 [%51, %5] {bb = 1 : ui32, name = #handshake.name<"mux0">} : i1, i32
  %10 = buffer [1] seq %9 {bb = 1 : ui32, name = #handshake.name<"buffer4">} : i32
  %11 = buffer [1] fifo %10 {bb = 1 : ui32, name = #handshake.name<"buffer5">} : i32
  %12:2 = fork [2] %11 {bb = 1 : ui32, name = #handshake.name<"fork2">} : i32
  %13 = mux %20#1 [%50, %6] {bb = 1 : ui32, name = #handshake.name<"mux1">} : i1, i32
  %14 = mux %20#0 [%53, %8] {bb = 1 : ui32, name = #handshake.name<"mux2">} : i1, i32
  %15 = buffer [1] seq %14 {bb = 1 : ui32, name = #handshake.name<"buffer8">} : i32
  %16 = buffer [1] fifo %15 {bb = 1 : ui32, name = #handshake.name<"buffer9">} : i32
  %17:2 = fork [2] %16 {bb = 1 : ui32, name = #handshake.name<"fork3">} : i32
  %result, %index = control_merge %55, %2#0 {bb = 1 : ui32, name = #handshake.name<"control_merge3">} : none, i1
  %18 = buffer [1] seq %index {bb = 1 : ui32, name = #handshake.name<"buffer12">} : i1
  %19 = buffer [1] fifo %18 {bb = 1 : ui32, name = #handshake.name<"buffer13">} : i1
  %20:3 = fork [3] %19 {bb = 1 : ui32, name = #handshake.name<"fork4">} : i1
  %21 = arith.cmpi ult, %12#1, %17#1 {bb = 1 : ui32, name = #handshake.name<"cmpi1">} : i32
  %22:4 = fork [4] %21 {bb = 1 : ui32, name = #handshake.name<"fork5">} : i1
  %trueResult, %falseResult = cond_br %22#3, %17#0 {bb = 1 : ui32, name = #handshake.name<"cond_br1">} : i32
  sink %falseResult {name = #handshake.name<"sink0">} : i32
  %trueResult_0, %falseResult_1 = cond_br %22#2, %12#0 {bb = 1 : ui32, name = #handshake.name<"cond_br2">} : i32
  sink %falseResult_1 {name = #handshake.name<"sink1">} : i32
  %23 = buffer [1] seq %13 {bb = 1 : ui32, name = #handshake.name<"buffer6">} : i32
  %24 = buffer [1] fifo %23 {bb = 1 : ui32, name = #handshake.name<"buffer7">} : i32
  %trueResult_2, %falseResult_3 = cond_br %22#1, %24 {bb = 1 : ui32, name = #handshake.name<"cond_br3">} : i32
  %25 = buffer [1] seq %result {bb = 1 : ui32, name = #handshake.name<"buffer10">} : none
  %26 = buffer [1] fifo %25 {bb = 1 : ui32, name = #handshake.name<"buffer11">} : none
  %trueResult_4, %falseResult_5 = cond_br %22#0, %26 {bb = 1 : ui32, name = #handshake.name<"cond_br4">} : none
  sink %falseResult_5 {name = #handshake.name<"sink2">} : none
  %27 = buffer [1] seq %trueResult_0 {bb = 2 : ui32, name = #handshake.name<"buffer16">} : i32
  %28 = buffer [1] fifo %27 {bb = 2 : ui32, name = #handshake.name<"buffer17">} : i32
  %29:2 = fork [2] %28 {bb = 2 : ui32, name = #handshake.name<"fork6">} : i32
  %30 = source {bb = 2 : ui32, name = #handshake.name<"source0">}
  %31 = constant %30 {bb = 2 : ui32, name = #handshake.name<"constant4">, value = 1 : i2} : i2
  %32 = arith.extsi %31 {bb = 2 : ui32, name = #handshake.name<"extsi1">} : i2 to i32
  %33 = source {bb = 2 : ui32, name = #handshake.name<"source1">}
  %34 = constant %33 {bb = 2 : ui32, name = #handshake.name<"constant9">, value = 10 : i5} : i5
  %35 = arith.extsi %34 {bb = 2 : ui32, name = #handshake.name<"extsi2">} : i5 to i32
  %36 = source {bb = 2 : ui32, name = #handshake.name<"source2">}
  %37 = constant %36 {bb = 2 : ui32, name = #handshake.name<"constant10">, value = false} : i1
  %38 = arith.extsi %37 {bb = 2 : ui32, name = #handshake.name<"extsi3">} : i1 to i32
  %39 = source {bb = 2 : ui32, name = #handshake.name<"source3">}
  %40 = constant %39 {bb = 2 : ui32, name = #handshake.name<"constant11">, value = 2 : i3} : i3
  %41 = arith.extsi %40 {bb = 2 : ui32, name = #handshake.name<"extsi4">} : i3 to i32
  %addressResult, %dataResult = mc_load[%29#1] %memOutputs {bb = 2 : ui32, name = #handshake.name<"mc_load0">} : i32, i32
  %42:2 = fork [2] %dataResult {bb = 2 : ui32, name = #handshake.name<"fork7">} : i32
  %43 = arith.shli %42#1, %41 {bb = 2 : ui32, name = #handshake.name<"shli0">} : i32
  %44 = arith.addi %42#0, %43 {bb = 2 : ui32, name = #handshake.name<"addi2">} : i32
  %45:2 = fork [2] %44 {bb = 2 : ui32, name = #handshake.name<"fork8">} : i32
  %46 = arith.cmpi sgt, %45#1, %35 {bb = 2 : ui32, name = #handshake.name<"cmpi0">} : i32
  %47 = arith.select %46, %45#0, %38 {bb = 2 : ui32, name = #handshake.name<"select0">} : i32
  %48 = buffer [1] seq %trueResult_2 {bb = 2 : ui32, name = #handshake.name<"buffer18">} : i32
  %49 = buffer [1] fifo %48 {bb = 2 : ui32, name = #handshake.name<"buffer19">} : i32
  %50 = arith.addi %49, %47 {bb = 2 : ui32, name = #handshake.name<"addi1">} : i32
  %51 = arith.addi %29#0, %32 {bb = 2 : ui32, name = #handshake.name<"addi0">} : i32
  %52 = buffer [1] seq %trueResult {bb = 2 : ui32, name = #handshake.name<"buffer14">} : i32
  %53 = buffer [1] fifo %52 {bb = 2 : ui32, name = #handshake.name<"buffer15">} : i32
  %54 = buffer [1] seq %trueResult_4 {bb = 2 : ui32, name = #handshake.name<"buffer20">} : none
  %55 = buffer [1] fifo %54 {bb = 2 : ui32, name = #handshake.name<"buffer21">} : none
  %56 = buffer [1] seq %falseResult_3 {bb = 3 : ui32, name = #handshake.name<"buffer22">} : i32
  %57 = buffer [1] fifo %56 {bb = 3 : ui32, name = #handshake.name<"buffer23">} : i32
  %58 = d_return {bb = 3 : ui32, name = #handshake.name<"d_return0">} %57 : i32
  end {bb = 3 : ui32, name = #handshake.name<"end0">} %58, %done : i32, none
}
