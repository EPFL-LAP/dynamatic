// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --handshake-speculation="json-path=%S/saveCommitTest.json"

// CHECK:           %[[VAL_4:.*]] = spec_save_commit{{\[}}%[[VAL_5:.*]]] %[[VAL_1]] {bb = 0 : ui32, name = #[[?]]<"spec_save_commit0">} : i1
// CHECK:           %[[VAL_6:.*]] = spec_save_commit{{\[}}%[[VAL_5]]] %[[VAL_7:.*]]#2 {bb = 0 : ui32, name = #[[?]]<"spec_save_commit1">} : i1
// CHECK:           %[[VAL_3]], %[[VAL_8:.*]] = cond_br %[[VAL_6]], %[[VAL_4]] {bb = 0 : ui32, name = #[[?]]<"cond_br0">} : i1
// CHECK:           %[[VAL_13:.*]], %[[VAL_14:.*]], %[[VAL_15:.*]], %[[VAL_16:.*]], %[[VAL_17:.*]], %[[VAL_18:.*]] = speculator %[[VAL_7]]#1 {bb = 0 : ui32, name = #[[?]]<"speculator0">} : i1
// CHECK:           %[[VAL_19:.*]], %[[VAL_20:.*]] = speculating_branch{{\[}}%[[VAL_13]]] %[[VAL_6]] {bb = 0 : ui32, name = #[[?]]<"speculating_branch0">} : i1, i1
// CHECK:           %[[VAL_21:.*]], %[[VAL_22:.*]] = cond_br %[[VAL_19]], %[[VAL_17]] {bb = 0 : ui32, name = #[[?]]<"cond_br2">} : i3
// CHECK:           %[[VAL_23:.*]], %[[VAL_24:.*]] = cond_br %[[VAL_18]], %[[VAL_21]] {bb = 0 : ui32, name = #[[?]]<"cond_br3">} : i3
// CHECK:           %[[VAL_5]] = merge %[[VAL_16]], %[[VAL_23]] {bb = 0 : ui32, name = #[[?]]<"merge0">} : i3
// CHECK:           %[[VAL_25:.*]], %[[VAL_26:.*]] = speculating_branch{{\[}}%[[VAL_12]]] %[[VAL_27:.*]] {bb = 0 : ui32, name = #[[?]]<"speculating_branch1">} : i1, i1
// CHECK:           %[[VAL_28:.*]], %[[VAL_29:.*]] = cond_br %[[VAL_25]], %[[VAL_15]] {bb = 0 : ui32, name = #[[?]]<"cond_br4">} : i1
// CHECK:           %[[VAL_30:.*]], %[[VAL_31:.*]] = speculating_branch{{\[}}%[[VAL_3]]] %[[VAL_6]] {bb = 0 : ui32, name = #[[?]]<"speculating_branch2">} : i1, i1
// CHECK:           %[[VAL_32:.*]], %[[VAL_33:.*]] = cond_br %[[VAL_30]], %[[VAL_28]] {bb = 0 : ui32, name = #[[?]]<"cond_br5">} : i1
// CHECK:           %[[VAL_27]] = spec_save_commit{{\[}}%[[VAL_5]]] %[[VAL_7]]#0 {bb = 0 : ui32, name = #[[?]]<"spec_save_commit2">} : i1
// CHECK:           %[[VAL_12]], %[[VAL_34:.*]] = cond_br %[[VAL_27]], %[[VAL_13]] {bb = 0 : ui32, name = #[[?]]<"cond_br1">} : i1
// CHECK:           %[[VAL_35:.*]] = spec_commit{{\[}}%[[VAL_33]]] %[[VAL_8]] {bb = 0 : ui32, name = #[[?]]<"spec_commit0">} : i1
handshake.func @placeSaveCommitsOnAllPaths(%start: i1) {
  %result, %index = control_merge %trueResult, %start {bb = 0 : ui32, name = #handshake.name<"control_merge0">} : i1, i1
  %trueResult, %falseResult = cond_br %3#2, %result {bb = 0 : ui32, name = #handshake.name<"cond_br0">} : i1
  %0 = source {bb = 0 : ui32, name = #handshake.name<"source1">}
  %1 = constant %0 {bb = 0 : ui32, name = #handshake.name<"constant0">, value = 1 : i1} : i1
  %2 = mux %index [%trueResult1, %1] {bb = 0 : ui32, name = #handshake.name<"mux0">} : i1, i1
  %3:3 = fork [3] %2  {bb = 0 : ui32, name = #handshake.name<"fork0">} : i1
  %trueResult1, %falseResult1 = cond_br %3#0, %3#1 {bb = 0 : ui32, name = #handshake.name<"cond_br1">} : i1
  end {bb = 0 : ui32, name = #handshake.name<"end0">} %falseResult  : i1
}
