// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --handshake-speculation="json-path=%S/iir-test.json"

// CHECK-LABEL:   handshake.func @iir(
// CHECK-SAME:                        %[[VAL_0:.*]]: memref<1000xi32>,
// CHECK-SAME:                        %[[VAL_1:.*]]: memref<1000xi32>,
// CHECK-SAME:                        %[[VAL_2:.*]]: i32,
// CHECK-SAME:                        %[[VAL_3:.*]]: i32,
// CHECK-SAME:                        %[[VAL_4:.*]]: none, ...) -> i32 attributes {argNames = ["y", "x", "a", "b", "start"], resNames = ["out0"]} {
// CHECK:           %[[VAL_5:.*]], %[[VAL_6:.*]] = mem_controller{{\[}}%[[VAL_1]] : memref<1000xi32>] (%[[VAL_7:.*]]) {bufProps = #handshake<bufProps{"0": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, connectedBlocks = [1 : i32], name = #handshake.name<"mem_controller0">} : (i32) -> (i32, none)
// CHECK:           %[[VAL_8:.*]], %[[VAL_9:.*]] = mem_controller{{\[}}%[[VAL_0]] : memref<1000xi32>] (%[[VAL_10:.*]], %[[VAL_11:.*]], %[[VAL_12:.*]], %[[VAL_13:.*]]) {bufProps = #handshake<bufProps{"0": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "2": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "3": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "4": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, connectedBlocks = [0 : i32, 1 : i32], name = #handshake.name<"mem_controller1">} : (i32, i32, i32, i32) -> (i32, none)
// CHECK:           %[[VAL_14:.*]] = buffer [1] seq %[[VAL_4]] {bb = 0 : ui32, name = #handshake.name<"buffer4">} : none
// CHECK:           %[[VAL_15:.*]] = buffer [1] fifo %[[VAL_14]] {bb = 0 : ui32, name = #handshake.name<"buffer5">} : none
// CHECK:           %[[VAL_16:.*]]:3 = fork [3] %[[VAL_15]] {bb = 0 : ui32, name = #handshake.name<"fork0">} : none
// CHECK:           %[[VAL_17:.*]] = constant %[[VAL_16]]#2 {bb = 0 : ui32, name = #handshake.name<"constant2">, value = false} : i1
// CHECK:           %[[VAL_18:.*]] = arith.extsi %[[VAL_17]] {bb = 0 : ui32, name = #handshake.name<"extsi0">} : i1 to i32
// CHECK:           %[[VAL_19:.*]] = constant %[[VAL_16]]#1 {bb = 0 : ui32, name = #handshake.name<"constant5">, value = 1 : i2} : i2
// CHECK:           %[[VAL_10]], %[[VAL_20:.*]] = mc_load{{\[}}%[[VAL_18]]] %[[VAL_8]] {bb = 0 : ui32, bufProps = #handshake<bufProps{"1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, name = #handshake.name<"mc_load0">} : i32, i32
// CHECK:           %[[VAL_21:.*]] = arith.extsi %[[VAL_19]] {bb = 0 : ui32, name = #handshake.name<"extsi5">} : i2 to i11
// CHECK:           %[[VAL_22:.*]] = buffer [1] seq %[[VAL_2]] {bb = 0 : ui32, name = #handshake.name<"buffer0">} : i32
// CHECK:           %[[VAL_23:.*]] = buffer [1] fifo %[[VAL_22]] {bb = 0 : ui32, name = #handshake.name<"buffer1">} : i32
// CHECK:           %[[VAL_24:.*]] = buffer [1] seq %[[VAL_3]] {bb = 0 : ui32, name = #handshake.name<"buffer2">} : i32
// CHECK:           %[[VAL_25:.*]] = buffer [1] fifo %[[VAL_24]] {bb = 0 : ui32, name = #handshake.name<"buffer3">} : i32
// CHECK:           %[[VAL_26:.*]] = spec_save_commit{{\[}}%[[VAL_27:.*]]] %[[VAL_28:.*]]#0 {bb = 1 : ui32, name = #handshake.name<"spec_save_commit0">} : i1
// CHECK:           %[[VAL_29:.*]] = mux %[[VAL_26]] {{\[}}%[[VAL_30:.*]], %[[VAL_21]]] {bb = 1 : ui32, name = #handshake.name<"mux4">} : i1, i11
// CHECK:           %[[VAL_31:.*]] = buffer [1] seq %[[VAL_29]] {bb = 1 : ui32, name = #handshake.name<"buffer6">} : i11
// CHECK:           %[[VAL_32:.*]] = buffer [1] fifo %[[VAL_31]] {bb = 1 : ui32, name = #handshake.name<"buffer7">} : i11
// CHECK:           %[[VAL_33:.*]]:2 = fork [2] %[[VAL_32]] {bb = 1 : ui32, name = #handshake.name<"fork1">} : i11
// CHECK:           %[[VAL_34:.*]] = arith.extsi %[[VAL_33]]#0 {bb = 1 : ui32, name = #handshake.name<"extsi6">} : i11 to i12
// CHECK:           %[[VAL_35:.*]] = arith.extsi %[[VAL_33]]#1 {bb = 1 : ui32, name = #handshake.name<"extsi7">} : i11 to i32
// CHECK:           %[[VAL_36:.*]]:2 = fork [2] %[[VAL_35]] {bb = 1 : ui32, name = #handshake.name<"fork2">} : i32
// CHECK:           %[[VAL_37:.*]] = spec_save{{\[}}%[[VAL_38:.*]]] %[[VAL_39:.*]] {bb = 1 : ui32, name = #handshake.name<"spec_save0">} : i32
// CHECK:           %[[VAL_40:.*]] = mux %[[VAL_28]]#3 {{\[}}%[[VAL_37]], %[[VAL_20]]] {bb = 1 : ui32, name = #handshake.name<"mux1">} : i1, i32
// CHECK:           %[[VAL_41:.*]] = spec_save{{\[}}%[[VAL_38]]] %[[VAL_42:.*]] {bb = 1 : ui32, name = #handshake.name<"spec_save1">} : i32
// CHECK:           %[[VAL_43:.*]] = mux %[[VAL_28]]#2 {{\[}}%[[VAL_41]], %[[VAL_23]]] {bb = 1 : ui32, name = #handshake.name<"mux2">} : i1, i32
// CHECK:           %[[VAL_44:.*]] = buffer [1] seq %[[VAL_43]] {bb = 1 : ui32, name = #handshake.name<"buffer10">} : i32
// CHECK:           %[[VAL_45:.*]] = buffer [1] fifo %[[VAL_44]] {bb = 1 : ui32, name = #handshake.name<"buffer11">} : i32
// CHECK:           %[[VAL_46:.*]]:2 = fork [2] %[[VAL_45]] {bb = 1 : ui32, name = #handshake.name<"fork3">} : i32
// CHECK:           %[[VAL_47:.*]] = spec_save{{\[}}%[[VAL_38]]] %[[VAL_48:.*]] {bb = 1 : ui32, name = #handshake.name<"spec_save2">} : i32
// CHECK:           %[[VAL_49:.*]] = mux %[[VAL_28]]#1 {{\[}}%[[VAL_47]], %[[VAL_25]]] {bb = 1 : ui32, name = #handshake.name<"mux3">} : i1, i32
// CHECK:           %[[VAL_50:.*]] = buffer [1] seq %[[VAL_49]] {bb = 1 : ui32, name = #handshake.name<"buffer12">} : i32
// CHECK:           %[[VAL_51:.*]] = buffer [1] fifo %[[VAL_50]] {bb = 1 : ui32, name = #handshake.name<"buffer13">} : i32
// CHECK:           %[[VAL_52:.*]]:2 = fork [2] %[[VAL_51]] {bb = 1 : ui32, name = #handshake.name<"fork4">} : i32
// CHECK:           %[[VAL_53:.*]], %[[VAL_54:.*]] = control_merge %[[VAL_55:.*]], %[[VAL_16]]#0 {bb = 1 : ui32, name = #handshake.name<"control_merge2">} : none, i1
// CHECK:           %[[VAL_56:.*]], %[[VAL_38]], %[[VAL_57:.*]], %[[VAL_58:.*]], %[[VAL_59:.*]], %[[VAL_60:.*]] = speculator %[[VAL_54]] {bb = 1 : ui32, name = #handshake.name<"speculator0">} : i1
// CHECK:           %[[VAL_61:.*]], %[[VAL_62:.*]] = speculating_branch{{\[}}%[[VAL_30]]] %[[VAL_63:.*]]#0 {name = #handshake.name<"speculating_branch0">} : i11, i1
// CHECK:           %[[VAL_64:.*]], %[[VAL_65:.*]] = cond_br %[[VAL_61]], %[[VAL_58]] {name = #handshake.name<"cond_br1">} : i3
// CHECK:           %[[VAL_66:.*]], %[[VAL_67:.*]] = cond_br %[[VAL_60]], %[[VAL_64]] {name = #handshake.name<"cond_br6">} : i3
// CHECK:           %[[VAL_27]] = merge %[[VAL_59]], %[[VAL_66]] {name = #handshake.name<"merge0">} : i3
// CHECK:           %[[VAL_68:.*]], %[[VAL_69:.*]] = speculating_branch{{\[}}%[[VAL_39]]] %[[VAL_63]]#1 {name = #handshake.name<"speculating_branch1">} : i32, i1
// CHECK:           %[[VAL_70:.*]], %[[VAL_71:.*]] = cond_br %[[VAL_68]], %[[VAL_57]] {name = #handshake.name<"cond_br7">} : i1
// CHECK:           %[[VAL_28]]:4 = fork [4] %[[VAL_56]] {bb = 1 : ui32, name = #handshake.name<"fork5">} : i1
// CHECK:           %[[VAL_72:.*]] = buffer [1] seq %[[VAL_53]] {bb = 1 : ui32, name = #handshake.name<"buffer14">} : none
// CHECK:           %[[VAL_73:.*]] = buffer [1] fifo %[[VAL_72]] {bb = 1 : ui32, name = #handshake.name<"buffer15">} : none
// CHECK:           %[[VAL_74:.*]]:2 = fork [2] %[[VAL_73]] {bb = 1 : ui32, name = #handshake.name<"fork6">} : none
// CHECK:           %[[VAL_75:.*]] = constant %[[VAL_74]]#0 {bb = 1 : ui32, name = #handshake.name<"constant6">, value = 1 : i2} : i2
// CHECK:           %[[VAL_11]] = arith.extsi %[[VAL_75]] {bb = 1 : ui32, name = #handshake.name<"extsi2">} : i2 to i32
// CHECK:           %[[VAL_76:.*]] = source {bb = 1 : ui32, name = #handshake.name<"source0">}
// CHECK:           %[[VAL_77:.*]] = constant %[[VAL_76]] {bb = 1 : ui32, name = #handshake.name<"constant7">, value = 1000 : i11} : i11
// CHECK:           %[[VAL_78:.*]] = arith.extsi %[[VAL_77]] {bb = 1 : ui32, name = #handshake.name<"extsi8">} : i11 to i12
// CHECK:           %[[VAL_79:.*]] = source {bb = 1 : ui32, name = #handshake.name<"source1">}
// CHECK:           %[[VAL_80:.*]] = constant %[[VAL_79]] {bb = 1 : ui32, name = #handshake.name<"constant8">, value = 1 : i2} : i2
// CHECK:           %[[VAL_81:.*]] = arith.extsi %[[VAL_80]] {bb = 1 : ui32, name = #handshake.name<"extsi9">} : i2 to i12
// CHECK:           %[[VAL_82:.*]] = buffer [1] seq %[[VAL_40]] {bb = 1 : ui32, name = #handshake.name<"buffer8">} : i32
// CHECK:           %[[VAL_83:.*]] = buffer [1] fifo %[[VAL_82]] {bb = 1 : ui32, name = #handshake.name<"buffer9">} : i32
// CHECK:           %[[VAL_84:.*]] = arith.muli %[[VAL_46]]#1, %[[VAL_83]] {bb = 1 : ui32, name = #handshake.name<"muli0">} : i32
// CHECK:           %[[VAL_7]], %[[VAL_85:.*]] = mc_load{{\[}}%[[VAL_36]]#0] %[[VAL_5]] {bb = 1 : ui32, bufProps = #handshake<bufProps{"1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, name = #handshake.name<"mc_load1">} : i32, i32
// CHECK:           %[[VAL_86:.*]] = spec_save{{\[}}%[[VAL_38]]] %[[VAL_85]] {bb = 1 : ui32, name = #handshake.name<"spec_save3">} : i32
// CHECK:           %[[VAL_87:.*]] = arith.muli %[[VAL_52]]#1, %[[VAL_86]] {bb = 1 : ui32, name = #handshake.name<"muli1">} : i32
// CHECK:           %[[VAL_88:.*]] = arith.addi %[[VAL_84]], %[[VAL_87]] {bb = 1 : ui32, name = #handshake.name<"addi0">} : i32
// CHECK:           %[[VAL_89:.*]]:2 = fork [2] %[[VAL_88]] {bb = 1 : ui32, name = #handshake.name<"fork7">} : i32
// CHECK:           %[[VAL_90:.*]] = spec_commit{{\[}}%[[VAL_70]]] %[[VAL_89]]#1 {bb = 1 : ui32, name = #handshake.name<"spec_commit0">} : i32
// CHECK:           %[[VAL_12]], %[[VAL_13]] = mc_store{{\[}}%[[VAL_36]]#1] %[[VAL_90]] {bb = 1 : ui32, name = #handshake.name<"mc_store0">} : i32, i32
// CHECK:           %[[VAL_91:.*]] = arith.addi %[[VAL_34]], %[[VAL_81]] {bb = 1 : ui32, name = #handshake.name<"addi2">} : i12
// CHECK:           %[[VAL_92:.*]]:2 = fork [2] %[[VAL_91]] {bb = 1 : ui32, name = #handshake.name<"fork8">} : i12
// CHECK:           %[[VAL_93:.*]] = arith.trunci %[[VAL_92]]#0 {bb = 1 : ui32, name = #handshake.name<"trunci0">} : i12 to i11
// CHECK:           %[[VAL_94:.*]] = arith.cmpi ult, %[[VAL_92]]#1, %[[VAL_78]] {bb = 1 : ui32, name = #handshake.name<"cmpi1">} : i12
// CHECK:           %[[VAL_63]]:5 = fork [5] %[[VAL_94]] {bb = 1 : ui32, name = #handshake.name<"fork9">} : i1
// CHECK:           %[[VAL_95:.*]] = spec_save{{\[}}%[[VAL_38]]] %[[VAL_93]] {bb = 1 : ui32, name = #handshake.name<"spec_save4">} : i11
// CHECK:           %[[VAL_30]], %[[VAL_96:.*]] = cond_br %[[VAL_63]]#0, %[[VAL_95]] {bb = 1 : ui32, name = #handshake.name<"cond_br0">} : i11
// CHECK:           sink %[[VAL_96]] {name = #handshake.name<"sink0">} : i11
// CHECK:           %[[VAL_97:.*]] = spec_save{{\[}}%[[VAL_38]]] %[[VAL_89]]#0 {bb = 1 : ui32, name = #handshake.name<"spec_save5">} : i32
// CHECK:           %[[VAL_39]], %[[VAL_98:.*]] = cond_br %[[VAL_63]]#1, %[[VAL_97]] {bb = 1 : ui32, name = #handshake.name<"cond_br2">} : i32
// CHECK:           %[[VAL_99:.*]] = spec_save{{\[}}%[[VAL_38]]] %[[VAL_46]]#0 {bb = 1 : ui32, name = #handshake.name<"spec_save6">} : i32
// CHECK:           %[[VAL_42]], %[[VAL_100:.*]] = cond_br %[[VAL_63]]#2, %[[VAL_99]] {bb = 1 : ui32, name = #handshake.name<"cond_br3">} : i32
// CHECK:           sink %[[VAL_100]] {name = #handshake.name<"sink1">} : i32
// CHECK:           %[[VAL_101:.*]] = spec_save{{\[}}%[[VAL_38]]] %[[VAL_52]]#0 {bb = 1 : ui32, name = #handshake.name<"spec_save7">} : i32
// CHECK:           %[[VAL_48]], %[[VAL_102:.*]] = cond_br %[[VAL_63]]#3, %[[VAL_101]] {bb = 1 : ui32, name = #handshake.name<"cond_br4">} : i32
// CHECK:           sink %[[VAL_102]] {name = #handshake.name<"sink2">} : i32
// CHECK:           %[[VAL_103:.*]] = spec_save{{\[}}%[[VAL_38]]] %[[VAL_74]]#1 {bb = 1 : ui32, name = #handshake.name<"spec_save8">} : none
// CHECK:           %[[VAL_55]], %[[VAL_104:.*]] = cond_br %[[VAL_63]]#4, %[[VAL_103]] {bb = 1 : ui32, name = #handshake.name<"cond_br5">} : none
// CHECK:           sink %[[VAL_104]] {name = #handshake.name<"sink3">} : none
// CHECK:           %[[VAL_105:.*]] = spec_commit{{\[}}%[[VAL_71]]] %[[VAL_98]] {bb = 2 : ui32, name = #handshake.name<"spec_commit1">} : i32
// CHECK:           %[[VAL_106:.*]] = buffer [1] seq %[[VAL_105]] {bb = 2 : ui32, name = #handshake.name<"buffer16">} : i32
// CHECK:           %[[VAL_107:.*]] = buffer [1] fifo %[[VAL_106]] {bb = 2 : ui32, name = #handshake.name<"buffer17">} : i32
// CHECK:           %[[VAL_108:.*]] = d_return {bb = 2 : ui32, name = #handshake.name<"d_return0">} %[[VAL_107]] : i32
// CHECK:           end {bb = 2 : ui32, bufProps = #handshake<bufProps{"1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "2": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, name = #handshake.name<"end0">} %[[VAL_108]], %[[VAL_6]], %[[VAL_9]] : i32, none, none
// CHECK:         }
handshake.func @iir(%arg0: memref<1000xi32>, %arg1: memref<1000xi32>, %arg2: i32, %arg3: i32, %arg4: none, ...) -> i32 attributes {argNames = ["y", "x", "a", "b", "start"], resNames = ["out0"]} {
  %memOutputs, %done = mem_controller[%arg1 : memref<1000xi32>] (%addressResult_2) {bufProps = #handshake<bufProps{"0": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, connectedBlocks = [1 : i32], name = #handshake.name<"mem_controller0">} : (i32) -> (i32, none)
  %memOutputs_0, %done_1 = mem_controller[%arg0 : memref<1000xi32>] (%addressResult, %32, %addressResult_4, %dataResult_5) {bufProps = #handshake<bufProps{"0": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "2": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "3": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "4": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, connectedBlocks = [0 : i32, 1 : i32], name = #handshake.name<"mem_controller1">} : (i32, i32, i32, i32) -> (i32, none)
  %0 = buffer [1] seq %arg4 {bb = 0 : ui32, name = #handshake.name<"buffer4">} : none
  %1 = buffer [1] fifo %0 {bb = 0 : ui32, name = #handshake.name<"buffer5">} : none
  %2:3 = fork [3] %1 {bb = 0 : ui32, name = #handshake.name<"fork0">} : none
  %3 = constant %2#2 {bb = 0 : ui32, name = #handshake.name<"constant2">, value = false} : i1
  %4 = arith.extsi %3 {bb = 0 : ui32, name = #handshake.name<"extsi0">} : i1 to i32
  %5 = constant %2#1 {bb = 0 : ui32, name = #handshake.name<"constant5">, value = 1 : i2} : i2
  %addressResult, %dataResult = mc_load[%4] %memOutputs_0 {bb = 0 : ui32, bufProps = #handshake<bufProps{"1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, name = #handshake.name<"mc_load0">} : i32, i32
  %6 = arith.extsi %5 {bb = 0 : ui32, name = #handshake.name<"extsi5">} : i2 to i11
  %7 = buffer [1] seq %arg2 {bb = 0 : ui32, name = #handshake.name<"buffer0">} : i32
  %8 = buffer [1] fifo %7 {bb = 0 : ui32, name = #handshake.name<"buffer1">} : i32
  %9 = buffer [1] seq %arg3 {bb = 0 : ui32, name = #handshake.name<"buffer2">} : i32
  %10 = buffer [1] fifo %9 {bb = 0 : ui32, name = #handshake.name<"buffer3">} : i32
  %11 = mux %27#0 [%trueResult, %6] {bb = 1 : ui32, name = #handshake.name<"mux4">} : i1, i11
  %12 = buffer [1] seq %11 {bb = 1 : ui32, name = #handshake.name<"buffer6">} : i11
  %13 = buffer [1] fifo %12 {bb = 1 : ui32, name = #handshake.name<"buffer7">} : i11
  %14:2 = fork [2] %13 {bb = 1 : ui32, name = #handshake.name<"fork1">} : i11
  %15 = arith.extsi %14#0 {bb = 1 : ui32, name = #handshake.name<"extsi6">} : i11 to i12
  %16 = arith.extsi %14#1 {bb = 1 : ui32, name = #handshake.name<"extsi7">} : i11 to i32
  %17:2 = fork [2] %16 {bb = 1 : ui32, name = #handshake.name<"fork2">} : i32
  %18 = mux %27#3 [%trueResult_6, %dataResult] {bb = 1 : ui32, name = #handshake.name<"mux1">} : i1, i32
  %19 = mux %27#2 [%trueResult_8, %8] {bb = 1 : ui32, name = #handshake.name<"mux2">} : i1, i32
  %20 = buffer [1] seq %19 {bb = 1 : ui32, name = #handshake.name<"buffer10">} : i32
  %21 = buffer [1] fifo %20 {bb = 1 : ui32, name = #handshake.name<"buffer11">} : i32
  %22:2 = fork [2] %21 {bb = 1 : ui32, name = #handshake.name<"fork3">} : i32
  %23 = mux %27#1 [%trueResult_10, %10] {bb = 1 : ui32, name = #handshake.name<"mux3">} : i1, i32
  %24 = buffer [1] seq %23 {bb = 1 : ui32, name = #handshake.name<"buffer12">} : i32
  %25 = buffer [1] fifo %24 {bb = 1 : ui32, name = #handshake.name<"buffer13">} : i32
  %26:2 = fork [2] %25 {bb = 1 : ui32, name = #handshake.name<"fork4">} : i32
  %result, %index = control_merge %trueResult_12, %2#0 {bb = 1 : ui32, name = #handshake.name<"control_merge2">} : none, i1
  %27:4 = fork [4] %index {bb = 1 : ui32, name = #handshake.name<"fork5">} : i1
  %28 = buffer [1] seq %result {bb = 1 : ui32, name = #handshake.name<"buffer14">} : none
  %29 = buffer [1] fifo %28 {bb = 1 : ui32, name = #handshake.name<"buffer15">} : none
  %30:2 = fork [2] %29 {bb = 1 : ui32, name = #handshake.name<"fork6">} : none
  %31 = constant %30#0 {bb = 1 : ui32, name = #handshake.name<"constant6">, value = 1 : i2} : i2
  %32 = arith.extsi %31 {bb = 1 : ui32, name = #handshake.name<"extsi2">} : i2 to i32
  %33 = source {bb = 1 : ui32, name = #handshake.name<"source0">}
  %34 = constant %33 {bb = 1 : ui32, name = #handshake.name<"constant7">, value = 1000 : i11} : i11
  %35 = arith.extsi %34 {bb = 1 : ui32, name = #handshake.name<"extsi8">} : i11 to i12
  %36 = source {bb = 1 : ui32, name = #handshake.name<"source1">}
  %37 = constant %36 {bb = 1 : ui32, name = #handshake.name<"constant8">, value = 1 : i2} : i2
  %38 = arith.extsi %37 {bb = 1 : ui32, name = #handshake.name<"extsi9">} : i2 to i12
  %39 = buffer [1] seq %18 {bb = 1 : ui32, name = #handshake.name<"buffer8">} : i32
  %40 = buffer [1] fifo %39 {bb = 1 : ui32, name = #handshake.name<"buffer9">} : i32
  %41 = arith.muli %22#1, %40 {bb = 1 : ui32, name = #handshake.name<"muli0">} : i32
  %addressResult_2, %dataResult_3 = mc_load[%17#0] %memOutputs {bb = 1 : ui32, bufProps = #handshake<bufProps{"1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, name = #handshake.name<"mc_load1">} : i32, i32
  %42 = arith.muli %26#1, %dataResult_3 {bb = 1 : ui32, name = #handshake.name<"muli1">} : i32
  %43 = arith.addi %41, %42 {bb = 1 : ui32, name = #handshake.name<"addi0">} : i32
  %44:2 = fork [2] %43 {bb = 1 : ui32, name = #handshake.name<"fork7">} : i32
  %addressResult_4, %dataResult_5 = mc_store[%17#1] %44#1 {bb = 1 : ui32, name = #handshake.name<"mc_store0">} : i32, i32
  %45 = arith.addi %15, %38 {bb = 1 : ui32, name = #handshake.name<"addi2">} : i12
  %46:2 = fork [2] %45 {bb = 1 : ui32, name = #handshake.name<"fork8">} : i12
  %47 = arith.trunci %46#0 {bb = 1 : ui32, name = #handshake.name<"trunci0">} : i12 to i11
  %48 = arith.cmpi ult, %46#1, %35 {bb = 1 : ui32, name = #handshake.name<"cmpi1">} : i12
  %49:5 = fork [5] %48 {bb = 1 : ui32, name = #handshake.name<"fork9">} : i1
  %trueResult, %falseResult = cond_br %49#0, %47 {bb = 1 : ui32, name = #handshake.name<"cond_br0">} : i11
  sink %falseResult {name = #handshake.name<"sink0">} : i11
  %trueResult_6, %falseResult_7 = cond_br %49#1, %44#0 {bb = 1 : ui32, name = #handshake.name<"cond_br2">} : i32
  %trueResult_8, %falseResult_9 = cond_br %49#2, %22#0 {bb = 1 : ui32, name = #handshake.name<"cond_br3">} : i32
  sink %falseResult_9 {name = #handshake.name<"sink1">} : i32
  %trueResult_10, %falseResult_11 = cond_br %49#3, %26#0 {bb = 1 : ui32, name = #handshake.name<"cond_br4">} : i32
  sink %falseResult_11 {name = #handshake.name<"sink2">} : i32
  %trueResult_12, %falseResult_13 = cond_br %49#4, %30#1 {bb = 1 : ui32, name = #handshake.name<"cond_br5">} : none
  sink %falseResult_13 {name = #handshake.name<"sink3">} : none
  %50 = buffer [1] seq %falseResult_7 {bb = 2 : ui32, name = #handshake.name<"buffer16">} : i32
  %51 = buffer [1] fifo %50 {bb = 2 : ui32, name = #handshake.name<"buffer17">} : i32
  %52 = d_return {bb = 2 : ui32, name = #handshake.name<"d_return0">} %51 : i32
  end {bb = 2 : ui32, bufProps = #handshake<bufProps{"1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00, "2": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, name = #handshake.name<"end0">} %52, %done, %done_1 : i32, none, none
}
