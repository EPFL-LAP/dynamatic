// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --handshake-speculation="json-path=%S/commit-test.json automatic=false"

// CHECK-LABEL:   handshake.func @placeCommitsOnMultipleBranches(
// CHECK-SAME:                                                   %[[VAL_0:.*]]: none, ...) attributes {argNames = ["start"], resNames = []} {
// CHECK:           %[[VAL_1:.*]]:2 = fork [2] %[[VAL_0]] {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
// CHECK:           %[[VAL_2:.*]] = constant %[[VAL_1]]#0 {handshake.bb = 0 : ui32, handshake.name = "constant0", value = true} : i1
// CHECK:           %[[VAL_3:.*]]:2 = fork [2] %[[VAL_2]] {handshake.bb = 0 : ui32, handshake.name = "fork0"} : i1
// CHECK:           %[[VAL_4:.*]], %[[VAL_5:.*]] = control_merge %[[VAL_1]]#1 {handshake.bb = 1 : ui32, handshake.name = "control_merge0"} : none, i1
// CHECK:           %[[VAL_6:.*]] = mux %[[VAL_2]] {{\[}}%[[VAL_4]], %[[VAL_4]]] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : i1, none
// CHECK:           %[[VAL_7:.*]], %[[VAL_8:.*]], %[[VAL_9:.*]], %[[VAL_10:.*]], %[[VAL_11:.*]], %[[VAL_12:.*]] = speculator{{\[}}%[[VAL_1]]#1] %[[VAL_6]] {handshake.bb = 1 : ui32, handshake.name = "speculator0"} : none
// CHECK:           %[[VAL_13:.*]], %[[VAL_14:.*]] = speculating_branch{{\[}}%[[VAL_7]]] %[[VAL_15:.*]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch0"} : none, i1
// CHECK:           %[[VAL_16:.*]], %[[VAL_17:.*]] = cond_br %[[VAL_13]], %[[VAL_9]] {handshake.bb = 1 : ui32, handshake.name = "cond_br0"} : i1
// CHECK:           %[[VAL_18:.*]], %[[VAL_19:.*]] = speculating_branch{{\[}}%[[VAL_20:.*]]] %[[VAL_3]]#1 {handshake.bb = 1 : ui32, handshake.name = "speculating_branch1"} : none, i1
// CHECK:           %[[VAL_21:.*]], %[[VAL_22:.*]] = cond_br %[[VAL_18]], %[[VAL_16]] {handshake.bb = 1 : ui32, handshake.name = "cond_br5"} : i1
// CHECK:           %[[VAL_23:.*]], %[[VAL_24:.*]] = speculating_branch{{\[}}%[[VAL_25:.*]]] %[[VAL_2]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch2"} : none, i1
// CHECK:           %[[VAL_26:.*]], %[[VAL_27:.*]] = cond_br %[[VAL_23]], %[[VAL_22]] {handshake.bb = 1 : ui32, handshake.name = "cond_br6"} : i1
// CHECK:           %[[VAL_28:.*]], %[[VAL_29:.*]] = speculating_branch{{\[}}%[[VAL_30:.*]]] %[[VAL_2]] {handshake.bb = 1 : ui32, handshake.name = "speculating_branch3"} : none, i1
// CHECK:           %[[VAL_31:.*]], %[[VAL_32:.*]] = cond_br %[[VAL_28]], %[[VAL_21]] {handshake.bb = 1 : ui32, handshake.name = "cond_br7"} : i1
// CHECK:           %[[VAL_15]] = spec_save{{\[}}%[[VAL_8]]] %[[VAL_3]]#0 {handshake.bb = 1 : ui32, handshake.name = "spec_save0"} : i1
// CHECK:           %[[VAL_20]], %[[VAL_33:.*]] = cond_br %[[VAL_15]], %[[VAL_7]] {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : none
// CHECK:           %[[VAL_30]], %[[VAL_25]] = cond_br %[[VAL_3]]#1, %[[VAL_20]] {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : none
// CHECK:           %[[VAL_34:.*]], %[[VAL_35:.*]] = cond_br %[[VAL_2]], %[[VAL_30]] {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : none
// CHECK:           %[[VAL_36:.*]], %[[VAL_37:.*]] = cond_br %[[VAL_2]], %[[VAL_25]] {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : none
// CHECK:           %[[VAL_38:.*]] = spec_commit{{\[}}%[[VAL_26]]] %[[VAL_36]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit0"} : none
// CHECK:           %[[VAL_39:.*]] = spec_commit{{\[}}%[[VAL_32]]] %[[VAL_35]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit1"} : none
// CHECK:           %[[VAL_40:.*]] = spec_commit{{\[}}%[[VAL_27]]] %[[VAL_37]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit2"} : none
// CHECK:           %[[VAL_41:.*]] = spec_commit{{\[}}%[[VAL_17]]] %[[VAL_33]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit3"} : none
// CHECK:           %[[VAL_42:.*]] = spec_commit{{\[}}%[[VAL_31]]] %[[VAL_34]] {handshake.bb = 1 : ui32, handshake.name = "spec_commit4"} : none
// CHECK:           end {handshake.bb = 1 : ui32, handshake.name = "end0"} %[[VAL_41]], %[[VAL_42]], %[[VAL_38]], %[[VAL_39]], %[[VAL_40]] : none, none, none, none, none
// CHECK:         }
handshake.func @placeCommitsOnMultipleBranches(%start: none) {
  %0:2 =  fork [2] %start  {handshake.bb = 0 : ui32, handshake.name = "fork1"} : none
  %1 = constant %0#0 {handshake.bb = 0 : ui32, handshake.name = "constant0", value = 1 : i1} : i1
  %2:2 = fork [2] %1  {handshake.bb = 0 : ui32, handshake.name = "fork0"} : i1
  %result, %index = control_merge %0#1 {handshake.bb = 1 : ui32, handshake.name = "control_merge0"} : none, i1
  %3 = mux %1 [%result, %result] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : i1, none
  %trueResult1, %falseResult1 = cond_br %2#0, %3 {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : none
  %trueResult2, %falseResult2 = cond_br %2#1, %trueResult1 {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : none
  %trueResult3, %falseResult3 = cond_br %1, %trueResult2  {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : none
  %trueResult4, %falseResult4 = cond_br %1, %falseResult2  {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : none
  end {handshake.bb = 1 : ui32, handshake.name = "end0"} %falseResult1, %trueResult3, %trueResult4, %falseResult3, %falseResult4 : none, none, none, none, none
}