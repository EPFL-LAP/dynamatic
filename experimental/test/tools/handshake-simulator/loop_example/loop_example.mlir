// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --exp-test-handshake-simulator="path-to-tests=%S/tests.json" --split-input-file | FileCheck %s

// CHECK-LABEL:   handshake.func @loop_example
handshake.func @loop_example(%arg0: !handshake.channel<i32>, %arg1: !handshake.channel<i32>, %arg2: !handshake.control<>, ...) -> (!handshake.channel<i32>, !handshake.control<>) attributes {argNames = ["x", "n", "start"], resNames = ["out0", "end"]} {
  %0:3 = fork [3] %arg2 {bufProps = #handshake<bufProps{"0": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, handshake.bb = 0 : ui32, handshake.name = "fork0"} : <>
  %1 = constant %0#0 {handshake.bb = 0 : ui32, handshake.name = "constant0", value = false} : <i1>
  %2 = extsi %1 {handshake.bb = 0 : ui32, handshake.name = "extsi3"} : <i1> to <i32>
  %3 = mux %12#0 [%2, %34] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : <i1>, <i32>
  %4 = buffer %3 {handshake.bb = 1 : ui32, handshake.name = "buffer0", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %5:2 = fork [2] %4 {handshake.bb = 1 : ui32, handshake.name = "fork1"} : <i32>
  %6 = mux %12#1 [%arg0, %31] {handshake.bb = 1 : ui32, handshake.name = "mux1"} : <i1>, <i32>
  %7 = mux %12#2 [%arg1, %36] {handshake.bb = 1 : ui32, handshake.name = "mux2"} : <i1>, <i32>
  %8 = buffer %7 {handshake.bb = 1 : ui32, handshake.name = "buffer2", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %9:2 = fork [2] %8 {handshake.bb = 1 : ui32, handshake.name = "fork2"} : <i32>
  %10 = buffer %trueResult_4 {handshake.bb = 1 : ui32, handshake.name = "buffer10", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <>
  %11 = buffer %10 {handshake.bb = 1 : ui32, handshake.name = "buffer11", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <>
  %result, %index = control_merge %0#2, %11  {handshake.bb = 1 : ui32, handshake.name = "control_merge0"} : <>, <i1>
  %12:3 = fork [3] %index {handshake.bb = 1 : ui32, handshake.name = "fork3"} : <i1>
  %13 = cmpi ult, %5#1, %9#1 {handshake.bb = 1 : ui32, handshake.name = "cmpi0"} : <i32>
  %14:4 = fork [4] %13 {handshake.bb = 1 : ui32, handshake.name = "fork4"} : <i1>
  %trueResult, %falseResult = cond_br %14#3, %9#0 {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : <i1>, <i32>
  sink %falseResult {handshake.name = "sink0"} : <i32>
  %trueResult_0, %falseResult_1 = cond_br %14#2, %5#0 {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : <i1>, <i32>
  sink %falseResult_1 {handshake.name = "sink1"} : <i32>
  %15 = buffer %6 {handshake.bb = 1 : ui32, handshake.name = "buffer1", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %trueResult_2, %falseResult_3 = cond_br %14#1, %15 {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : <i1>, <i32>
  %16 = buffer %result {handshake.bb = 1 : ui32, handshake.name = "buffer3", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <>
  %trueResult_4, %falseResult_5 = cond_br %14#0, %16 {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : <i1>, <>
  sink %falseResult_5 {handshake.name = "sink2"} : <>
  %17 = buffer %trueResult_2 {handshake.bb = 2 : ui32, handshake.name = "buffer4", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %18 = buffer %17 {handshake.bb = 2 : ui32, handshake.name = "buffer5", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <i32>
  %19:3 = fork [3] %18 {handshake.bb = 2 : ui32, handshake.name = "fork5"} : <i32>
  %20 = source {handshake.bb = 2 : ui32, handshake.name = "source0"}
  %21 = constant %20 {handshake.bb = 2 : ui32, handshake.name = "constant1", value = 1 : i2} : <i2>
  %22 = extsi %21 {handshake.bb = 2 : ui32, handshake.name = "extsi1"} : <i2> to <i32>
  %23 = source {handshake.bb = 2 : ui32, handshake.name = "source1"}
  %24 = constant %23 {handshake.bb = 2 : ui32, handshake.name = "constant5", value = -4 : i32} : <i32>
  %25 = source {handshake.bb = 2 : ui32, handshake.name = "source2"}
  %26 = constant %25 {handshake.bb = 2 : ui32, handshake.name = "constant3", value = 7 : i4} : <i4>
  %27 = extsi %26 {handshake.bb = 2 : ui32, handshake.name = "extsi2"} : <i4> to <i32>
  %28 = muli %19#1, %19#2 {handshake.bb = 2 : ui32, handshake.name = "muli0"} : <i32>
  %29 = muli %19#0, %27 {handshake.bb = 2 : ui32, handshake.name = "muli1"} : <i32>
  %30 = addi %28, %29 {handshake.bb = 2 : ui32, handshake.name = "addi0"} : <i32>
  %31 = addi %30, %24 {handshake.bb = 2 : ui32, handshake.name = "addi1"} : <i32>
  %32 = buffer %trueResult_0 {handshake.bb = 2 : ui32, handshake.name = "buffer8", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %33 = buffer %32 {handshake.bb = 2 : ui32, handshake.name = "buffer9", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <i32>
  %34 = addi %33, %22 {handshake.bb = 2 : ui32, handshake.name = "addi2"} : <i32>
  %35 = buffer %trueResult {handshake.bb = 2 : ui32, handshake.name = "buffer6", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %36 = buffer %35 {handshake.bb = 2 : ui32, handshake.name = "buffer7", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <i32>
  end {handshake.bb = 3 : ui32, handshake.name = "end0"} %falseResult_3, %0#1 : <i32>, <>
}