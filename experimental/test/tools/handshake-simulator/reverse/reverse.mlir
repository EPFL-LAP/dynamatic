// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --exp-test-handshake-simulator="path-to-tests=%S/tests.json" --split-input-file | FileCheck %s

// CHECK-LABEL:   handshake.func @reverse
handshake.func @reverse(%arg0: !handshake.channel<i32>, %arg1: !handshake.channel<i32>, %arg2: !handshake.control<>, ...) -> (!handshake.channel<i32>, !handshake.control<>) attributes {argNames = ["x", "n", "start"], resNames = ["out0", "end"]} {
  %0:3 = fork [3] %arg2 {bufProps = #handshake<bufProps{"0": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, handshake.bb = 0 : ui32, handshake.name = "fork0"} : <>
  %1 = constant %0#0 {handshake.bb = 0 : ui32, handshake.name = "constant0", value = false} : <i1>
  %2:2 = fork [2] %1 {handshake.bb = 0 : ui32, handshake.name = "fork1"} : <i1>
  %3 = extsi %2#0 {handshake.bb = 0 : ui32, handshake.name = "extsi6"} : <i1> to <i32>
  %4 = extsi %2#1 {handshake.bb = 0 : ui32, handshake.name = "extsi7"} : <i1> to <i32>
  %5 = mux %16#0 [%3, %53] {handshake.bb = 1 : ui32, handshake.name = "mux0"} : <i1>, <i32>
  %6 = buffer %5 {handshake.bb = 1 : ui32, handshake.name = "buffer0", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %7 = buffer %6 {handshake.bb = 1 : ui32, handshake.name = "buffer1", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <i32>
  %8:2 = fork [2] %7 {handshake.bb = 1 : ui32, handshake.name = "fork2"} : <i32>
  %9 = mux %16#1 [%4, %51] {handshake.bb = 1 : ui32, handshake.name = "mux1"} : <i1>, <i32>
  %10 = mux %16#2 [%arg0, %43#0] {handshake.bb = 1 : ui32, handshake.name = "mux2"} : <i1>, <i32>
  %11 = mux %16#3 [%arg1, %54] {handshake.bb = 1 : ui32, handshake.name = "mux3"} : <i1>, <i32>
  %12 = buffer %11 {handshake.bb = 1 : ui32, handshake.name = "buffer4", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %13 = buffer %12 {handshake.bb = 1 : ui32, handshake.name = "buffer5", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <i32>
  %14:2 = fork [2] %13 {handshake.bb = 1 : ui32, handshake.name = "fork3"} : <i32>
  %15 = buffer %trueResult_6 {handshake.bb = 1 : ui32, handshake.name = "buffer14", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <>
  %result, %index = control_merge %0#2, %15  {handshake.bb = 1 : ui32, handshake.name = "control_merge0"} : <>, <i1>
  %16:4 = fork [4] %index {handshake.bb = 1 : ui32, handshake.name = "fork4"} : <i1>
  %17 = cmpi ult, %8#1, %14#1 {handshake.bb = 1 : ui32, handshake.name = "cmpi0"} : <i32>
  %18:5 = fork [5] %17 {handshake.bb = 1 : ui32, handshake.name = "fork5"} : <i1>
  %trueResult, %falseResult = cond_br %18#4, %14#0 {handshake.bb = 1 : ui32, handshake.name = "cond_br1"} : <i1>, <i32>
  sink %falseResult {handshake.name = "sink0"} : <i32>
  %trueResult_0, %falseResult_1 = cond_br %18#3, %8#0 {handshake.bb = 1 : ui32, handshake.name = "cond_br2"} : <i1>, <i32>
  sink %falseResult_1 {handshake.name = "sink1"} : <i32>
  %19 = buffer %9 {handshake.bb = 1 : ui32, handshake.name = "buffer2", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %trueResult_2, %falseResult_3 = cond_br %18#2, %19 {handshake.bb = 1 : ui32, handshake.name = "cond_br3"} : <i1>, <i32>
  %20 = buffer %10 {handshake.bb = 1 : ui32, handshake.name = "buffer3", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %trueResult_4, %falseResult_5 = cond_br %18#1, %20 {handshake.bb = 1 : ui32, handshake.name = "cond_br4"} : <i1>, <i32>
  sink %falseResult_5 {handshake.name = "sink2"} : <i32>
  %21 = buffer %result {handshake.bb = 1 : ui32, handshake.name = "buffer6", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <>
  %22 = buffer %21 {handshake.bb = 1 : ui32, handshake.name = "buffer7", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <>
  %trueResult_6, %falseResult_7 = cond_br %18#0, %22 {handshake.bb = 1 : ui32, handshake.name = "cond_br5"} : <i1>, <>
  sink %falseResult_7 {handshake.name = "sink3"} : <>
  %23 = buffer %trueResult_2 {handshake.bb = 2 : ui32, handshake.name = "buffer10", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %24 = buffer %23 {handshake.bb = 2 : ui32, handshake.name = "buffer11", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <i32>
  %25:2 = fork [2] %24 {handshake.bb = 2 : ui32, handshake.name = "fork6"} : <i32>
  %26 = buffer %trueResult_4 {handshake.bb = 2 : ui32, handshake.name = "buffer12", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %27 = buffer %26 {handshake.bb = 2 : ui32, handshake.name = "buffer13", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {R: 1}>}} : <i32>
  %28:2 = fork [2] %27 {handshake.bb = 2 : ui32, handshake.name = "fork7"} : <i32>
  %29 = source {handshake.bb = 2 : ui32, handshake.name = "source0"}
  %30 = constant %29 {handshake.bb = 2 : ui32, handshake.name = "constant1", value = 1 : i2} : <i2>
  %31:2 = fork [2] %30 {handshake.bb = 2 : ui32, handshake.name = "fork8"} : <i2>
  %32 = extsi %31#0 {handshake.bb = 2 : ui32, handshake.name = "extsi2"} : <i2> to <i32>
  %33:2 = fork [2] %32 {handshake.bb = 2 : ui32, handshake.name = "fork9"} : <i32>
  %34 = extsi %31#1 {handshake.bb = 2 : ui32, handshake.name = "extsi3"} : <i2> to <i32>
  %35 = source {handshake.bb = 2 : ui32, handshake.name = "source1"}
  %36 = constant %35 {handshake.bb = 2 : ui32, handshake.name = "constant3", value = 10 : i5} : <i5>
  %37 = extsi %36 {handshake.bb = 2 : ui32, handshake.name = "extsi4"} : <i5> to <i32>
  %38 = source {handshake.bb = 2 : ui32, handshake.name = "source2"}
  %39 = constant %38 {handshake.bb = 2 : ui32, handshake.name = "constant5", value = 3 : i3} : <i3>
  %40 = extsi %39 {handshake.bb = 2 : ui32, handshake.name = "extsi5"} : <i3> to <i32>
  %41:2 = fork [2] %40 {handshake.bb = 2 : ui32, handshake.name = "fork10"} : <i32>
  %42 = divsi %28#1, %37 {handshake.bb = 2 : ui32, handshake.name = "divsi0"} : <i32>
  %43:3 = fork [3] %42 {handshake.bb = 2 : ui32, handshake.name = "fork11"} : <i32>
  %44 = shli %43#2, %33#0 {handshake.bb = 2 : ui32, handshake.name = "shli0"} : <i32>
  %45 = shli %43#1, %41#0 {handshake.bb = 2 : ui32, handshake.name = "shli1"} : <i32>
  %46 = addi %44, %45 {handshake.bb = 2 : ui32, handshake.name = "addi2"} : <i32>
  %47 = subi %28#0, %46 {handshake.bb = 2 : ui32, handshake.name = "subi0"} : <i32>
  %48 = shli %25#1, %33#1 {handshake.bb = 2 : ui32, handshake.name = "shli2"} : <i32>
  %49 = shli %25#0, %41#1 {handshake.bb = 2 : ui32, handshake.name = "shli3"} : <i32>
  %50 = addi %48, %49 {handshake.bb = 2 : ui32, handshake.name = "addi3"} : <i32>
  %51 = addi %50, %47 {handshake.bb = 2 : ui32, handshake.name = "addi0"} : <i32>
  %52 = buffer %trueResult_0 {handshake.bb = 2 : ui32, handshake.name = "buffer9", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  %53 = addi %52, %34 {handshake.bb = 2 : ui32, handshake.name = "addi1"} : <i32>
  %54 = buffer %trueResult {handshake.bb = 2 : ui32, handshake.name = "buffer8", hw.parameters = {NUM_SLOTS = 1 : ui32, TIMING = #handshake<timing {D: 1, V: 1, R: 0}>}} : <i32>
  end {handshake.bb = 3 : ui32, handshake.name = "end0"} %falseResult_3, %0#1 : <i32>, <>
}