// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt %s --exp-test-handshake-simulator="path-to-tests=%S/tests.json" --split-input-file | FileCheck %s

// CHECK-LABEL:   handshake.func @muli_seq
handshake.func @muli_seq(%arg0: !handshake.channel<i32>, %arg1: !handshake.channel<i32>, %arg2: !handshake.control<>, ...) -> (!handshake.channel<i32>, !handshake.control<>) attributes {argNames = ["a", "b", "start"], resNames = ["out0", "end"]} {
    %0:4 = fork [4] %arg1 {bufProps = #handshake<bufProps{"0": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, handshake.bb = 0 : ui32, handshake.name = "fork0"} : <i32>
    %1:4 = fork [4] %arg0 {bufProps = #handshake<bufProps{"0": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, handshake.bb = 0 : ui32, handshake.name = "fork1"} : <i32>
    %2 = muli %1#2, %1#3 {handshake.bb = 0 : ui32, handshake.name = "muli0"} : <i32>
    %3 = muli %0#2, %0#3 {handshake.bb = 0 : ui32, handshake.name = "muli1"} : <i32>
    %4:2 = fork [2] %3 {handshake.bb = 0 : ui32, handshake.name = "fork2"} : <i32>
    %5 = addi %2, %4#1 {handshake.bb = 0 : ui32, handshake.name = "addi0"} : <i32>
    %6 = subi %5, %1#1 {handshake.bb = 0 : ui32, handshake.name = "subi0"} : <i32>
    %7 = muli %1#0, %0#1 {handshake.bb = 0 : ui32, handshake.name = "muli2"} : <i32>
    %8 = subi %6, %7 {handshake.bb = 0 : ui32, handshake.name = "subi1"} : <i32>
    %9 = muli %4#0, %0#0 {handshake.bb = 0 : ui32, handshake.name = "muli3"} : <i32>
    %10 = subi %8, %9 {handshake.bb = 0 : ui32, handshake.name = "subi2"} : <i32>
    end {bufProps = #handshake<bufProps{"1": [0,0], [0,0], 0.000000e+00, 0.000000e+00, 0.000000e+00}>, handshake.bb = 0 : ui32, handshake.name = "end0"} %10, %arg2 : <i32>, <>
  }