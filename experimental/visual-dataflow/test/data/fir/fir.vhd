-- ==============================================================
-- Generated by Dot2Vhdl ver. 2.0
-- File created: Sat Dec  2 19:20:31 2023

-- ==============================================================
library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; 
use work.customTypes.all; 
-- ==============================================================
entity fir is 
port (
	clk:  in std_logic;
	rst:  in std_logic;
	start_in:  in std_logic_vector (0 downto 0);
	start_valid:  in std_logic;
	start_ready:  out std_logic;
	end_out:  out std_logic_vector (31 downto 0);
	end_valid:  out std_logic;
	end_ready:  in std_logic;
	idx_address0 : out std_logic_vector (31 downto 0);
	idx_ce0 : out std_logic;
	idx_we0 : out std_logic;
	idx_dout0 : out std_logic_vector (31 downto 0);
	idx_din0 : in std_logic_vector (31 downto 0);
	idx_address1 : out std_logic_vector (31 downto 0);
	idx_ce1 : out std_logic;
	idx_we1 : out std_logic;
	idx_dout1 : out std_logic_vector (31 downto 0);
	idx_din1 : in std_logic_vector (31 downto 0);
	di_address0 : out std_logic_vector (31 downto 0);
	di_ce0 : out std_logic;
	di_we0 : out std_logic;
	di_dout0 : out std_logic_vector (31 downto 0);
	di_din0 : in std_logic_vector (31 downto 0);
	di_address1 : out std_logic_vector (31 downto 0);
	di_ce1 : out std_logic;
	di_we1 : out std_logic;
	di_dout1 : out std_logic_vector (31 downto 0);
	di_din1 : in std_logic_vector (31 downto 0));
end;

architecture behavioral of fir is 

	signal start_0_clk : std_logic;
	signal start_0_rst : std_logic;
	signal start_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal start_0_pValidArray_0 : std_logic;
	signal start_0_readyArray_0 : std_logic;
	signal start_0_nReadyArray_0 : std_logic;
	signal start_0_validArray_0 : std_logic;
	signal start_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal mem_controller0_clk : std_logic;
	signal mem_controller0_rst : std_logic;
	signal mem_controller0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mem_controller0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mem_controller0_dataInArray_2 : std_logic_vector(31 downto 0);
	signal mem_controller0_dataInArray_3 : std_logic_vector(31 downto 0);
	signal mem_controller0_pValidArray_0 : std_logic;
	signal mem_controller0_pValidArray_1 : std_logic;
	signal mem_controller0_pValidArray_2 : std_logic;
	signal mem_controller0_pValidArray_3 : std_logic;
	signal mem_controller0_readyArray_0 : std_logic;
	signal mem_controller0_readyArray_1 : std_logic;
	signal mem_controller0_readyArray_2 : std_logic;
	signal mem_controller0_readyArray_3 : std_logic;
	signal mem_controller0_nReadyArray_0 : std_logic;
	signal mem_controller0_validArray_0 : std_logic;
	signal mem_controller0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal mem_controller0_nReadyArray_1 : std_logic;
	signal mem_controller0_validArray_1 : std_logic;
	signal mem_controller0_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal mem_controller0_we0_ce0 : std_logic;

	signal mem_controller1_clk : std_logic;
	signal mem_controller1_rst : std_logic;
	signal mem_controller1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mem_controller1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mem_controller1_dataInArray_2 : std_logic_vector(31 downto 0);
	signal mem_controller1_dataInArray_3 : std_logic_vector(31 downto 0);
	signal mem_controller1_pValidArray_0 : std_logic;
	signal mem_controller1_pValidArray_1 : std_logic;
	signal mem_controller1_pValidArray_2 : std_logic;
	signal mem_controller1_pValidArray_3 : std_logic;
	signal mem_controller1_readyArray_0 : std_logic;
	signal mem_controller1_readyArray_1 : std_logic;
	signal mem_controller1_readyArray_2 : std_logic;
	signal mem_controller1_readyArray_3 : std_logic;
	signal mem_controller1_nReadyArray_0 : std_logic;
	signal mem_controller1_validArray_0 : std_logic;
	signal mem_controller1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal mem_controller1_nReadyArray_1 : std_logic;
	signal mem_controller1_validArray_1 : std_logic;
	signal mem_controller1_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal mem_controller1_we0_ce0 : std_logic;

	signal fork0_clk : std_logic;
	signal fork0_rst : std_logic;
	signal fork0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork0_pValidArray_0 : std_logic;
	signal fork0_readyArray_0 : std_logic;
	signal fork0_nReadyArray_0 : std_logic;
	signal fork0_validArray_0 : std_logic;
	signal fork0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork0_nReadyArray_1 : std_logic;
	signal fork0_validArray_1 : std_logic;
	signal fork0_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal constant1_clk : std_logic;
	signal constant1_rst : std_logic;
	signal constant1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal constant1_pValidArray_0 : std_logic;
	signal constant1_readyArray_0 : std_logic;
	signal constant1_nReadyArray_0 : std_logic;
	signal constant1_validArray_0 : std_logic;
	signal constant1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal fork1_clk : std_logic;
	signal fork1_rst : std_logic;
	signal fork1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork1_pValidArray_0 : std_logic;
	signal fork1_readyArray_0 : std_logic;
	signal fork1_nReadyArray_0 : std_logic;
	signal fork1_validArray_0 : std_logic;
	signal fork1_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork1_nReadyArray_1 : std_logic;
	signal fork1_validArray_1 : std_logic;
	signal fork1_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal extsi0_clk : std_logic;
	signal extsi0_rst : std_logic;
	signal extsi0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal extsi0_pValidArray_0 : std_logic;
	signal extsi0_readyArray_0 : std_logic;
	signal extsi0_nReadyArray_0 : std_logic;
	signal extsi0_validArray_0 : std_logic;
	signal extsi0_dataOutArray_0 : std_logic_vector(10 downto 0);

	signal extsi1_clk : std_logic;
	signal extsi1_rst : std_logic;
	signal extsi1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal extsi1_pValidArray_0 : std_logic;
	signal extsi1_readyArray_0 : std_logic;
	signal extsi1_nReadyArray_0 : std_logic;
	signal extsi1_validArray_0 : std_logic;
	signal extsi1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal mux2_clk : std_logic;
	signal mux2_rst : std_logic;
	signal mux2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal mux2_dataInArray_1 : std_logic_vector(10 downto 0);
	signal mux2_dataInArray_2 : std_logic_vector(10 downto 0);
	signal mux2_pValidArray_0 : std_logic;
	signal mux2_pValidArray_1 : std_logic;
	signal mux2_pValidArray_2 : std_logic;
	signal mux2_readyArray_0 : std_logic;
	signal mux2_readyArray_1 : std_logic;
	signal mux2_readyArray_2 : std_logic;
	signal mux2_nReadyArray_0 : std_logic;
	signal mux2_validArray_0 : std_logic;
	signal mux2_dataOutArray_0 : std_logic_vector(10 downto 0);

	signal buffer3_clk : std_logic;
	signal buffer3_rst : std_logic;
	signal buffer3_dataInArray_0 : std_logic_vector(10 downto 0);
	signal buffer3_pValidArray_0 : std_logic;
	signal buffer3_readyArray_0 : std_logic;
	signal buffer3_nReadyArray_0 : std_logic;
	signal buffer3_validArray_0 : std_logic;
	signal buffer3_dataOutArray_0 : std_logic_vector(10 downto 0);

	signal fork2_clk : std_logic;
	signal fork2_rst : std_logic;
	signal fork2_dataInArray_0 : std_logic_vector(10 downto 0);
	signal fork2_pValidArray_0 : std_logic;
	signal fork2_readyArray_0 : std_logic;
	signal fork2_nReadyArray_0 : std_logic;
	signal fork2_validArray_0 : std_logic;
	signal fork2_dataOutArray_0 : std_logic_vector(10 downto 0);
	signal fork2_nReadyArray_1 : std_logic;
	signal fork2_validArray_1 : std_logic;
	signal fork2_dataOutArray_1 : std_logic_vector(10 downto 0);
	signal fork2_nReadyArray_2 : std_logic;
	signal fork2_validArray_2 : std_logic;
	signal fork2_dataOutArray_2 : std_logic_vector(10 downto 0);

	signal extsi2_clk : std_logic;
	signal extsi2_rst : std_logic;
	signal extsi2_dataInArray_0 : std_logic_vector(10 downto 0);
	signal extsi2_pValidArray_0 : std_logic;
	signal extsi2_readyArray_0 : std_logic;
	signal extsi2_nReadyArray_0 : std_logic;
	signal extsi2_validArray_0 : std_logic;
	signal extsi2_dataOutArray_0 : std_logic_vector(11 downto 0);

	signal extsi3_clk : std_logic;
	signal extsi3_rst : std_logic;
	signal extsi3_dataInArray_0 : std_logic_vector(10 downto 0);
	signal extsi3_pValidArray_0 : std_logic;
	signal extsi3_readyArray_0 : std_logic;
	signal extsi3_nReadyArray_0 : std_logic;
	signal extsi3_validArray_0 : std_logic;
	signal extsi3_dataOutArray_0 : std_logic_vector(11 downto 0);

	signal extsi4_clk : std_logic;
	signal extsi4_rst : std_logic;
	signal extsi4_dataInArray_0 : std_logic_vector(10 downto 0);
	signal extsi4_pValidArray_0 : std_logic;
	signal extsi4_readyArray_0 : std_logic;
	signal extsi4_nReadyArray_0 : std_logic;
	signal extsi4_validArray_0 : std_logic;
	signal extsi4_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal buffer4_clk : std_logic;
	signal buffer4_rst : std_logic;
	signal buffer4_dataInArray_0 : std_logic_vector(0 downto 0);
	signal buffer4_pValidArray_0 : std_logic;
	signal buffer4_readyArray_0 : std_logic;
	signal buffer4_nReadyArray_0 : std_logic;
	signal buffer4_validArray_0 : std_logic;
	signal buffer4_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal mux1_clk : std_logic;
	signal mux1_rst : std_logic;
	signal mux1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal mux1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mux1_dataInArray_2 : std_logic_vector(31 downto 0);
	signal mux1_pValidArray_0 : std_logic;
	signal mux1_pValidArray_1 : std_logic;
	signal mux1_pValidArray_2 : std_logic;
	signal mux1_readyArray_0 : std_logic;
	signal mux1_readyArray_1 : std_logic;
	signal mux1_readyArray_2 : std_logic;
	signal mux1_nReadyArray_0 : std_logic;
	signal mux1_validArray_0 : std_logic;
	signal mux1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal control_merge0_clk : std_logic;
	signal control_merge0_rst : std_logic;
	signal control_merge0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal control_merge0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal control_merge0_pValidArray_0 : std_logic;
	signal control_merge0_pValidArray_1 : std_logic;
	signal control_merge0_readyArray_0 : std_logic;
	signal control_merge0_readyArray_1 : std_logic;
	signal control_merge0_nReadyArray_0 : std_logic;
	signal control_merge0_validArray_0 : std_logic;
	signal control_merge0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal control_merge0_nReadyArray_1 : std_logic;
	signal control_merge0_validArray_1 : std_logic;
	signal control_merge0_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal fork3_clk : std_logic;
	signal fork3_rst : std_logic;
	signal fork3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork3_pValidArray_0 : std_logic;
	signal fork3_readyArray_0 : std_logic;
	signal fork3_nReadyArray_0 : std_logic;
	signal fork3_validArray_0 : std_logic;
	signal fork3_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork3_nReadyArray_1 : std_logic;
	signal fork3_validArray_1 : std_logic;
	signal fork3_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal source0_clk : std_logic;
	signal source0_rst : std_logic;
	signal source0_nReadyArray_0 : std_logic;
	signal source0_validArray_0 : std_logic;
	signal source0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal constant4_clk : std_logic;
	signal constant4_rst : std_logic;
	signal constant4_dataInArray_0 : std_logic_vector(10 downto 0);
	signal constant4_pValidArray_0 : std_logic;
	signal constant4_readyArray_0 : std_logic;
	signal constant4_nReadyArray_0 : std_logic;
	signal constant4_validArray_0 : std_logic;
	signal constant4_dataOutArray_0 : std_logic_vector(10 downto 0);

	signal extsi5_clk : std_logic;
	signal extsi5_rst : std_logic;
	signal extsi5_dataInArray_0 : std_logic_vector(10 downto 0);
	signal extsi5_pValidArray_0 : std_logic;
	signal extsi5_readyArray_0 : std_logic;
	signal extsi5_nReadyArray_0 : std_logic;
	signal extsi5_validArray_0 : std_logic;
	signal extsi5_dataOutArray_0 : std_logic_vector(11 downto 0);

	signal source1_clk : std_logic;
	signal source1_rst : std_logic;
	signal source1_nReadyArray_0 : std_logic;
	signal source1_validArray_0 : std_logic;
	signal source1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal constant6_clk : std_logic;
	signal constant6_rst : std_logic;
	signal constant6_dataInArray_0 : std_logic_vector(10 downto 0);
	signal constant6_pValidArray_0 : std_logic;
	signal constant6_readyArray_0 : std_logic;
	signal constant6_nReadyArray_0 : std_logic;
	signal constant6_validArray_0 : std_logic;
	signal constant6_dataOutArray_0 : std_logic_vector(10 downto 0);

	signal extsi8_clk : std_logic;
	signal extsi8_rst : std_logic;
	signal extsi8_dataInArray_0 : std_logic_vector(10 downto 0);
	signal extsi8_pValidArray_0 : std_logic;
	signal extsi8_readyArray_0 : std_logic;
	signal extsi8_nReadyArray_0 : std_logic;
	signal extsi8_validArray_0 : std_logic;
	signal extsi8_dataOutArray_0 : std_logic_vector(11 downto 0);

	signal source2_clk : std_logic;
	signal source2_rst : std_logic;
	signal source2_nReadyArray_0 : std_logic;
	signal source2_validArray_0 : std_logic;
	signal source2_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal constant7_clk : std_logic;
	signal constant7_rst : std_logic;
	signal constant7_dataInArray_0 : std_logic_vector(1 downto 0);
	signal constant7_pValidArray_0 : std_logic;
	signal constant7_readyArray_0 : std_logic;
	signal constant7_nReadyArray_0 : std_logic;
	signal constant7_validArray_0 : std_logic;
	signal constant7_dataOutArray_0 : std_logic_vector(1 downto 0);

	signal extsi6_clk : std_logic;
	signal extsi6_rst : std_logic;
	signal extsi6_dataInArray_0 : std_logic_vector(1 downto 0);
	signal extsi6_pValidArray_0 : std_logic;
	signal extsi6_readyArray_0 : std_logic;
	signal extsi6_nReadyArray_0 : std_logic;
	signal extsi6_validArray_0 : std_logic;
	signal extsi6_dataOutArray_0 : std_logic_vector(11 downto 0);

	signal mc_load0_clk : std_logic;
	signal mc_load0_rst : std_logic;
	signal mc_load0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mc_load0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mc_load0_pValidArray_0 : std_logic;
	signal mc_load0_pValidArray_1 : std_logic;
	signal mc_load0_readyArray_0 : std_logic;
	signal mc_load0_readyArray_1 : std_logic;
	signal mc_load0_nReadyArray_0 : std_logic;
	signal mc_load0_validArray_0 : std_logic;
	signal mc_load0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal mc_load0_nReadyArray_1 : std_logic;
	signal mc_load0_validArray_1 : std_logic;
	signal mc_load0_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal subi1_clk : std_logic;
	signal subi1_rst : std_logic;
	signal subi1_dataInArray_0 : std_logic_vector(11 downto 0);
	signal subi1_dataInArray_1 : std_logic_vector(11 downto 0);
	signal subi1_pValidArray_0 : std_logic;
	signal subi1_pValidArray_1 : std_logic;
	signal subi1_readyArray_0 : std_logic;
	signal subi1_readyArray_1 : std_logic;
	signal subi1_nReadyArray_0 : std_logic;
	signal subi1_validArray_0 : std_logic;
	signal subi1_dataOutArray_0 : std_logic_vector(11 downto 0);

	signal extsi7_clk : std_logic;
	signal extsi7_rst : std_logic;
	signal extsi7_dataInArray_0 : std_logic_vector(11 downto 0);
	signal extsi7_pValidArray_0 : std_logic;
	signal extsi7_readyArray_0 : std_logic;
	signal extsi7_nReadyArray_0 : std_logic;
	signal extsi7_validArray_0 : std_logic;
	signal extsi7_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal mc_load1_clk : std_logic;
	signal mc_load1_rst : std_logic;
	signal mc_load1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mc_load1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mc_load1_pValidArray_0 : std_logic;
	signal mc_load1_pValidArray_1 : std_logic;
	signal mc_load1_readyArray_0 : std_logic;
	signal mc_load1_readyArray_1 : std_logic;
	signal mc_load1_nReadyArray_0 : std_logic;
	signal mc_load1_validArray_0 : std_logic;
	signal mc_load1_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal mc_load1_nReadyArray_1 : std_logic;
	signal mc_load1_validArray_1 : std_logic;
	signal mc_load1_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal muli0_clk : std_logic;
	signal muli0_rst : std_logic;
	signal muli0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal muli0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal muli0_pValidArray_0 : std_logic;
	signal muli0_pValidArray_1 : std_logic;
	signal muli0_readyArray_0 : std_logic;
	signal muli0_readyArray_1 : std_logic;
	signal muli0_nReadyArray_0 : std_logic;
	signal muli0_validArray_0 : std_logic;
	signal muli0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal buffer5_clk : std_logic;
	signal buffer5_rst : std_logic;
	signal buffer5_dataInArray_0 : std_logic_vector(31 downto 0);
	signal buffer5_pValidArray_0 : std_logic;
	signal buffer5_readyArray_0 : std_logic;
	signal buffer5_nReadyArray_0 : std_logic;
	signal buffer5_validArray_0 : std_logic;
	signal buffer5_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal addi0_clk : std_logic;
	signal addi0_rst : std_logic;
	signal addi0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal addi0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal addi0_pValidArray_0 : std_logic;
	signal addi0_pValidArray_1 : std_logic;
	signal addi0_readyArray_0 : std_logic;
	signal addi0_readyArray_1 : std_logic;
	signal addi0_nReadyArray_0 : std_logic;
	signal addi0_validArray_0 : std_logic;
	signal addi0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal addi1_clk : std_logic;
	signal addi1_rst : std_logic;
	signal addi1_dataInArray_0 : std_logic_vector(11 downto 0);
	signal addi1_dataInArray_1 : std_logic_vector(11 downto 0);
	signal addi1_pValidArray_0 : std_logic;
	signal addi1_pValidArray_1 : std_logic;
	signal addi1_readyArray_0 : std_logic;
	signal addi1_readyArray_1 : std_logic;
	signal addi1_nReadyArray_0 : std_logic;
	signal addi1_validArray_0 : std_logic;
	signal addi1_dataOutArray_0 : std_logic_vector(11 downto 0);

	signal buffer6_clk : std_logic;
	signal buffer6_rst : std_logic;
	signal buffer6_dataInArray_0 : std_logic_vector(11 downto 0);
	signal buffer6_pValidArray_0 : std_logic;
	signal buffer6_readyArray_0 : std_logic;
	signal buffer6_nReadyArray_0 : std_logic;
	signal buffer6_validArray_0 : std_logic;
	signal buffer6_dataOutArray_0 : std_logic_vector(11 downto 0);

	signal fork4_clk : std_logic;
	signal fork4_rst : std_logic;
	signal fork4_dataInArray_0 : std_logic_vector(11 downto 0);
	signal fork4_pValidArray_0 : std_logic;
	signal fork4_readyArray_0 : std_logic;
	signal fork4_nReadyArray_0 : std_logic;
	signal fork4_validArray_0 : std_logic;
	signal fork4_dataOutArray_0 : std_logic_vector(11 downto 0);
	signal fork4_nReadyArray_1 : std_logic;
	signal fork4_validArray_1 : std_logic;
	signal fork4_dataOutArray_1 : std_logic_vector(11 downto 0);

	signal trunci0_clk : std_logic;
	signal trunci0_rst : std_logic;
	signal trunci0_dataInArray_0 : std_logic_vector(11 downto 0);
	signal trunci0_pValidArray_0 : std_logic;
	signal trunci0_readyArray_0 : std_logic;
	signal trunci0_nReadyArray_0 : std_logic;
	signal trunci0_validArray_0 : std_logic;
	signal trunci0_dataOutArray_0 : std_logic_vector(10 downto 0);

	signal cmpi0_clk : std_logic;
	signal cmpi0_rst : std_logic;
	signal cmpi0_dataInArray_0 : std_logic_vector(11 downto 0);
	signal cmpi0_dataInArray_1 : std_logic_vector(11 downto 0);
	signal cmpi0_pValidArray_0 : std_logic;
	signal cmpi0_pValidArray_1 : std_logic;
	signal cmpi0_readyArray_0 : std_logic;
	signal cmpi0_readyArray_1 : std_logic;
	signal cmpi0_nReadyArray_0 : std_logic;
	signal cmpi0_validArray_0 : std_logic;
	signal cmpi0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal fork5_clk : std_logic;
	signal fork5_rst : std_logic;
	signal fork5_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork5_pValidArray_0 : std_logic;
	signal fork5_readyArray_0 : std_logic;
	signal fork5_nReadyArray_0 : std_logic;
	signal fork5_validArray_0 : std_logic;
	signal fork5_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork5_nReadyArray_1 : std_logic;
	signal fork5_validArray_1 : std_logic;
	signal fork5_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal fork5_nReadyArray_2 : std_logic;
	signal fork5_validArray_2 : std_logic;
	signal fork5_dataOutArray_2 : std_logic_vector(0 downto 0);

	signal cond_br0_clk : std_logic;
	signal cond_br0_rst : std_logic;
	signal cond_br0_dataInArray_0 : std_logic_vector(10 downto 0);
	signal cond_br0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal cond_br0_pValidArray_0 : std_logic;
	signal cond_br0_pValidArray_1 : std_logic;
	signal cond_br0_readyArray_0 : std_logic;
	signal cond_br0_readyArray_1 : std_logic;
	signal cond_br0_nReadyArray_0 : std_logic;
	signal cond_br0_validArray_0 : std_logic;
	signal cond_br0_dataOutArray_0 : std_logic_vector(10 downto 0);
	signal cond_br0_nReadyArray_1 : std_logic;
	signal cond_br0_validArray_1 : std_logic;
	signal cond_br0_dataOutArray_1 : std_logic_vector(10 downto 0);

	signal sink0_clk : std_logic;
	signal sink0_rst : std_logic;
	signal sink0_dataInArray_0 : std_logic_vector(10 downto 0);
	signal sink0_pValidArray_0 : std_logic;
	signal sink0_readyArray_0 : std_logic;

	signal buffer0_clk : std_logic;
	signal buffer0_rst : std_logic;
	signal buffer0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal buffer0_pValidArray_0 : std_logic;
	signal buffer0_readyArray_0 : std_logic;
	signal buffer0_nReadyArray_0 : std_logic;
	signal buffer0_validArray_0 : std_logic;
	signal buffer0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal cond_br2_clk : std_logic;
	signal cond_br2_rst : std_logic;
	signal cond_br2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal cond_br2_dataInArray_1 : std_logic_vector(0 downto 0);
	signal cond_br2_pValidArray_0 : std_logic;
	signal cond_br2_pValidArray_1 : std_logic;
	signal cond_br2_readyArray_0 : std_logic;
	signal cond_br2_readyArray_1 : std_logic;
	signal cond_br2_nReadyArray_0 : std_logic;
	signal cond_br2_validArray_0 : std_logic;
	signal cond_br2_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal cond_br2_nReadyArray_1 : std_logic;
	signal cond_br2_validArray_1 : std_logic;
	signal cond_br2_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal buffer2_clk : std_logic;
	signal buffer2_rst : std_logic;
	signal buffer2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal buffer2_pValidArray_0 : std_logic;
	signal buffer2_readyArray_0 : std_logic;
	signal buffer2_nReadyArray_0 : std_logic;
	signal buffer2_validArray_0 : std_logic;
	signal buffer2_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal cond_br3_clk : std_logic;
	signal cond_br3_rst : std_logic;
	signal cond_br3_dataInArray_0 : std_logic_vector(0 downto 0);
	signal cond_br3_dataInArray_1 : std_logic_vector(0 downto 0);
	signal cond_br3_pValidArray_0 : std_logic;
	signal cond_br3_pValidArray_1 : std_logic;
	signal cond_br3_readyArray_0 : std_logic;
	signal cond_br3_readyArray_1 : std_logic;
	signal cond_br3_nReadyArray_0 : std_logic;
	signal cond_br3_validArray_0 : std_logic;
	signal cond_br3_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal cond_br3_nReadyArray_1 : std_logic;
	signal cond_br3_validArray_1 : std_logic;
	signal cond_br3_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal sink1_clk : std_logic;
	signal sink1_rst : std_logic;
	signal sink1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink1_pValidArray_0 : std_logic;
	signal sink1_readyArray_0 : std_logic;

	signal buffer1_clk : std_logic;
	signal buffer1_rst : std_logic;
	signal buffer1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal buffer1_pValidArray_0 : std_logic;
	signal buffer1_readyArray_0 : std_logic;
	signal buffer1_nReadyArray_0 : std_logic;
	signal buffer1_validArray_0 : std_logic;
	signal buffer1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal d_return0_clk : std_logic;
	signal d_return0_rst : std_logic;
	signal d_return0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal d_return0_pValidArray_0 : std_logic;
	signal d_return0_readyArray_0 : std_logic;
	signal d_return0_nReadyArray_0 : std_logic;
	signal d_return0_validArray_0 : std_logic;
	signal d_return0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal end0_clk : std_logic;
	signal end0_rst : std_logic;
	signal end0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal end0_dataInArray_1 : std_logic_vector(0 downto 0);
	signal end0_dataInArray_2 : std_logic_vector(31 downto 0);
	signal end0_pValidArray_0 : std_logic;
	signal end0_pValidArray_1 : std_logic;
	signal end0_pValidArray_2 : std_logic;
	signal end0_readyArray_0 : std_logic;
	signal end0_readyArray_1 : std_logic;
	signal end0_readyArray_2 : std_logic;
	signal end0_nReadyArray_0 : std_logic;
	signal end0_validArray_0 : std_logic;
	signal end0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal end0_validArray_1 :  std_logic;
	signal end0_dataOutArray_1 :  std_logic_vector (31 downto 0);
	signal end0_nReadyArray_1 :  std_logic;

begin


	start_0_clk <= clk;
	start_0_rst <= rst;
	start_0_pValidArray_0 <= start_valid;
	start_ready <= start_0_readyArray_0;
	fork0_pValidArray_0 <= start_0_validArray_0;
	start_0_nReadyArray_0 <= fork0_readyArray_0;
	fork0_dataInArray_0 <= std_logic_vector (resize(unsigned(start_0_dataOutArray_0),fork0_dataInArray_0'length));

	mem_controller0_clk <= clk;
	mem_controller0_rst <= rst;
	idx_ce0 <= mem_controller0_we0_ce0;
	idx_we0 <= mem_controller0_we0_ce0;
	mc_load0_pValidArray_0 <= mem_controller0_validArray_0;
	mem_controller0_nReadyArray_0 <= mc_load0_readyArray_0;
	mc_load0_dataInArray_0 <= std_logic_vector (resize(unsigned(mem_controller0_dataOutArray_0),mc_load0_dataInArray_0'length));
	end0_pValidArray_0 <= mem_controller0_validArray_1;
	mem_controller0_nReadyArray_1 <= end0_readyArray_0;
	end0_dataInArray_0 <= std_logic_vector (resize(unsigned(mem_controller0_dataOutArray_1),end0_dataInArray_0'length));

	mem_controller1_clk <= clk;
	mem_controller1_rst <= rst;
	di_ce0 <= mem_controller1_we0_ce0;
	di_we0 <= mem_controller1_we0_ce0;
	mc_load1_pValidArray_0 <= mem_controller1_validArray_0;
	mem_controller1_nReadyArray_0 <= mc_load1_readyArray_0;
	mc_load1_dataInArray_0 <= std_logic_vector (resize(unsigned(mem_controller1_dataOutArray_0),mc_load1_dataInArray_0'length));
	end0_pValidArray_1 <= mem_controller1_validArray_1;
	mem_controller1_nReadyArray_1 <= end0_readyArray_1;
	end0_dataInArray_1 <= std_logic_vector (resize(unsigned(mem_controller1_dataOutArray_1),end0_dataInArray_1'length));

	fork0_clk <= clk;
	fork0_rst <= rst;
	control_merge0_pValidArray_1 <= fork0_validArray_0;
	fork0_nReadyArray_0 <= control_merge0_readyArray_1;
	control_merge0_dataInArray_1 <= std_logic_vector (resize(unsigned(fork0_dataOutArray_0),control_merge0_dataInArray_1'length));
	constant1_pValidArray_0 <= fork0_validArray_1;
	fork0_nReadyArray_1 <= constant1_readyArray_0;
	constant1_dataInArray_0 <= "0";

	constant1_clk <= clk;
	constant1_rst <= rst;
	fork1_pValidArray_0 <= constant1_validArray_0;
	constant1_nReadyArray_0 <= fork1_readyArray_0;
	fork1_dataInArray_0 <= std_logic_vector (resize(unsigned(constant1_dataOutArray_0),fork1_dataInArray_0'length));

	fork1_clk <= clk;
	fork1_rst <= rst;
	extsi0_pValidArray_0 <= fork1_validArray_0;
	fork1_nReadyArray_0 <= extsi0_readyArray_0;
	extsi0_dataInArray_0 <= std_logic_vector (resize(unsigned(fork1_dataOutArray_0),extsi0_dataInArray_0'length));
	extsi1_pValidArray_0 <= fork1_validArray_1;
	fork1_nReadyArray_1 <= extsi1_readyArray_0;
	extsi1_dataInArray_0 <= std_logic_vector (resize(unsigned(fork1_dataOutArray_1),extsi1_dataInArray_0'length));

	extsi0_clk <= clk;
	extsi0_rst <= rst;
	mux2_pValidArray_2 <= extsi0_validArray_0;
	extsi0_nReadyArray_0 <= mux2_readyArray_2;
	mux2_dataInArray_2 <= std_logic_vector (resize(unsigned(extsi0_dataOutArray_0),mux2_dataInArray_2'length));

	extsi1_clk <= clk;
	extsi1_rst <= rst;
	mux1_pValidArray_2 <= extsi1_validArray_0;
	extsi1_nReadyArray_0 <= mux1_readyArray_2;
	mux1_dataInArray_2 <= std_logic_vector (resize(unsigned(extsi1_dataOutArray_0),mux1_dataInArray_2'length));

	mux2_clk <= clk;
	mux2_rst <= rst;
	buffer3_pValidArray_0 <= mux2_validArray_0;
	mux2_nReadyArray_0 <= buffer3_readyArray_0;
	buffer3_dataInArray_0 <= std_logic_vector (resize(unsigned(mux2_dataOutArray_0),buffer3_dataInArray_0'length));

	buffer3_clk <= clk;
	buffer3_rst <= rst;
	fork2_pValidArray_0 <= buffer3_validArray_0;
	buffer3_nReadyArray_0 <= fork2_readyArray_0;
	fork2_dataInArray_0 <= std_logic_vector (resize(unsigned(buffer3_dataOutArray_0),fork2_dataInArray_0'length));

	fork2_clk <= clk;
	fork2_rst <= rst;
	extsi2_pValidArray_0 <= fork2_validArray_0;
	fork2_nReadyArray_0 <= extsi2_readyArray_0;
	extsi2_dataInArray_0 <= std_logic_vector (resize(unsigned(fork2_dataOutArray_0),extsi2_dataInArray_0'length));
	extsi3_pValidArray_0 <= fork2_validArray_1;
	fork2_nReadyArray_1 <= extsi3_readyArray_0;
	extsi3_dataInArray_0 <= std_logic_vector (resize(unsigned(fork2_dataOutArray_1),extsi3_dataInArray_0'length));
	extsi4_pValidArray_0 <= fork2_validArray_2;
	fork2_nReadyArray_2 <= extsi4_readyArray_0;
	extsi4_dataInArray_0 <= std_logic_vector (resize(unsigned(fork2_dataOutArray_2),extsi4_dataInArray_0'length));

	extsi2_clk <= clk;
	extsi2_rst <= rst;
	addi1_pValidArray_0 <= extsi2_validArray_0;
	extsi2_nReadyArray_0 <= addi1_readyArray_0;
	addi1_dataInArray_0 <= std_logic_vector (resize(unsigned(extsi2_dataOutArray_0),addi1_dataInArray_0'length));

	extsi3_clk <= clk;
	extsi3_rst <= rst;
	subi1_pValidArray_1 <= extsi3_validArray_0;
	extsi3_nReadyArray_0 <= subi1_readyArray_1;
	subi1_dataInArray_1 <= std_logic_vector (resize(unsigned(extsi3_dataOutArray_0),subi1_dataInArray_1'length));

	extsi4_clk <= clk;
	extsi4_rst <= rst;
	mc_load0_pValidArray_1 <= extsi4_validArray_0;
	extsi4_nReadyArray_0 <= mc_load0_readyArray_1;
	mc_load0_dataInArray_1 <= std_logic_vector (resize(unsigned(extsi4_dataOutArray_0),mc_load0_dataInArray_1'length));

	buffer4_clk <= clk;
	buffer4_rst <= rst;
	mux1_pValidArray_0 <= buffer4_validArray_0;
	buffer4_nReadyArray_0 <= mux1_readyArray_0;
	mux1_dataInArray_0 <= std_logic_vector (resize(unsigned(buffer4_dataOutArray_0),mux1_dataInArray_0'length));

	mux1_clk <= clk;
	mux1_rst <= rst;
	buffer5_pValidArray_0 <= mux1_validArray_0;
	mux1_nReadyArray_0 <= buffer5_readyArray_0;
	buffer5_dataInArray_0 <= std_logic_vector (resize(unsigned(mux1_dataOutArray_0),buffer5_dataInArray_0'length));

	control_merge0_clk <= clk;
	control_merge0_rst <= rst;
	buffer2_pValidArray_0 <= control_merge0_validArray_0;
	control_merge0_nReadyArray_0 <= buffer2_readyArray_0;
	buffer2_dataInArray_0 <= std_logic_vector (resize(unsigned(control_merge0_dataOutArray_0),buffer2_dataInArray_0'length));
	fork3_pValidArray_0 <= control_merge0_validArray_1;
	control_merge0_nReadyArray_1 <= fork3_readyArray_0;
	fork3_dataInArray_0 <= std_logic_vector (resize(unsigned(control_merge0_dataOutArray_1),fork3_dataInArray_0'length));

	fork3_clk <= clk;
	fork3_rst <= rst;
	mux2_pValidArray_0 <= fork3_validArray_0;
	fork3_nReadyArray_0 <= mux2_readyArray_0;
	mux2_dataInArray_0 <= std_logic_vector (resize(unsigned(fork3_dataOutArray_0),mux2_dataInArray_0'length));
	buffer4_pValidArray_0 <= fork3_validArray_1;
	fork3_nReadyArray_1 <= buffer4_readyArray_0;
	buffer4_dataInArray_0 <= std_logic_vector (resize(unsigned(fork3_dataOutArray_1),buffer4_dataInArray_0'length));

	source0_clk <= clk;
	source0_rst <= rst;
	constant4_pValidArray_0 <= source0_validArray_0;
	source0_nReadyArray_0 <= constant4_readyArray_0;
	constant4_dataInArray_0 <= "01111100111";

	constant4_clk <= clk;
	constant4_rst <= rst;
	extsi5_pValidArray_0 <= constant4_validArray_0;
	constant4_nReadyArray_0 <= extsi5_readyArray_0;
	extsi5_dataInArray_0 <= std_logic_vector (resize(unsigned(constant4_dataOutArray_0),extsi5_dataInArray_0'length));

	extsi5_clk <= clk;
	extsi5_rst <= rst;
	subi1_pValidArray_0 <= extsi5_validArray_0;
	extsi5_nReadyArray_0 <= subi1_readyArray_0;
	subi1_dataInArray_0 <= std_logic_vector (resize(unsigned(extsi5_dataOutArray_0),subi1_dataInArray_0'length));

	source1_clk <= clk;
	source1_rst <= rst;
	constant6_pValidArray_0 <= source1_validArray_0;
	source1_nReadyArray_0 <= constant6_readyArray_0;
	constant6_dataInArray_0 <= "01111101000";

	constant6_clk <= clk;
	constant6_rst <= rst;
	extsi8_pValidArray_0 <= constant6_validArray_0;
	constant6_nReadyArray_0 <= extsi8_readyArray_0;
	extsi8_dataInArray_0 <= std_logic_vector (resize(unsigned(constant6_dataOutArray_0),extsi8_dataInArray_0'length));

	extsi8_clk <= clk;
	extsi8_rst <= rst;
	cmpi0_pValidArray_1 <= extsi8_validArray_0;
	extsi8_nReadyArray_0 <= cmpi0_readyArray_1;
	cmpi0_dataInArray_1 <= std_logic_vector (resize(unsigned(extsi8_dataOutArray_0),cmpi0_dataInArray_1'length));

	source2_clk <= clk;
	source2_rst <= rst;
	constant7_pValidArray_0 <= source2_validArray_0;
	source2_nReadyArray_0 <= constant7_readyArray_0;
	constant7_dataInArray_0 <= "01";

	constant7_clk <= clk;
	constant7_rst <= rst;
	extsi6_pValidArray_0 <= constant7_validArray_0;
	constant7_nReadyArray_0 <= extsi6_readyArray_0;
	extsi6_dataInArray_0 <= std_logic_vector (resize(unsigned(constant7_dataOutArray_0),extsi6_dataInArray_0'length));

	extsi6_clk <= clk;
	extsi6_rst <= rst;
	addi1_pValidArray_1 <= extsi6_validArray_0;
	extsi6_nReadyArray_0 <= addi1_readyArray_1;
	addi1_dataInArray_1 <= std_logic_vector (resize(unsigned(extsi6_dataOutArray_0),addi1_dataInArray_1'length));

	mc_load0_clk <= clk;
	mc_load0_rst <= rst;
	muli0_pValidArray_0 <= mc_load0_validArray_0;
	mc_load0_nReadyArray_0 <= muli0_readyArray_0;
	muli0_dataInArray_0 <= std_logic_vector (resize(unsigned(mc_load0_dataOutArray_0),muli0_dataInArray_0'length));
	mem_controller0_pValidArray_0 <= mc_load0_validArray_1;
	mc_load0_nReadyArray_1 <= mem_controller0_readyArray_0;
	mem_controller0_dataInArray_0 <= std_logic_vector (resize(unsigned(mc_load0_dataOutArray_1),mem_controller0_dataInArray_0'length));

	subi1_clk <= clk;
	subi1_rst <= rst;
	extsi7_pValidArray_0 <= subi1_validArray_0;
	subi1_nReadyArray_0 <= extsi7_readyArray_0;
	extsi7_dataInArray_0 <= std_logic_vector (resize(unsigned(subi1_dataOutArray_0),extsi7_dataInArray_0'length));

	extsi7_clk <= clk;
	extsi7_rst <= rst;
	mc_load1_pValidArray_1 <= extsi7_validArray_0;
	extsi7_nReadyArray_0 <= mc_load1_readyArray_1;
	mc_load1_dataInArray_1 <= std_logic_vector (resize(unsigned(extsi7_dataOutArray_0),mc_load1_dataInArray_1'length));

	mc_load1_clk <= clk;
	mc_load1_rst <= rst;
	muli0_pValidArray_1 <= mc_load1_validArray_0;
	mc_load1_nReadyArray_0 <= muli0_readyArray_1;
	muli0_dataInArray_1 <= std_logic_vector (resize(unsigned(mc_load1_dataOutArray_0),muli0_dataInArray_1'length));
	mem_controller1_pValidArray_0 <= mc_load1_validArray_1;
	mc_load1_nReadyArray_1 <= mem_controller1_readyArray_0;
	mem_controller1_dataInArray_0 <= std_logic_vector (resize(unsigned(mc_load1_dataOutArray_1),mem_controller1_dataInArray_0'length));

	muli0_clk <= clk;
	muli0_rst <= rst;
	addi0_pValidArray_1 <= muli0_validArray_0;
	muli0_nReadyArray_0 <= addi0_readyArray_1;
	addi0_dataInArray_1 <= std_logic_vector (resize(unsigned(muli0_dataOutArray_0),addi0_dataInArray_1'length));

	buffer5_clk <= clk;
	buffer5_rst <= rst;
	addi0_pValidArray_0 <= buffer5_validArray_0;
	buffer5_nReadyArray_0 <= addi0_readyArray_0;
	addi0_dataInArray_0 <= std_logic_vector (resize(unsigned(buffer5_dataOutArray_0),addi0_dataInArray_0'length));

	addi0_clk <= clk;
	addi0_rst <= rst;
	cond_br2_pValidArray_0 <= addi0_validArray_0;
	addi0_nReadyArray_0 <= cond_br2_readyArray_0;
	cond_br2_dataInArray_0 <= std_logic_vector (resize(unsigned(addi0_dataOutArray_0),cond_br2_dataInArray_0'length));

	addi1_clk <= clk;
	addi1_rst <= rst;
	buffer6_pValidArray_0 <= addi1_validArray_0;
	addi1_nReadyArray_0 <= buffer6_readyArray_0;
	buffer6_dataInArray_0 <= std_logic_vector (resize(unsigned(addi1_dataOutArray_0),buffer6_dataInArray_0'length));

	buffer6_clk <= clk;
	buffer6_rst <= rst;
	fork4_pValidArray_0 <= buffer6_validArray_0;
	buffer6_nReadyArray_0 <= fork4_readyArray_0;
	fork4_dataInArray_0 <= std_logic_vector (resize(unsigned(buffer6_dataOutArray_0),fork4_dataInArray_0'length));

	fork4_clk <= clk;
	fork4_rst <= rst;
	trunci0_pValidArray_0 <= fork4_validArray_0;
	fork4_nReadyArray_0 <= trunci0_readyArray_0;
	trunci0_dataInArray_0 <= std_logic_vector (resize(unsigned(fork4_dataOutArray_0),trunci0_dataInArray_0'length));
	cmpi0_pValidArray_0 <= fork4_validArray_1;
	fork4_nReadyArray_1 <= cmpi0_readyArray_0;
	cmpi0_dataInArray_0 <= std_logic_vector (resize(unsigned(fork4_dataOutArray_1),cmpi0_dataInArray_0'length));

	trunci0_clk <= clk;
	trunci0_rst <= rst;
	cond_br0_pValidArray_0 <= trunci0_validArray_0;
	trunci0_nReadyArray_0 <= cond_br0_readyArray_0;
	cond_br0_dataInArray_0 <= std_logic_vector (resize(unsigned(trunci0_dataOutArray_0),cond_br0_dataInArray_0'length));

	cmpi0_clk <= clk;
	cmpi0_rst <= rst;
	fork5_pValidArray_0 <= cmpi0_validArray_0;
	cmpi0_nReadyArray_0 <= fork5_readyArray_0;
	fork5_dataInArray_0 <= std_logic_vector (resize(unsigned(cmpi0_dataOutArray_0),fork5_dataInArray_0'length));

	fork5_clk <= clk;
	fork5_rst <= rst;
	cond_br0_pValidArray_1 <= fork5_validArray_0;
	fork5_nReadyArray_0 <= cond_br0_readyArray_1;
	cond_br0_dataInArray_1 <= std_logic_vector (resize(unsigned(fork5_dataOutArray_0),cond_br0_dataInArray_1'length));
	buffer0_pValidArray_0 <= fork5_validArray_1;
	fork5_nReadyArray_1 <= buffer0_readyArray_0;
	buffer0_dataInArray_0 <= std_logic_vector (resize(unsigned(fork5_dataOutArray_1),buffer0_dataInArray_0'length));
	cond_br3_pValidArray_1 <= fork5_validArray_2;
	fork5_nReadyArray_2 <= cond_br3_readyArray_1;
	cond_br3_dataInArray_1 <= std_logic_vector (resize(unsigned(fork5_dataOutArray_2),cond_br3_dataInArray_1'length));

	cond_br0_clk <= clk;
	cond_br0_rst <= rst;
	mux2_pValidArray_1 <= cond_br0_validArray_0;
	cond_br0_nReadyArray_0 <= mux2_readyArray_1;
	mux2_dataInArray_1 <= std_logic_vector (resize(unsigned(cond_br0_dataOutArray_0),mux2_dataInArray_1'length));
	sink0_pValidArray_0 <= cond_br0_validArray_1;
	cond_br0_nReadyArray_1 <= sink0_readyArray_0;
	sink0_dataInArray_0 <= std_logic_vector (resize(unsigned(cond_br0_dataOutArray_1),sink0_dataInArray_0'length));

	sink0_clk <= clk;
	sink0_rst <= rst;

	buffer0_clk <= clk;
	buffer0_rst <= rst;
	cond_br2_pValidArray_1 <= buffer0_validArray_0;
	buffer0_nReadyArray_0 <= cond_br2_readyArray_1;
	cond_br2_dataInArray_1 <= std_logic_vector (resize(unsigned(buffer0_dataOutArray_0),cond_br2_dataInArray_1'length));

	cond_br2_clk <= clk;
	cond_br2_rst <= rst;
	mux1_pValidArray_1 <= cond_br2_validArray_0;
	cond_br2_nReadyArray_0 <= mux1_readyArray_1;
	mux1_dataInArray_1 <= std_logic_vector (resize(unsigned(cond_br2_dataOutArray_0),mux1_dataInArray_1'length));
	buffer1_pValidArray_0 <= cond_br2_validArray_1;
	cond_br2_nReadyArray_1 <= buffer1_readyArray_0;
	buffer1_dataInArray_0 <= std_logic_vector (resize(unsigned(cond_br2_dataOutArray_1),buffer1_dataInArray_0'length));

	buffer2_clk <= clk;
	buffer2_rst <= rst;
	cond_br3_pValidArray_0 <= buffer2_validArray_0;
	buffer2_nReadyArray_0 <= cond_br3_readyArray_0;
	cond_br3_dataInArray_0 <= std_logic_vector (resize(unsigned(buffer2_dataOutArray_0),cond_br3_dataInArray_0'length));

	cond_br3_clk <= clk;
	cond_br3_rst <= rst;
	control_merge0_pValidArray_0 <= cond_br3_validArray_0;
	cond_br3_nReadyArray_0 <= control_merge0_readyArray_0;
	control_merge0_dataInArray_0 <= std_logic_vector (resize(unsigned(cond_br3_dataOutArray_0),control_merge0_dataInArray_0'length));
	sink1_pValidArray_0 <= cond_br3_validArray_1;
	cond_br3_nReadyArray_1 <= sink1_readyArray_0;
	sink1_dataInArray_0 <= std_logic_vector (resize(unsigned(cond_br3_dataOutArray_1),sink1_dataInArray_0'length));

	sink1_clk <= clk;
	sink1_rst <= rst;

	buffer1_clk <= clk;
	buffer1_rst <= rst;
	d_return0_pValidArray_0 <= buffer1_validArray_0;
	buffer1_nReadyArray_0 <= d_return0_readyArray_0;
	d_return0_dataInArray_0 <= std_logic_vector (resize(unsigned(buffer1_dataOutArray_0),d_return0_dataInArray_0'length));

	d_return0_clk <= clk;
	d_return0_rst <= rst;
	end0_pValidArray_2 <= d_return0_validArray_0;
	d_return0_nReadyArray_0 <= end0_readyArray_2;
	end0_dataInArray_2 <= std_logic_vector (resize(unsigned(d_return0_dataOutArray_0),end0_dataInArray_2'length));

	end0_clk <= clk;
	end0_rst <= rst;
	end_valid <= end0_validArray_0;
	end_out <= end0_dataOutArray_0;
	end0_nReadyArray_0 <= end_ready;

start_0: entity work.start_node(arch) generic map (1,1,1,1)
port map (
	clk => start_0_clk,
	rst => start_0_rst,
	dataInArray(0) => start_0_dataInArray_0,
	pValidArray(0) => start_0_pValidArray_0,
	readyArray(0) => start_0_readyArray_0,
	nReadyArray(0) => start_0_nReadyArray_0,
	validArray(0) => start_0_validArray_0,
	dataOutArray(0) => start_0_dataOutArray_0
);

mem_controller0: entity work.MemCont(arch) generic map (32,32,1,1,1)
port map (
	clk => mem_controller0_clk,
	rst => mem_controller0_rst,
	io_storeDataOut => idx_dout0,
	io_storeAddrOut => idx_address0,
	io_storeEnable => mem_controller0_we0_ce0,
	io_loadDataIn => idx_din1,
	io_loadAddrOut => idx_address1,
	io_loadEnable => idx_ce1,
	io_bbReadyToPrevs(0) => mem_controller0_readyArray_1,
	io_bbpValids(0) => '0',
	io_bb_stCountArray(0) => x"00000000",
	io_rdPortsPrev_ready(0) => mem_controller0_readyArray_0,
	io_rdPortsPrev_valid(0) => mem_controller0_pValidArray_0,
	io_rdPortsPrev_bits(0) => mem_controller0_dataInArray_0,
	io_wrAddrPorts_ready(0) => mem_controller0_readyArray_2,
	io_wrAddrPorts_valid(0) => mem_controller0_pValidArray_2,
	io_wrAddrPorts_bits(0) => mem_controller0_dataInArray_2,
	io_wrDataPorts_ready(0) => mem_controller0_readyArray_3,
	io_wrDataPorts_valid(0) => mem_controller0_pValidArray_3,
	io_wrDataPorts_bits(0) => mem_controller0_dataInArray_3,
	io_rdPortsNext_ready(0) => mem_controller0_nReadyArray_0,
	io_rdPortsNext_valid(0) => mem_controller0_validArray_0,
	io_rdPortsNext_bits(0) => mem_controller0_dataOutArray_0,
	io_Empty_Valid => mem_controller0_validArray_1,
	io_Empty_Ready => mem_controller0_nReadyArray_1

);

mem_controller1: entity work.MemCont(arch) generic map (32,32,1,1,1)
port map (
	clk => mem_controller1_clk,
	rst => mem_controller1_rst,
	io_storeDataOut => di_dout0,
	io_storeAddrOut => di_address0,
	io_storeEnable => mem_controller1_we0_ce0,
	io_loadDataIn => di_din1,
	io_loadAddrOut => di_address1,
	io_loadEnable => di_ce1,
	io_bbReadyToPrevs(0) => mem_controller1_readyArray_1,
	io_bbpValids(0) => '0',
	io_bb_stCountArray(0) => x"00000000",
	io_rdPortsPrev_ready(0) => mem_controller1_readyArray_0,
	io_rdPortsPrev_valid(0) => mem_controller1_pValidArray_0,
	io_rdPortsPrev_bits(0) => mem_controller1_dataInArray_0,
	io_wrAddrPorts_ready(0) => mem_controller1_readyArray_2,
	io_wrAddrPorts_valid(0) => mem_controller1_pValidArray_2,
	io_wrAddrPorts_bits(0) => mem_controller1_dataInArray_2,
	io_wrDataPorts_ready(0) => mem_controller1_readyArray_3,
	io_wrDataPorts_valid(0) => mem_controller1_pValidArray_3,
	io_wrDataPorts_bits(0) => mem_controller1_dataInArray_3,
	io_rdPortsNext_ready(0) => mem_controller1_nReadyArray_0,
	io_rdPortsNext_valid(0) => mem_controller1_validArray_0,
	io_rdPortsNext_bits(0) => mem_controller1_dataOutArray_0,
	io_Empty_Valid => mem_controller1_validArray_1,
	io_Empty_Ready => mem_controller1_nReadyArray_1

);

fork0: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => fork0_clk,
	rst => fork0_rst,
	dataInArray(0) => fork0_dataInArray_0,
	pValidArray(0) => fork0_pValidArray_0,
	readyArray(0) => fork0_readyArray_0,
	nReadyArray(0) => fork0_nReadyArray_0,
	nReadyArray(1) => fork0_nReadyArray_1,
	validArray(0) => fork0_validArray_0,
	validArray(1) => fork0_validArray_1,
	dataOutArray(0) => fork0_dataOutArray_0,
	dataOutArray(1) => fork0_dataOutArray_1
);

constant1: entity work.Const(arch) generic map (1,1,1,1)
port map (
	clk => constant1_clk,
	rst => constant1_rst,
	dataInArray(0) => constant1_dataInArray_0,
	pValidArray(0) => constant1_pValidArray_0,
	readyArray(0) => constant1_readyArray_0,
	nReadyArray(0) => constant1_nReadyArray_0,
	validArray(0) => constant1_validArray_0,
	dataOutArray(0) => constant1_dataOutArray_0
);

fork1: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => fork1_clk,
	rst => fork1_rst,
	dataInArray(0) => fork1_dataInArray_0,
	pValidArray(0) => fork1_pValidArray_0,
	readyArray(0) => fork1_readyArray_0,
	nReadyArray(0) => fork1_nReadyArray_0,
	nReadyArray(1) => fork1_nReadyArray_1,
	validArray(0) => fork1_validArray_0,
	validArray(1) => fork1_validArray_1,
	dataOutArray(0) => fork1_dataOutArray_0,
	dataOutArray(1) => fork1_dataOutArray_1
);

extsi0: entity work.sext_op(arch) generic map (1,1,1,11)
port map (
	clk => extsi0_clk,
	rst => extsi0_rst,
	dataInArray(0) => extsi0_dataInArray_0,
	pValidArray(0) => extsi0_pValidArray_0,
	readyArray(0) => extsi0_readyArray_0,
	nReadyArray(0) => extsi0_nReadyArray_0,
	validArray(0) => extsi0_validArray_0,
	dataOutArray(0) => extsi0_dataOutArray_0
);

extsi1: entity work.sext_op(arch) generic map (1,1,1,32)
port map (
	clk => extsi1_clk,
	rst => extsi1_rst,
	dataInArray(0) => extsi1_dataInArray_0,
	pValidArray(0) => extsi1_pValidArray_0,
	readyArray(0) => extsi1_readyArray_0,
	nReadyArray(0) => extsi1_nReadyArray_0,
	validArray(0) => extsi1_validArray_0,
	dataOutArray(0) => extsi1_dataOutArray_0
);

mux2: entity work.Mux(arch) generic map (3,1,11,11,1)
port map (
	clk => mux2_clk,
	rst => mux2_rst,
	Condition(0) => mux2_dataInArray_0,
	dataInArray(0) => mux2_dataInArray_1,
	dataInArray(1) => mux2_dataInArray_2,
	pValidArray(0) => mux2_pValidArray_0,
	pValidArray(1) => mux2_pValidArray_1,
	pValidArray(2) => mux2_pValidArray_2,
	readyArray(0) => mux2_readyArray_0,
	readyArray(1) => mux2_readyArray_1,
	readyArray(2) => mux2_readyArray_2,
	nReadyArray(0) => mux2_nReadyArray_0,
	validArray(0) => mux2_validArray_0,
	dataOutArray(0) => mux2_dataOutArray_0
);

buffer3: entity work.elasticBuffer(arch) generic map (1,1,11,11)
port map (
	clk => buffer3_clk,
	rst => buffer3_rst,
	dataInArray(0) => buffer3_dataInArray_0,
	pValidArray(0) => buffer3_pValidArray_0,
	readyArray(0) => buffer3_readyArray_0,
	nReadyArray(0) => buffer3_nReadyArray_0,
	validArray(0) => buffer3_validArray_0,
	dataOutArray(0) => buffer3_dataOutArray_0
);

fork2: entity work.fork(arch) generic map (1,3,11,11)
port map (
	clk => fork2_clk,
	rst => fork2_rst,
	dataInArray(0) => fork2_dataInArray_0,
	pValidArray(0) => fork2_pValidArray_0,
	readyArray(0) => fork2_readyArray_0,
	nReadyArray(0) => fork2_nReadyArray_0,
	nReadyArray(1) => fork2_nReadyArray_1,
	nReadyArray(2) => fork2_nReadyArray_2,
	validArray(0) => fork2_validArray_0,
	validArray(1) => fork2_validArray_1,
	validArray(2) => fork2_validArray_2,
	dataOutArray(0) => fork2_dataOutArray_0,
	dataOutArray(1) => fork2_dataOutArray_1,
	dataOutArray(2) => fork2_dataOutArray_2
);

extsi2: entity work.sext_op(arch) generic map (1,1,11,12)
port map (
	clk => extsi2_clk,
	rst => extsi2_rst,
	dataInArray(0) => extsi2_dataInArray_0,
	pValidArray(0) => extsi2_pValidArray_0,
	readyArray(0) => extsi2_readyArray_0,
	nReadyArray(0) => extsi2_nReadyArray_0,
	validArray(0) => extsi2_validArray_0,
	dataOutArray(0) => extsi2_dataOutArray_0
);

extsi3: entity work.sext_op(arch) generic map (1,1,11,12)
port map (
	clk => extsi3_clk,
	rst => extsi3_rst,
	dataInArray(0) => extsi3_dataInArray_0,
	pValidArray(0) => extsi3_pValidArray_0,
	readyArray(0) => extsi3_readyArray_0,
	nReadyArray(0) => extsi3_nReadyArray_0,
	validArray(0) => extsi3_validArray_0,
	dataOutArray(0) => extsi3_dataOutArray_0
);

extsi4: entity work.sext_op(arch) generic map (1,1,11,32)
port map (
	clk => extsi4_clk,
	rst => extsi4_rst,
	dataInArray(0) => extsi4_dataInArray_0,
	pValidArray(0) => extsi4_pValidArray_0,
	readyArray(0) => extsi4_readyArray_0,
	nReadyArray(0) => extsi4_nReadyArray_0,
	validArray(0) => extsi4_validArray_0,
	dataOutArray(0) => extsi4_dataOutArray_0
);

buffer4: entity work.transpFifo(arch) generic map (1,1,1,1,3)
port map (
	clk => buffer4_clk,
	rst => buffer4_rst,
	dataInArray(0) => buffer4_dataInArray_0,
	pValidArray(0) => buffer4_pValidArray_0,
	readyArray(0) => buffer4_readyArray_0,
	nReadyArray(0) => buffer4_nReadyArray_0,
	validArray(0) => buffer4_validArray_0,
	dataOutArray(0) => buffer4_dataOutArray_0
);

mux1: entity work.Mux(arch) generic map (3,1,32,32,1)
port map (
	clk => mux1_clk,
	rst => mux1_rst,
	Condition(0) => mux1_dataInArray_0,
	dataInArray(0) => mux1_dataInArray_1,
	dataInArray(1) => mux1_dataInArray_2,
	pValidArray(0) => mux1_pValidArray_0,
	pValidArray(1) => mux1_pValidArray_1,
	pValidArray(2) => mux1_pValidArray_2,
	readyArray(0) => mux1_readyArray_0,
	readyArray(1) => mux1_readyArray_1,
	readyArray(2) => mux1_readyArray_2,
	nReadyArray(0) => mux1_nReadyArray_0,
	validArray(0) => mux1_validArray_0,
	dataOutArray(0) => mux1_dataOutArray_0
);

control_merge0: entity work.CntrlMerge(arch) generic map (2,2,1,1,1)
port map (
	clk => control_merge0_clk,
	rst => control_merge0_rst,
	dataInArray(0) => control_merge0_dataInArray_0,
	dataInArray(1) => control_merge0_dataInArray_1,
	pValidArray(0) => control_merge0_pValidArray_0,
	pValidArray(1) => control_merge0_pValidArray_1,
	readyArray(0) => control_merge0_readyArray_0,
	readyArray(1) => control_merge0_readyArray_1,
	nReadyArray(0) => control_merge0_nReadyArray_0,
	nReadyArray(1) => control_merge0_nReadyArray_1,
	validArray(0) => control_merge0_validArray_0,
	validArray(1) => control_merge0_validArray_1,
	dataOutArray(0) => control_merge0_dataOutArray_0,
	Condition(0) => control_merge0_dataOutArray_1
);

fork3: entity work.fork(arch) generic map (1,2,1,1)
port map (
	clk => fork3_clk,
	rst => fork3_rst,
	dataInArray(0) => fork3_dataInArray_0,
	pValidArray(0) => fork3_pValidArray_0,
	readyArray(0) => fork3_readyArray_0,
	nReadyArray(0) => fork3_nReadyArray_0,
	nReadyArray(1) => fork3_nReadyArray_1,
	validArray(0) => fork3_validArray_0,
	validArray(1) => fork3_validArray_1,
	dataOutArray(0) => fork3_dataOutArray_0,
	dataOutArray(1) => fork3_dataOutArray_1
);

source0: entity work.source(arch) generic map (0,1,32,1)
port map (
	clk => source0_clk,
	rst => source0_rst,
	nReadyArray(0) => source0_nReadyArray_0,
	validArray(0) => source0_validArray_0,
	dataOutArray(0) => source0_dataOutArray_0
);

constant4: entity work.Const(arch) generic map (1,1,11,11)
port map (
	clk => constant4_clk,
	rst => constant4_rst,
	dataInArray(0) => constant4_dataInArray_0,
	pValidArray(0) => constant4_pValidArray_0,
	readyArray(0) => constant4_readyArray_0,
	nReadyArray(0) => constant4_nReadyArray_0,
	validArray(0) => constant4_validArray_0,
	dataOutArray(0) => constant4_dataOutArray_0
);

extsi5: entity work.sext_op(arch) generic map (1,1,11,12)
port map (
	clk => extsi5_clk,
	rst => extsi5_rst,
	dataInArray(0) => extsi5_dataInArray_0,
	pValidArray(0) => extsi5_pValidArray_0,
	readyArray(0) => extsi5_readyArray_0,
	nReadyArray(0) => extsi5_nReadyArray_0,
	validArray(0) => extsi5_validArray_0,
	dataOutArray(0) => extsi5_dataOutArray_0
);

source1: entity work.source(arch) generic map (0,1,32,1)
port map (
	clk => source1_clk,
	rst => source1_rst,
	nReadyArray(0) => source1_nReadyArray_0,
	validArray(0) => source1_validArray_0,
	dataOutArray(0) => source1_dataOutArray_0
);

constant6: entity work.Const(arch) generic map (1,1,11,11)
port map (
	clk => constant6_clk,
	rst => constant6_rst,
	dataInArray(0) => constant6_dataInArray_0,
	pValidArray(0) => constant6_pValidArray_0,
	readyArray(0) => constant6_readyArray_0,
	nReadyArray(0) => constant6_nReadyArray_0,
	validArray(0) => constant6_validArray_0,
	dataOutArray(0) => constant6_dataOutArray_0
);

extsi8: entity work.sext_op(arch) generic map (1,1,11,12)
port map (
	clk => extsi8_clk,
	rst => extsi8_rst,
	dataInArray(0) => extsi8_dataInArray_0,
	pValidArray(0) => extsi8_pValidArray_0,
	readyArray(0) => extsi8_readyArray_0,
	nReadyArray(0) => extsi8_nReadyArray_0,
	validArray(0) => extsi8_validArray_0,
	dataOutArray(0) => extsi8_dataOutArray_0
);

source2: entity work.source(arch) generic map (0,1,32,1)
port map (
	clk => source2_clk,
	rst => source2_rst,
	nReadyArray(0) => source2_nReadyArray_0,
	validArray(0) => source2_validArray_0,
	dataOutArray(0) => source2_dataOutArray_0
);

constant7: entity work.Const(arch) generic map (1,1,2,2)
port map (
	clk => constant7_clk,
	rst => constant7_rst,
	dataInArray(0) => constant7_dataInArray_0,
	pValidArray(0) => constant7_pValidArray_0,
	readyArray(0) => constant7_readyArray_0,
	nReadyArray(0) => constant7_nReadyArray_0,
	validArray(0) => constant7_validArray_0,
	dataOutArray(0) => constant7_dataOutArray_0
);

extsi6: entity work.sext_op(arch) generic map (1,1,2,12)
port map (
	clk => extsi6_clk,
	rst => extsi6_rst,
	dataInArray(0) => extsi6_dataInArray_0,
	pValidArray(0) => extsi6_pValidArray_0,
	readyArray(0) => extsi6_readyArray_0,
	nReadyArray(0) => extsi6_nReadyArray_0,
	validArray(0) => extsi6_validArray_0,
	dataOutArray(0) => extsi6_dataOutArray_0
);

mc_load0: entity work.mc_load_op(arch) generic map (2,2,32,32)
port map (
	clk => mc_load0_clk,
	rst => mc_load0_rst,
	dataInArray(0) => mc_load0_dataInArray_0,
	input_addr => mc_load0_dataInArray_1,
	pValidArray(0) => mc_load0_pValidArray_0,
	pValidArray(1) => mc_load0_pValidArray_1,
	readyArray(0) => mc_load0_readyArray_0,
	readyArray(1) => mc_load0_readyArray_1,
	nReadyArray(0) => mc_load0_nReadyArray_0,
	nReadyArray(1) => mc_load0_nReadyArray_1,
	validArray(0) => mc_load0_validArray_0,
	validArray(1) => mc_load0_validArray_1,
	dataOutArray(0) => mc_load0_dataOutArray_0,
	output_addr => mc_load0_dataOutArray_1
);

subi1: entity work.sub_op(arch) generic map (2,1,12,12)
port map (
	clk => subi1_clk,
	rst => subi1_rst,
	dataInArray(0) => subi1_dataInArray_0,
	dataInArray(1) => subi1_dataInArray_1,
	pValidArray(0) => subi1_pValidArray_0,
	pValidArray(1) => subi1_pValidArray_1,
	readyArray(0) => subi1_readyArray_0,
	readyArray(1) => subi1_readyArray_1,
	nReadyArray(0) => subi1_nReadyArray_0,
	validArray(0) => subi1_validArray_0,
	dataOutArray(0) => subi1_dataOutArray_0
);

extsi7: entity work.sext_op(arch) generic map (1,1,12,32)
port map (
	clk => extsi7_clk,
	rst => extsi7_rst,
	dataInArray(0) => extsi7_dataInArray_0,
	pValidArray(0) => extsi7_pValidArray_0,
	readyArray(0) => extsi7_readyArray_0,
	nReadyArray(0) => extsi7_nReadyArray_0,
	validArray(0) => extsi7_validArray_0,
	dataOutArray(0) => extsi7_dataOutArray_0
);

mc_load1: entity work.mc_load_op(arch) generic map (2,2,32,32)
port map (
	clk => mc_load1_clk,
	rst => mc_load1_rst,
	dataInArray(0) => mc_load1_dataInArray_0,
	input_addr => mc_load1_dataInArray_1,
	pValidArray(0) => mc_load1_pValidArray_0,
	pValidArray(1) => mc_load1_pValidArray_1,
	readyArray(0) => mc_load1_readyArray_0,
	readyArray(1) => mc_load1_readyArray_1,
	nReadyArray(0) => mc_load1_nReadyArray_0,
	nReadyArray(1) => mc_load1_nReadyArray_1,
	validArray(0) => mc_load1_validArray_0,
	validArray(1) => mc_load1_validArray_1,
	dataOutArray(0) => mc_load1_dataOutArray_0,
	output_addr => mc_load1_dataOutArray_1
);

muli0: entity work.mul_op(arch) generic map (2,1,32,32)
port map (
	clk => muli0_clk,
	rst => muli0_rst,
	dataInArray(0) => muli0_dataInArray_0,
	dataInArray(1) => muli0_dataInArray_1,
	pValidArray(0) => muli0_pValidArray_0,
	pValidArray(1) => muli0_pValidArray_1,
	readyArray(0) => muli0_readyArray_0,
	readyArray(1) => muli0_readyArray_1,
	nReadyArray(0) => muli0_nReadyArray_0,
	validArray(0) => muli0_validArray_0,
	dataOutArray(0) => muli0_dataOutArray_0
);

buffer5: entity work.elasticBuffer(arch) generic map (1,1,32,32)
port map (
	clk => buffer5_clk,
	rst => buffer5_rst,
	dataInArray(0) => buffer5_dataInArray_0,
	pValidArray(0) => buffer5_pValidArray_0,
	readyArray(0) => buffer5_readyArray_0,
	nReadyArray(0) => buffer5_nReadyArray_0,
	validArray(0) => buffer5_validArray_0,
	dataOutArray(0) => buffer5_dataOutArray_0
);

addi0: entity work.add_op(arch) generic map (2,1,32,32)
port map (
	clk => addi0_clk,
	rst => addi0_rst,
	dataInArray(0) => addi0_dataInArray_0,
	dataInArray(1) => addi0_dataInArray_1,
	pValidArray(0) => addi0_pValidArray_0,
	pValidArray(1) => addi0_pValidArray_1,
	readyArray(0) => addi0_readyArray_0,
	readyArray(1) => addi0_readyArray_1,
	nReadyArray(0) => addi0_nReadyArray_0,
	validArray(0) => addi0_validArray_0,
	dataOutArray(0) => addi0_dataOutArray_0
);

addi1: entity work.add_op(arch) generic map (2,1,12,12)
port map (
	clk => addi1_clk,
	rst => addi1_rst,
	dataInArray(0) => addi1_dataInArray_0,
	dataInArray(1) => addi1_dataInArray_1,
	pValidArray(0) => addi1_pValidArray_0,
	pValidArray(1) => addi1_pValidArray_1,
	readyArray(0) => addi1_readyArray_0,
	readyArray(1) => addi1_readyArray_1,
	nReadyArray(0) => addi1_nReadyArray_0,
	validArray(0) => addi1_validArray_0,
	dataOutArray(0) => addi1_dataOutArray_0
);

buffer6: entity work.elasticBuffer(arch) generic map (1,1,12,12)
port map (
	clk => buffer6_clk,
	rst => buffer6_rst,
	dataInArray(0) => buffer6_dataInArray_0,
	pValidArray(0) => buffer6_pValidArray_0,
	readyArray(0) => buffer6_readyArray_0,
	nReadyArray(0) => buffer6_nReadyArray_0,
	validArray(0) => buffer6_validArray_0,
	dataOutArray(0) => buffer6_dataOutArray_0
);

fork4: entity work.fork(arch) generic map (1,2,12,12)
port map (
	clk => fork4_clk,
	rst => fork4_rst,
	dataInArray(0) => fork4_dataInArray_0,
	pValidArray(0) => fork4_pValidArray_0,
	readyArray(0) => fork4_readyArray_0,
	nReadyArray(0) => fork4_nReadyArray_0,
	nReadyArray(1) => fork4_nReadyArray_1,
	validArray(0) => fork4_validArray_0,
	validArray(1) => fork4_validArray_1,
	dataOutArray(0) => fork4_dataOutArray_0,
	dataOutArray(1) => fork4_dataOutArray_1
);

trunci0: entity work.trunc_op(arch) generic map (1,1,12,11)
port map (
	clk => trunci0_clk,
	rst => trunci0_rst,
	dataInArray(0) => trunci0_dataInArray_0,
	pValidArray(0) => trunci0_pValidArray_0,
	readyArray(0) => trunci0_readyArray_0,
	nReadyArray(0) => trunci0_nReadyArray_0,
	validArray(0) => trunci0_validArray_0,
	dataOutArray(0) => trunci0_dataOutArray_0
);

cmpi0: entity work.icmp_ult_op(arch) generic map (2,1,12,1)
port map (
	clk => cmpi0_clk,
	rst => cmpi0_rst,
	dataInArray(0) => cmpi0_dataInArray_0,
	dataInArray(1) => cmpi0_dataInArray_1,
	pValidArray(0) => cmpi0_pValidArray_0,
	pValidArray(1) => cmpi0_pValidArray_1,
	readyArray(0) => cmpi0_readyArray_0,
	readyArray(1) => cmpi0_readyArray_1,
	nReadyArray(0) => cmpi0_nReadyArray_0,
	validArray(0) => cmpi0_validArray_0,
	dataOutArray(0) => cmpi0_dataOutArray_0
);

fork5: entity work.fork(arch) generic map (1,3,1,1)
port map (
	clk => fork5_clk,
	rst => fork5_rst,
	dataInArray(0) => fork5_dataInArray_0,
	pValidArray(0) => fork5_pValidArray_0,
	readyArray(0) => fork5_readyArray_0,
	nReadyArray(0) => fork5_nReadyArray_0,
	nReadyArray(1) => fork5_nReadyArray_1,
	nReadyArray(2) => fork5_nReadyArray_2,
	validArray(0) => fork5_validArray_0,
	validArray(1) => fork5_validArray_1,
	validArray(2) => fork5_validArray_2,
	dataOutArray(0) => fork5_dataOutArray_0,
	dataOutArray(1) => fork5_dataOutArray_1,
	dataOutArray(2) => fork5_dataOutArray_2
);

cond_br0: entity work.Branch(arch) generic map (2,2,11,11)
port map (
	clk => cond_br0_clk,
	rst => cond_br0_rst,
	dataInArray(0) => cond_br0_dataInArray_0,
	Condition(0) => cond_br0_dataInArray_1,
	pValidArray(0) => cond_br0_pValidArray_0,
	pValidArray(1) => cond_br0_pValidArray_1,
	readyArray(0) => cond_br0_readyArray_0,
	readyArray(1) => cond_br0_readyArray_1,
	nReadyArray(0) => cond_br0_nReadyArray_0,
	nReadyArray(1) => cond_br0_nReadyArray_1,
	validArray(0) => cond_br0_validArray_0,
	validArray(1) => cond_br0_validArray_1,
	dataOutArray(0) => cond_br0_dataOutArray_0,
	dataOutArray(1) => cond_br0_dataOutArray_1
);

sink0: entity work.sink(arch) generic map (1,0,11,32)
port map (
	clk => sink0_clk,
	rst => sink0_rst,
	dataInArray(0) => sink0_dataInArray_0,
	pValidArray(0) => sink0_pValidArray_0,
	readyArray(0) => sink0_readyArray_0
);

buffer0: entity work.transpFifo(arch) generic map (1,1,1,1,3)
port map (
	clk => buffer0_clk,
	rst => buffer0_rst,
	dataInArray(0) => buffer0_dataInArray_0,
	pValidArray(0) => buffer0_pValidArray_0,
	readyArray(0) => buffer0_readyArray_0,
	nReadyArray(0) => buffer0_nReadyArray_0,
	validArray(0) => buffer0_validArray_0,
	dataOutArray(0) => buffer0_dataOutArray_0
);

cond_br2: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => cond_br2_clk,
	rst => cond_br2_rst,
	dataInArray(0) => cond_br2_dataInArray_0,
	Condition(0) => cond_br2_dataInArray_1,
	pValidArray(0) => cond_br2_pValidArray_0,
	pValidArray(1) => cond_br2_pValidArray_1,
	readyArray(0) => cond_br2_readyArray_0,
	readyArray(1) => cond_br2_readyArray_1,
	nReadyArray(0) => cond_br2_nReadyArray_0,
	nReadyArray(1) => cond_br2_nReadyArray_1,
	validArray(0) => cond_br2_validArray_0,
	validArray(1) => cond_br2_validArray_1,
	dataOutArray(0) => cond_br2_dataOutArray_0,
	dataOutArray(1) => cond_br2_dataOutArray_1
);

buffer2: entity work.elasticBuffer(arch) generic map (1,1,1,1)
port map (
	clk => buffer2_clk,
	rst => buffer2_rst,
	dataInArray(0) => buffer2_dataInArray_0,
	pValidArray(0) => buffer2_pValidArray_0,
	readyArray(0) => buffer2_readyArray_0,
	nReadyArray(0) => buffer2_nReadyArray_0,
	validArray(0) => buffer2_validArray_0,
	dataOutArray(0) => buffer2_dataOutArray_0
);

cond_br3: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => cond_br3_clk,
	rst => cond_br3_rst,
	dataInArray(0) => cond_br3_dataInArray_0,
	Condition(0) => cond_br3_dataInArray_1,
	pValidArray(0) => cond_br3_pValidArray_0,
	pValidArray(1) => cond_br3_pValidArray_1,
	readyArray(0) => cond_br3_readyArray_0,
	readyArray(1) => cond_br3_readyArray_1,
	nReadyArray(0) => cond_br3_nReadyArray_0,
	nReadyArray(1) => cond_br3_nReadyArray_1,
	validArray(0) => cond_br3_validArray_0,
	validArray(1) => cond_br3_validArray_1,
	dataOutArray(0) => cond_br3_dataOutArray_0,
	dataOutArray(1) => cond_br3_dataOutArray_1
);

sink1: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink1_clk,
	rst => sink1_rst,
	dataInArray(0) => sink1_dataInArray_0,
	pValidArray(0) => sink1_pValidArray_0,
	readyArray(0) => sink1_readyArray_0
);

buffer1: entity work.elasticBuffer(arch) generic map (1,1,32,32)
port map (
	clk => buffer1_clk,
	rst => buffer1_rst,
	dataInArray(0) => buffer1_dataInArray_0,
	pValidArray(0) => buffer1_pValidArray_0,
	readyArray(0) => buffer1_readyArray_0,
	nReadyArray(0) => buffer1_nReadyArray_0,
	validArray(0) => buffer1_validArray_0,
	dataOutArray(0) => buffer1_dataOutArray_0
);

d_return0: entity work.ret_op(arch) generic map (1,1,32,32)
port map (
	clk => d_return0_clk,
	rst => d_return0_rst,
	dataInArray(0) => d_return0_dataInArray_0,
	pValidArray(0) => d_return0_pValidArray_0,
	readyArray(0) => d_return0_readyArray_0,
	nReadyArray(0) => d_return0_nReadyArray_0,
	validArray(0) => d_return0_validArray_0,
	dataOutArray(0) => d_return0_dataOutArray_0
);

end0: entity work.end_node(arch) generic map (1,2,1,32,32)
port map (
	clk => end0_clk,
	rst => end0_rst,
	dataInArray(0) => end0_dataInArray_2,
	eValidArray(0) => end0_pValidArray_0,
	eValidArray(1) => end0_pValidArray_1,
	pValidArray(0) => end0_pValidArray_2,
	eReadyArray(0) => end0_readyArray_0,
	eReadyArray(1) => end0_readyArray_1,
	readyArray(0) => end0_readyArray_2,
	dataOutArray(0) => end0_dataOutArray_0,
	validArray(0) => end0_validArray_0,
	nReadyArray(0) => end0_nReadyArray_0
);

end behavioral; 
