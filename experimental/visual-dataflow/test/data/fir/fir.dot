digraph G {
	graph [bb="0,0,858.25,1549.5",
		compound=true,
		splines=ortho
	];
	node [label="\N"];
	subgraph cluster0 {
		graph [bb="8,1177,174,1541.5",
			label=block0,
			lheight=0.23,
			lp="91,1529.2",
			lwidth=0.51
		];
		start_0	[bbID=1,
			control=true,
			height=0.5,
			in="in1:0",
			label=start_0,
			mlir_op="handshake.arg",
			out="out1:0",
			pos="115,1491",
			shape=diamond,
			style=dashed,
			type=Entry,
			width=1.4141];
		fork0	[bbID=1,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:0",
			label=fork0,
			mlir_op="handshake.fork",
			out="out1:0 out2:0",
			pos="123,1419",
			shape=box,
			style="filled, dashed",
			type=Fork,
			width=0.75];
		start_0 -> fork0	[from=out1,
			pos="e,123,1437.4 123,1475.4 123,1475.4 123,1448.9 123,1448.9",
			style=dashed,
			to=in1];
		constant1	[bbID=1,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:1",
			label=constant1,
			mlir_op="handshake.constant",
			out="out1:1",
			pos="123,1347",
			shape=box,
			style=filled,
			type=Constant,
			value="0x0",
			width=0.94097];
		fork0 -> constant1	[from=out2,
			pos="e,123,1365.4 123,1400.8 123,1400.8 123,1376.9 123,1376.9",
			style=dashed,
			to=in1];
		fork1	[bbID=1,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork1,
			mlir_op="handshake.fork",
			out="out1:1 out2:1",
			pos="123,1275",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		constant1 -> fork1	[from=out1,
			pos="e,123,1293.4 123,1328.8 123,1328.8 123,1304.9 123,1304.9",
			to=in1];
		extsi0	[II=1,
			bbID=1,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:1",
			label=extsi0,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:11",
			pos="133,1203",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork1 -> extsi0	[from=out1,
			pos="e,125.04,1220.9 125.04,1256.8 125.04,1256.8 125.04,1232.4 125.04,1232.4",
			to=in1];
		extsi1	[II=1,
			bbID=1,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:1",
			label=extsi1,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="49,1203",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork1 -> extsi1	[from=out2,
			pos="e,73.009,1215.5 95.664,1275 83.994,1275 73.009,1275 73.009,1275 73.009,1275 73.009,1227.1 73.009,1227.1",
			to=in1];
	}
	subgraph cluster2 {
		graph [bb="730,8,814,228.5",
			label=block2,
			lheight=0.23,
			lp="772,216.25",
			lwidth=0.51
		];
		buffer1	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:32",
			label=buffer1,
			mlir_op="handshake.buffer",
			out="out1:32",
			pos="769,178",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		d_return0	[II=1,
			bbID=3,
			delay="1.412 1.397 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=gold,
			height=0.5,
			in="in1:32",
			label=d_return0,
			latency=0,
			mlir_op="handshake.d_return",
			op=ret_op,
			out="out1:32",
			pos="772,106",
			shape=box,
			style=filled,
			type=Operator,
			width=0.95139];
		buffer1 -> d_return0	[from=out1,
			pos="e,769,124.41 769,159.83 769,159.83 769,135.93 769,135.93",
			to=in1];
		end0	[bbID=3,
			delay="1.397 0.000 1.397 1.409 100.000 100.000 100.000 100.000",
			fillcolor=gold,
			height=0.5,
			in="in1:0*e in2:0*e in3:32",
			label=end0,
			mlir_op="handshake.end",
			out="out1:32",
			pos="779,34",
			shape=box,
			style=filled,
			type=Exit,
			width=0.75];
		d_return0 -> end0	[from=out1,
			pos="e,779,52.413 779,87.831 779,87.831 779,63.927 779,63.927",
			to=in3];
	}
	subgraph cluster1 {
		graph [bb="214,8,672,1169",
			label=block1,
			lheight=0.23,
			lp="443,1156.8",
			lwidth=0.51
		];
		mux2	[bbID=2,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:11 in3:11",
			label=mux2,
			mlir_op="handshake.mux",
			out="out1:11",
			pos="330,1118.5",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		buffer3	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:11",
			label=buffer3,
			mlir_op="handshake.buffer",
			out="out1:11",
			pos="460,1046.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		mux2 -> buffer3	[from=out1,
			pos="e,431.63,1046 341.54,1100.2 341.54,1078.7 341.54,1046 341.54,1046 341.54,1046 420.11,1046 420.11,1046",
			to=in1];
		fork2	[bbID=2,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:11",
			label=fork2,
			mlir_op="handshake.fork",
			out="out1:11 out2:11 out3:11",
			pos="462,974.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		buffer3 -> fork2	[from=out1,
			pos="e,461.44,992.91 461.44,1028.3 461.44,1028.3 461.44,1004.4 461.44,1004.4",
			to=in1];
		extsi2	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:11",
			label=extsi2,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="359,902.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork2 -> extsi2	[from=out1,
			pos="e,374.46,918.72 434.78,974 409.09,974 374.46,974 374.46,974 374.46,974 374.46,930.24 374.46,930.24",
			to=in1];
		extsi3	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:11",
			label=extsi3,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="547,902.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork2 -> extsi3	[from=out2,
			pos="e,547,920.91 489.36,974 514.21,974 547,974 547,974 547,974 547,932.43 547,932.43",
			to=in1];
		extsi4	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:11",
			label=extsi4,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="463,902.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork2 -> extsi4	[from=out3,
			pos="e,462,920.91 462,956.33 462,956.33 462,932.43 462,932.43",
			to=in1];
		addi1	[II=1,
			bbID=2,
			delay="2.047 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12 in2:12",
			label=addi1,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:12",
			pos="356,830.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		extsi2 -> addi1	[from=out1,
			pos="e,356.73,848.91 356.73,884.33 356.73,884.33 356.73,860.43 356.73,860.43",
			to=in1];
		subi1	[II=1,
			bbID=2,
			delay="2.047 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12 in2:12",
			label=subi1,
			latency=0,
			mlir_op="arith.subi",
			op=sub_op,
			out="out1:12",
			pos="608,830.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.85775];
		extsi3 -> subi1	[from=out1,
			pos="e,588.03,844.63 580.12,902 584.78,902 588.03,902 588.03,902 588.03,902 588.03,856.14 588.03,856.14",
			to=in2];
		mc_load0	[II=1,
			bbID=2,
			delay="1.412 1.409 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=mc_load0,
			latency=2,
			mlir_op="handshake.mc_load",
			op=mc_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="503,758.5",
			shape=box,
			style=filled,
			type=Operator,
			width=0.97222];
		extsi4 -> mc_load0	[from=out1,
			pos="e,481.96,776.57 481.96,887.36 481.96,887.36 481.96,788.09 481.96,788.09",
			to=in2];
		buffer6	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:12",
			label=buffer6,
			mlir_op="handshake.buffer",
			out="out1:12",
			pos="356,758.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		addi1 -> buffer6	[from=out1,
			pos="e,356,776.91 356,812.33 356,812.33 356,788.43 356,788.43",
			to=in1];
		extsi7	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12",
			label=extsi7,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="608,758.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		subi1 -> extsi7	[from=out1,
			pos="e,608,776.91 608,812.33 608,812.33 608,788.43 608,788.43",
			to=in1];
		muli0	[II=1,
			bbID=2,
			delay="0.000 0.000 0.000 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=muli0,
			latency=4,
			mlir_op="arith.muli",
			op=mul_op,
			out="out1:32",
			pos="503,614.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		mc_load0 -> muli0	[from=out1,
			pos="e,509.59,632.59 509.59,740.26 509.59,740.26 509.59,644.1 509.59,644.1",
			to=in1];
		buffer4	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer4,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="310,254.5",
			shape=box,
			slots=3,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		mux1	[bbID=2,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:32 in3:32",
			label=mux1,
			mlir_op="handshake.mux",
			out="out1:32",
			pos="323,178",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		buffer4 -> mux1	[from=out1,
			pos="e,316.94,196.26 316.94,236.37 316.94,236.37 316.94,207.78 316.94,207.78",
			to=in1];
		buffer5	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:32",
			label=buffer5,
			mlir_op="handshake.buffer",
			out="out1:32",
			pos="337,106",
			shape=box,
			slots=2,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		mux1 -> buffer5	[from=out1,
			pos="e,329.56,124.41 329.56,159.83 329.56,159.83 329.56,135.93 329.56,135.93",
			to=in1];
		addi0	[II=1,
			bbID=2,
			delay="2.287 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=addi0,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:32",
			pos="410,34",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		buffer5 -> addi0	[from=out1,
			pos="e,378.19,34 337,87.831 337,66.502 337,34 337,34 337,34 366.68,34 366.68,34",
			to=in1];
		control_merge0	[bbID=2,
			delay="0.000 1.397 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1:0 in2:0",
			label=control_merge0,
			mlir_op="handshake.control_merge",
			out="out1:0 out2?:1",
			pos="293,398.5",
			shape=box,
			style="filled, dashed",
			type=CntrlMerge,
			width=1.4201];
		fork3	[bbID=2,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork3,
			mlir_op="handshake.fork",
			out="out1:1 out2:1",
			pos="290,326.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		control_merge0 -> fork3	[from=out2,
			pos="e,290,344.91 290,380.33 290,380.33 290,356.43 290,356.43",
			to=in1];
		buffer2	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:0",
			label=buffer2,
			mlir_op="handshake.buffer",
			out="out1:0",
			pos="363,326.5",
			shape=box,
			slots=2,
			style="filled, dashed",
			transparent=false,
			type=Buffer,
			width=0.77431];
		control_merge0 -> buffer2	[from=out1,
			pos="e,339.62,344.91 339.62,380.33 339.62,380.33 339.62,356.43 339.62,356.43",
			style=dashed,
			to=in1];
		fork3 -> mux2	[from=out1,
			pos="e,302.77,1118 262.57,326 241.63,326 216.33,326 216.33,326 216.33,326 216.33,1118 216.33,1118 216.33,1118 291.26,1118 291.26,1118",
			to=in1];
		fork3 -> buffer4	[from=out2,
			pos="e,299.56,272.91 299.56,308.33 299.56,308.33 299.56,284.43 299.56,284.43",
			to=in1];
		cond_br3	[bbID=2,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:0 in2?:1",
			label=cond_br3,
			mlir_op="handshake.cond_br",
			out="out1+:0 out2-:0",
			pos="294,470.5",
			shape=box,
			style="filled, dashed",
			type=Branch,
			width=0.93056];
		buffer2 -> cond_br3	[from=out1,
			pos="e,327.68,470 359.81,344.97 359.81,383.72 359.81,470 359.81,470 359.81,470 339.19,470 339.19,470",
			style=dashed,
			to=in1];
		source0	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source0,
			mlir_op="handshake.source",
			out="out1:0",
			pos="630,1046.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant4	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:11",
			label=constant4,
			mlir_op="handshake.constant",
			out="out1:11",
			pos="630,974.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x3e7",
			width=0.94097];
		source0 -> constant4	[from=out1,
			pos="e,630,992.91 630,1028.3 630,1028.3 630,1004.4 630,1004.4",
			style=dashed,
			to=in1];
		extsi5	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:11",
			label=extsi5,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="631,902.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant4 -> extsi5	[from=out1,
			pos="e,630.97,920.91 630.97,956.33 630.97,956.33 630.97,932.43 630.97,932.43",
			to=in1];
		extsi5 -> subi1	[from=out1,
			pos="e,618.48,847.44 618.48,885.44 618.48,885.44 618.48,858.95 618.48,858.95",
			to=in1];
		source1	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source1,
			mlir_op="handshake.source",
			out="out1:0",
			pos="276,830.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant6	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:11",
			label=constant6,
			mlir_op="handshake.constant",
			out="out1:11",
			pos="276,758.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x3e8",
			width=0.94097];
		source1 -> constant6	[from=out1,
			pos="e,276,776.91 276,812.33 276,812.33 276,788.43 276,788.43",
			style=dashed,
			to=in1];
		extsi8	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:11",
			label=extsi8,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="276,686.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant6 -> extsi8	[from=out1,
			pos="e,276,704.91 276,740.33 276,740.33 276,716.43 276,716.43",
			to=in1];
		cmpi0	[II=1,
			bbID=2,
			delay="1.808 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12 in2:12",
			label=cmpi0,
			latency=0,
			mlir_op="arith.cmpi<",
			op=icmp_ult_op,
			out="out1:1",
			pos="276,614.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.95727];
		extsi8 -> cmpi0	[from=out1,
			pos="e,276,632.91 276,668.33 276,668.33 276,644.43 276,644.43",
			to=in2];
		fork5	[bbID=2,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork5,
			mlir_op="handshake.fork",
			out="out1:1 out2:1 out3:1",
			pos="274,542.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		cmpi0 -> fork5	[from=out1,
			pos="e,274,560.91 274,596.33 274,596.33 274,572.43 274,572.43",
			to=in1];
		source2	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source2,
			mlir_op="handshake.source",
			out="out1:0",
			pos="276,1046.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant7	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:2",
			label=constant7,
			mlir_op="handshake.constant",
			out="out1:2",
			pos="276,974.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x1",
			width=0.94097];
		source2 -> constant7	[from=out1,
			pos="e,276,992.91 276,1028.3 276,1028.3 276,1004.4 276,1004.4",
			style=dashed,
			to=in1];
		extsi6	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:2",
			label=extsi6,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="275,902.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant7 -> extsi6	[from=out1,
			pos="e,275.03,920.91 275.03,956.33 275.03,956.33 275.03,932.43 275.03,932.43",
			to=in1];
		extsi6 -> addi1	[from=out1,
			pos="e,324.29,830 308.16,902 312.08,902 314.72,902 314.72,902 314.72,902 314.72,830 314.72,830 314.72,830 315.68,830 315.68,830",
			to=in2];
		muli0 -> addi0	[from=out1,
			pos="e,441.75,34 503,596.17 503,497.49 503,34 503,34 503,34 453.26,34 453.26,34",
			to=in2];
		mc_load1	[II=1,
			bbID=2,
			delay="1.412 1.409 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=mc_load1,
			latency=2,
			mlir_op="handshake.mc_load",
			op=mc_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="608,686.5",
			shape=box,
			style=filled,
			type=Operator,
			width=0.97222];
		extsi7 -> mc_load1	[from=out1,
			pos="e,608,704.91 608,740.33 608,740.33 608,716.43 608,716.43",
			to=in2];
		mc_load1 -> muli0	[from=out1,
			pos="e,522.76,629.31 572.84,686 549.35,686 522.76,686 522.76,686 522.76,686 522.76,640.83 522.76,640.83",
			to=in2];
		cond_br2	[bbID=2,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:32 in2?:1",
			label=cond_br2,
			mlir_op="handshake.cond_br",
			out="out1+:32 out2-:32",
			pos="410,254.5",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		addi0 -> cond_br2	[from=out1,
			pos="e,410,236.29 410,52.42 410,52.42 410,224.77 410,224.77",
			to=in1];
		cond_br2 -> mux1	[color=blue,
			from=out1,
			pos="e,343.94,196.4 376.19,254 359.94,254 343.94,254 343.94,254 343.94,254 343.94,207.91 343.94,207.91",
			to=in2];
		fork4	[bbID=2,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:12",
			label=fork4,
			mlir_op="handshake.fork",
			out="out1:12 out2:12",
			pos="356,686.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		buffer6 -> fork4	[from=out1,
			pos="e,356,704.91 356,740.33 356,740.33 356,716.43 356,716.43",
			to=in1];
		fork4 -> cmpi0	[from=out2,
			pos="e,310.67,614 347,668.21 347,646.73 347,614 347,614 347,614 322.18,614 322.18,614",
			to=in1];
		trunci0	[II=1,
			bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12",
			label=trunci0,
			latency=0,
			mlir_op="arith.trunci",
			op=trunc_op,
			out="out1:11",
			pos="356,542.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0284];
		fork4 -> trunci0	[from=out1,
			pos="e,365,560.14 365,668.26 365,668.26 365,571.65 365,571.65",
			to=in1];
		cond_br0	[bbID=2,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:11 in2?:1",
			label=cond_br0,
			mlir_op="handshake.cond_br",
			out="out1+:11 out2-:11",
			pos="409,470.5",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		trunci0 -> cond_br0	[from=out1,
			pos="e,387.18,488.75 387.18,532.49 387.18,532.49 387.18,500.26 387.18,500.26",
			to=in1];
		cond_br0 -> mux2	[color=blue,
			from=out1,
			pos="e,357.15,1118 411.55,488.84 411.55,594.21 411.55,1118 411.55,1118 411.55,1118 368.67,1118 368.67,1118",
			to=in2];
		fork5 -> cond_br0	[from=out1,
			pos="e,381.34,488.67 287.5,524.25 287.5,515.12 287.5,506 287.5,506 287.5,506 381.34,506 381.34,506 381.34,506 381.34,500.18 381.34,500.18",
			to=in2];
		buffer0	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer0,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="410,398.5",
			shape=box,
			slots=3,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork5 -> buffer0	[from=out2,
			pos="e,410,416.68 253.75,524.1 253.75,491.74 253.75,428 253.75,428 253.75,428 410,428 410,428 410,428 410,426.87 410,426.87",
			to=in1];
		fork5 -> cond_br3	[from=out3,
			pos="e,274,488.91 274,524.33 274,524.33 274,500.43 274,500.43",
			to=in2];
		buffer0 -> cond_br2	[from=out1,
			pos="e,414.38,272.59 414.38,380.26 414.38,380.26 414.38,284.1 414.38,284.1",
			to=in2];
		cond_br3 -> control_merge0	[color=blue,
			from=out1,
			pos="e,282.83,416.91 282.83,452.33 282.83,452.33 282.83,428.43 282.83,428.43",
			style=dashed,
			to=in1];
	}
	fork0 -> control_merge0	[from=out1,
		pos="e,241.47,398 150.32,1419 169.27,1419 191.13,1419 191.13,1419 191.13,1419 191.13,398 191.13,398 191.13,398 229.95,398 229.95,398",
		style=dashed,
		to=in2];
	extsi0 -> mux2	[from=out1,
		pos="e,330,1136.8 166.42,1203 222.62,1203 330,1203 330,1203 330,1203 330,1148.3 330,1148.3",
		to=in3];
	extsi1 -> mux1	[from=out1,
		pos="e,295.73,178 49,1184.8 49,1047.3 49,178 49,178 49,178 284.21,178 284.21,178",
		to=in3];
	mem_controller0	[bbID=0,
		bbcount=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=coral,
		height=0.5,
		in="in1:32*l0a",
		label=mem_controller0,
		ldcount=1,
		memory=idx,
		mlir_op="handshake.mem_controller",
		out="out1:32*l0d out2:0*e",
		pos="803,686.5",
		shape=box,
		stcount=0,
		style=filled,
		type=MC,
		width=1.5347];
	mc_load0 -> mem_controller0	[from=out2,
		mem_address=true,
		pos="e,821.42,704.82 496.41,740.05 496.41,733.63 496.41,728 496.41,728 496.41,728 821.42,728 821.42,728 821.42,728 821.42,716.34 821.42,\
716.34",
		to=in1];
	mem_controller1	[bbID=0,
		bbcount=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=coral,
		height=0.5,
		in="in1:32*l0a",
		label=mem_controller1,
		ldcount=1,
		memory=di,
		mlir_op="handshake.mem_controller",
		out="out1:32*l0d out2:0*e",
		pos="762,614.5",
		shape=box,
		stcount=0,
		style=filled,
		type=MC,
		width=1.5347];
	mc_load1 -> mem_controller1	[from=out2,
		mem_address=true,
		pos="e,734.08,632.87 643.46,692 680.75,692 734.08,692 734.08,692 734.08,692 734.08,644.38 734.08,644.38",
		to=in1];
	cond_br2 -> buffer1	[from=out2,
		pos="e,746.56,196.4 443.81,254 529.16,254 746.56,254 746.56,254 746.56,254 746.56,207.91 746.56,207.91",
		to=in1];
	sink0	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:11",
		label=sink0,
		mlir_op="handshake.sink",
		pos="779,398.5",
		shape=box,
		style=filled,
		type=Sink,
		width=0.75];
	cond_br0 -> sink0	[from=out2,
		pos="e,779,416.91 442.82,470 534.15,470 779,470 779,470 779,470 779,428.43 779,428.43",
		to=in1];
	sink1	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:0",
		label=sink1,
		mlir_op="handshake.sink",
		pos="707,398.5",
		shape=box,
		style="filled, dashed",
		type=Sink,
		width=0.75];
	cond_br3 -> sink1	[from=out2,
		pos="e,693.38,416.82 305.17,452.05 305.17,445.63 305.17,440 305.17,440 305.17,440 693.38,440 693.38,440 693.38,440 693.38,428.34 693.38,\
428.34",
		style=dashed,
		to=in1];
	mem_controller0 -> end0	[from=out2,
		pos="e,806.31,28 837.75,668.2 837.75,561.85 837.75,28 837.75,28 837.75,28 817.82,28 817.82,28",
		style=dashed,
		to=in1];
	mem_controller0 -> mc_load0	[from=out1,
		mem_address=false,
		pos="e,483.24,740.23 784.58,704.68 784.58,710.75 784.58,716 784.58,716 784.58,716 483.24,716 483.24,716 483.24,716 483.24,728.72 483.24,\
728.72",
		to=in1];
	mem_controller1 -> end0	[from=out2,
		pos="e,806.34,40 811.75,596.04 811.75,497.7 811.75,40 811.75,40 811.75,40 811.21,40 811.21,40",
		style=dashed,
		to=in2];
	mem_controller1 -> mc_load1	[from=out1,
		mem_address=false,
		pos="e,643.26,680 720.42,632.75 720.42,652.13 720.42,680 720.42,680 720.42,680 654.77,680 654.77,680",
		to=in1];
}
