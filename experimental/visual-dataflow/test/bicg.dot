digraph G {
	graph [bb="0,0,1639,1978",
		compound=true,
		splines=ortho
	];
	node [label="\N"];
	subgraph cluster0 {
		graph [bb="8,1236.5,126,1533.5",
			label=block0,
			lheight=0.23,
			lp="67,1521.2",
			lwidth=0.51
		];
		start_0	[bbID=1,
			control=true,
			height=0.5,
			in="in1:0",
			label=start_0,
			mlir_op="handshake.arg",
			out="out1:0",
			pos="67,1483",
			shape=diamond,
			style=dashed,
			type=Entry,
			width=1.4141];
		fork0	[bbID=1,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:0",
			label=fork0,
			mlir_op="handshake.fork",
			out="out1:0 out2:0",
			pos="84,1411",
			shape=box,
			style="filled, dashed",
			type=Fork,
			width=0.75];
		start_0 -> fork0	[from=out1,
			pos="e,84,1429.2 84,1470.8 84,1470.8 84,1440.7 84,1440.7",
			style=dashed,
			to=in1];
		constant0	[bbID=1,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:1",
			label=constant0,
			mlir_op="handshake.constant",
			out="out1:1",
			pos="84,1339",
			shape=box,
			style=filled,
			type=Constant,
			value="0x00000000",
			width=0.94097];
		fork0 -> constant0	[from=out2,
			pos="e,84,1357.4 84,1392.8 84,1392.8 84,1368.9 84,1368.9",
			style=dashed,
			to=in1];
		extsi0	[II=1,
			bbID=1,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:1",
			label=extsi0,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:6",
			pos="84,1262.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant0 -> extsi0	[from=out1,
			pos="e,84,1280.8 84,1320.9 84,1320.9 84,1292.3 84,1292.3",
			to=in1];
	}
	subgraph cluster2 {
		graph [bb="443,8,848,1970",
			label=block2,
			lheight=0.23,
			lp="645.5,1957.8",
			lwidth=0.51
		];
		mux4	[bbID=3,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:6 in3:6",
			label=mux4,
			mlir_op="handshake.mux",
			out="out1:6",
			pos="781,1919.5",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		fork3	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork3,
			mlir_op="handshake.fork",
			out="out1:6 out2:6 out3:6",
			pos="546,1847.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		mux4 -> fork3	[from=out1,
			pos="e,546,1865.7 795.25,1901.2 795.25,1892.1 795.25,1883 795.25,1883 795.25,1883 546,1883 546,1883 546,1883 546,1877.2 546,1877.2",
			to=in1];
		extsi7	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi7,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:13",
			pos="504,1775.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork3 -> extsi7	[from=out1,
			pos="e,527.96,1788.2 527.96,1829.3 527.96,1829.3 527.96,1799.7 527.96,1799.7",
			to=in1];
		extsi8	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi8,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="588,1775.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork3 -> extsi8	[from=out2,
			pos="e,564.04,1788.2 564.04,1829.3 564.04,1829.3 564.04,1799.7 564.04,1799.7",
			to=in1];
		buffer4	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer4,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="479,1631.5",
			shape=box,
			slots=2,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork3 -> buffer4	[from=out3,
			pos="e,507.03,1637 546,1829.2 546,1778 546,1637 546,1637 546,1637 518.54,1637 518.54,1637",
			to=in1];
		buffer21	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:13",
			label=buffer21,
			mlir_op="handshake.buffer",
			out="out1:13",
			pos="553,1339",
			shape=box,
			slots=3,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		extsi7 -> buffer21	[from=out1,
			pos="e,529.34,1357.3 529.34,1763.8 529.34,1763.8 529.34,1368.8 529.34,1368.8",
			to=in1];
		buffer2	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer2,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="595,1703.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		extsi8 -> buffer2	[from=out1,
			pos="e,594.03,1721.9 594.03,1757.3 594.03,1757.3 594.03,1733.4 594.03,1733.4",
			to=in1];
		extsi9	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi9,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="504,614.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		buffer4 -> extsi9	[from=out1,
			pos="e,481.1,627.76 481.1,1613.4 481.1,1613.4 481.1,639.27 481.1,639.27",
			to=in1];
		addi2	[II=1,
			bbID=3,
			delay="2.047 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:13 in2:13",
			label=addi2,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:13",
			pos="632,614.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		buffer21 -> addi2	[from=out1,
			pos="e,601.91,620 570.37,1320.5 570.37,1208 570.37,620 570.37,620 570.37,620 590.4,620 590.4,620",
			to=in1];
		addi5	[II=1,
			bbID=3,
			delay="1.927 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7 in2:7",
			label=addi5,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:7",
			pos="675,1631.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		buffer2 -> addi5	[from=out1,
			pos="e,645.27,1625 603.94,1685.3 603.94,1662.1 603.94,1625 603.94,1625 603.94,1625 633.76,1625 633.76,1625",
			to=in1];
		fork4	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:32",
			label=fork4,
			mlir_op="handshake.fork",
			out="out1:32 out2:32 out3:32",
			pos="611,470.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		extsi9 -> fork4	[from=out1,
			pos="e,589.23,488.76 535.25,608 559.58,608 589.23,608 589.23,608 589.23,608 589.23,500.27 589.23,500.27",
			to=in1];
		buffer13	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:32",
			label=buffer13,
			mlir_op="handshake.buffer",
			out="out1:32",
			pos="805,398.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.86806];
		fork4 -> buffer13	[from=out1,
			pos="e,777.81,416.67 623.33,452.25 623.33,443.12 623.33,434 623.33,434 623.33,434 777.81,434 777.81,434 777.81,434 777.81,428.18 777.81,\
428.18",
			to=in1];
		LSQ_store0	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=LSQ_store0,
			latency=0,
			mlir_op="handshake.lsq_store",
			op=lsq_store_op,
			out="out1:32 out2:32",
			portId=1,
			pos="776,178",
			shape=box,
			style=filled,
			type=Operator,
			width=1.1285];
		fork4 -> LSQ_store0	[from=out2,
			pos="e,734.96,169 589,452.09 589,386.63 589,169 589,169 589,169 723.45,169 723.45,169",
			to=in2];
		mc_load2	[II=1,
			bbID=3,
			delay="1.412 1.409 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=mc_load2,
			latency=2,
			mlir_op="handshake.mc_load",
			op=mc_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="629,398.5",
			shape=box,
			style=filled,
			type=Operator,
			width=0.97222];
		fork4 -> mc_load2	[from=out3,
			pos="e,608.67,416.91 608.67,452.33 608.67,452.33 608.67,428.43 608.67,428.43",
			to=in2];
		LSQ_load1	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=LSQ_load1,
			latency=5,
			mlir_op="handshake.lsq_load",
			op=lsq_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="801,326.5",
			shape=box,
			style=filled,
			type=Operator,
			width=1.0868];
		buffer13 -> LSQ_load1	[from=out1,
			pos="e,805,344.91 805,380.33 805,380.33 805,356.43 805,356.43",
			to=in2];
		muli1	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=muli1,
			latency=4,
			mlir_op="arith.muli",
			op=mul_op,
			out="out1:32",
			pos="627,326.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		mc_load2 -> muli1	[from=out1,
			pos="e,610.54,342.46 610.54,380.33 610.54,380.33 610.54,353.97 610.54,353.97",
			to=in2];
		buffer16	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer16,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="614,902.5",
			shape=box,
			slots=4,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.86806];
		mux2	[bbID=3,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:32 in3:32",
			label=mux2,
			mlir_op="handshake.mux",
			out="out1:32",
			pos="531,106",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		buffer16 -> mux2	[from=out1,
			pos="e,554.29,124.36 582.4,896 568.08,896 554.29,896 554.29,896 554.29,896 554.29,135.88 554.29,135.88",
			to=in1];
		buffer8	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:32",
			label=buffer8,
			mlir_op="handshake.buffer",
			out="out1:32",
			pos="492,34",
			shape=box,
			slots=2,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		mux2 -> buffer8	[from=out1,
			pos="e,511.94,52.413 511.94,87.831 511.94,87.831 511.94,63.927 511.94,63.927",
			to=in1];
		addi1	[II=1,
			bbID=3,
			delay="2.287 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=addi1,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:32",
			pos="482,254.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		buffer8 -> addi1	[from=out1,
			pos="e,467.81,238.1 467.81,52.42 467.81,52.42 467.81,226.59 467.81,226.59",
			to=in1];
		mux1	[bbID=3,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:6 in3:6",
			label=mux1,
			mlir_op="handshake.mux",
			out="out1:6",
			pos="675,974.5",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		fork5	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork5,
			mlir_op="handshake.fork",
			out="out1:6 out2:6 out3:6",
			pos="692,902.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		mux1 -> fork5	[from=out1,
			pos="e,683.5,920.91 683.5,956.33 683.5,956.33 683.5,932.43 683.5,932.43",
			to=in1];
		extsi10	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi10,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="621,830.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		fork5 -> extsi10	[from=out2,
			pos="e,653.27,840.14 664.68,902 658.27,902 653.27,902 653.27,902 653.27,902 653.27,851.66 653.27,851.66",
			to=in1];
		buffer14	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer14,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="708,830.5",
			shape=box,
			slots=2,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.86806];
		fork5 -> buffer14	[from=out3,
			pos="e,697.87,848.91 697.87,884.33 697.87,884.33 697.87,860.43 697.87,860.43",
			to=in1];
		buffer18	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer18,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="789,830.5",
			shape=box,
			slots=2,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		fork5 -> buffer18	[from=out1,
			pos="e,787,848.91 719.48,902 747.54,902 787,902 787,902 787,902 787,860.43 787,860.43",
			to=in1];
		muli2	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12 in2:12",
			label=muli2,
			latency=4,
			mlir_op="arith.muli",
			op=mul_op,
			out="out1:12",
			pos="632,758.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		extsi10 -> muli2	[from=out1,
			pos="e,618.89,775.43 618.89,812.33 618.89,812.33 618.89,786.94 618.89,786.94",
			to=in1];
		extsi11	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi11,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="743,758.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		buffer14 -> extsi11	[from=out1,
			pos="e,722.36,773.98 722.36,812.33 722.36,812.33 722.36,785.49 722.36,785.49",
			to=in1];
		cond_br1	[bbID=3,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:6 in2?:1",
			label=cond_br1,
			mlir_op="handshake.cond_br",
			out="out1+:6 out2-:6",
			pos="691,1046.5",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		buffer18 -> cond_br1	[from=out1,
			pos="e,724.84,1046 757.33,830 750.57,830 745.42,830 745.42,830 745.42,830 745.42,1046 745.42,1046 745.42,1046 736.36,1046 736.36,1046",
			to=in1];
		extsi15	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12",
			label=extsi15,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:13",
			pos="632,686.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		muli2 -> extsi15	[from=out1,
			pos="e,632,704.91 632,740.33 632,740.33 632,716.43 632,716.43",
			to=in1];
		mc_load1	[II=1,
			bbID=3,
			delay="1.412 1.409 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=mc_load1,
			latency=2,
			mlir_op="handshake.mc_load",
			op=mc_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="755,686.5",
			shape=box,
			style=filled,
			type=Operator,
			width=0.97222];
		extsi11 -> mc_load1	[from=out1,
			pos="e,750.27,704.84 750.27,740.7 750.27,740.7 750.27,716.36 750.27,716.36",
			to=in2];
		muli0	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=muli0,
			latency=4,
			mlir_op="arith.muli",
			op=mul_op,
			out="out1:32",
			pos="711,326.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		mc_load1 -> muli0	[from=out1,
			pos="e,739.96,335.52 739.96,668.15 739.96,668.15 739.96,347.04 739.96,347.04",
			to=in1];
		control_merge1	[bbID=3,
			delay="0.000 1.397 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1:0 in2:0",
			label=control_merge1,
			mlir_op="handshake.control_merge",
			out="out1:0 out2?:1",
			pos="769,1118.5",
			shape=box,
			style="filled, dashed",
			type=CntrlMerge,
			width=1.4201];
		fork6	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork6,
			mlir_op="handshake.fork",
			out="out1:1 out2:1 out3:1",
			pos="612,1046.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		control_merge1 -> fork6	[from=out2,
			pos="e,633.27,1064.7 717.69,1112 679.25,1112 633.27,1112 633.27,1112 633.27,1112 633.27,1076.3 633.27,1076.3",
			to=in1];
		fork7	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:0",
			label=fork7,
			mlir_op="handshake.fork",
			out="out1:0 out2:0",
			pos="790,1046.5",
			shape=box,
			style="filled, dashed",
			type=Fork,
			width=0.75];
		control_merge1 -> fork7	[from=out1,
			pos="e,790,1064.9 790,1100.3 790,1100.3 790,1076.4 790,1076.4",
			style=dashed,
			to=in1];
		fork6 -> mux4	[from=out2,
			pos="e,782.5,1901.3 628.07,1064.9 628.07,1187 628.07,1874 628.07,1874 628.07,1874 782.5,1874 782.5,1874 782.5,1874 782.5,1889.7 782.5,\
1889.7",
			to=in1];
		fork6 -> buffer16	[from=out3,
			pos="e,612,920.59 612,1028.3 612,1028.3 612,932.1 612,932.1",
			to=in1];
		fork6 -> mux1	[from=out1,
			pos="e,655.62,992.91 639.38,1046 648.15,1046 655.62,1046 655.62,1046 655.62,1046 655.62,1004.4 655.62,1004.4",
			to=in1];
		buffer3	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:0",
			label=buffer3,
			mlir_op="handshake.buffer",
			out="out1:0",
			pos="787,974.5",
			shape=box,
			slots=2,
			style="filled, dashed",
			transparent=false,
			type=Buffer,
			width=0.77431];
		fork7 -> buffer3	[from=out2,
			pos="e,788.94,992.91 788.94,1028.3 788.94,1028.3 788.94,1004.4 788.94,1004.4",
			style=dashed,
			to=in1];
		cond_br5	[bbID=3,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:0 in2?:1",
			label=cond_br5,
			mlir_op="handshake.cond_br",
			out="out1+:0 out2-:0",
			pos="710,1190.5",
			shape=box,
			style="filled, dashed",
			type=Branch,
			width=0.93056];
		buffer3 -> cond_br5	[from=out1,
			pos="e,704.08,1172.1 758.75,974 754.54,974 751.58,974 751.58,974 751.58,974 751.58,1073 751.58,1073 751.58,1073 704.08,1073 704.08,1073 \
704.08,1073 704.08,1160.6 704.08,1160.6",
			style=dashed,
			to=in1];
		source0	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source0,
			mlir_op="handshake.source",
			out="out1:0",
			pos="786,1847.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant6	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:6",
			label=constant6,
			mlir_op="handshake.constant",
			out="out1:6",
			pos="786,1775.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x0000001e",
			width=0.94097];
		source0 -> constant6	[from=out1,
			pos="e,786,1793.9 786,1829.3 786,1829.3 786,1805.4 786,1805.4",
			style=dashed,
			to=in1];
		fork8	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork8,
			mlir_op="handshake.fork",
			out="out1:6 out2:6",
			pos="786,1703.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		constant6 -> fork8	[from=out1,
			pos="e,786,1721.9 786,1757.3 786,1757.3 786,1733.4 786,1733.4",
			to=in1];
		extsi12	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi12,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="802,1190.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		fork8 -> extsi12	[from=out1,
			pos="e,832.98,1201.2 813.33,1703 823.66,1703 832.98,1703 832.98,1703 832.98,1703 832.98,1212.7 832.98,1212.7",
			to=in1];
		buffer5	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer5,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="772,1631.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork8 -> buffer5	[from=out2,
			pos="e,779.44,1649.9 779.44,1685.3 779.44,1685.3 779.44,1661.4 779.44,1661.4",
			to=in1];
		extsi12 -> muli2	[from=out1,
			pos="e,638.71,776.25 828.25,1177.3 828.25,1108.5 828.25,794 828.25,794 828.25,794 638.71,794 638.71,794 638.71,794 638.71,787.76 638.71,\
787.76",
			to=in2];
		extsi13	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi13,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="762,1559.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		buffer5 -> extsi13	[from=out1,
			pos="e,771.83,1576.9 771.83,1613.3 771.83,1613.3 771.83,1588.4 771.83,1588.4",
			to=in1];
		cmpi0	[II=1,
			bbID=3,
			delay="1.998 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7 in2:7",
			label=cmpi0,
			latency=0,
			mlir_op="arith.cmpi<",
			op=icmp_ult_op,
			out="out1:1",
			pos="761,1483",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.95727];
		extsi13 -> cmpi0	[from=out1,
			pos="e,761,1501.3 761,1541.4 761,1541.4 761,1512.8 761,1512.8",
			to=in2];
		buffer17	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer17,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="677,1411",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		cmpi0 -> buffer17	[from=out1,
			pos="e,708.55,1405 730.84,1474 725.57,1474 721.73,1474 721.73,1474 721.73,1474 721.73,1405 721.73,1405 721.73,1405 720.07,1405 720.07,\
1405",
			to=in1];
		source1	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source1,
			mlir_op="handshake.source",
			out="out1:0",
			pos="676,1919.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant7	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:2",
			label=constant7,
			mlir_op="handshake.constant",
			out="out1:2",
			pos="676,1847.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x00000001",
			width=0.94097];
		source1 -> constant7	[from=out1,
			pos="e,676,1865.9 676,1901.3 676,1901.3 676,1877.4 676,1877.4",
			style=dashed,
			to=in1];
		extsi14	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:2",
			label=extsi14,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="676,1775.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		constant7 -> extsi14	[from=out1,
			pos="e,676,1793.9 676,1829.3 676,1829.3 676,1805.4 676,1805.4",
			to=in1];
		buffer1	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer1,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="676,1703.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		extsi14 -> buffer1	[from=out1,
			pos="e,676,1721.9 676,1757.3 676,1757.3 676,1733.4 676,1733.4",
			to=in1];
		buffer1 -> addi5	[from=out1,
			pos="e,676,1649.9 676,1685.3 676,1685.3 676,1661.4 676,1661.4",
			to=in2];
		extsi15 -> addi2	[from=out1,
			pos="e,632,632.91 632,668.33 632,668.33 632,644.43 632,644.43",
			to=in2];
		extsi16	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:13",
			label=extsi16,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="681,542.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		addi2 -> extsi16	[from=out1,
			pos="e,653.43,555.02 653.43,600.96 653.43,600.96 653.43,566.53 653.43,566.53",
			to=in1];
		mc_load0	[II=1,
			bbID=3,
			delay="1.412 1.409 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=mc_load0,
			latency=2,
			mlir_op="handshake.mc_load",
			op=mc_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="701,470.5",
			shape=box,
			style=filled,
			type=Operator,
			width=0.97222];
		extsi16 -> mc_load0	[from=out1,
			pos="e,692.27,488.77 692.27,525.07 692.27,525.07 692.27,500.29 692.27,500.29",
			to=in2];
		fork9	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:32",
			label=fork9,
			mlir_op="handshake.fork",
			out="out1:32 out2:32",
			pos="709,398.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		mc_load0 -> fork9	[from=out1,
			pos="e,709,416.91 709,452.33 709,452.33 709,428.43 709,428.43",
			to=in1];
		fork9 -> muli0	[from=out2,
			pos="e,709,344.91 709,380.33 709,380.33 709,356.43 709,356.43",
			to=in2];
		fork9 -> muli1	[from=out1,
			pos="e,660.2,326 681.75,398 676.21,398 672.04,398 672.04,398 672.04,398 672.04,326 672.04,326 672.04,326 670.85,326 670.85,326",
			to=in1];
		addi0	[II=1,
			bbID=3,
			delay="2.287 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=addi0,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:32",
			pos="776,254.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		muli0 -> addi0	[from=out1,
			pos="e,744.4,254 739.65,317.02 739.65,297.37 739.65,254 739.65,254 739.65,254 740.13,254 740.13,254",
			to=in2];
		muli1 -> addi1	[from=out1,
			pos="e,492.23,271.81 593.69,326 553.78,326 492.23,326 492.23,326 492.23,326 492.23,283.32 492.23,283.32",
			to=in2];
		LSQ_load1 -> addi0	[from=out1,
			pos="e,784.63,271.92 784.63,308.33 784.63,308.33 784.63,283.43 784.63,283.43",
			to=in1];
		addi0 -> LSQ_store0	[from=out1,
			pos="e,776,196.26 776,236.37 776,236.37 776,207.78 776,207.78",
			to=in1];
		cond_br3	[bbID=3,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:32 in2?:1",
			label=cond_br3,
			mlir_op="handshake.cond_br",
			out="out1+:32 out2-:32",
			pos="505,178",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		addi1 -> cond_br3	[from=out1,
			pos="e,492.45,196.36 492.45,237.14 492.45,237.14 492.45,207.87 492.45,207.87",
			to=in1];
		cond_br3 -> mux2	[color=blue,
			from=out1,
			pos="e,521.25,124.41 521.25,159.83 521.25,159.83 521.25,135.93 521.25,135.93",
			to=in2];
		fork10	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:7",
			label=fork10,
			mlir_op="handshake.fork",
			out="out1:7 out2:7",
			pos="677,1559.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		addi5 -> fork10	[from=out1,
			pos="e,677,1577.9 677,1613.3 677,1613.3 677,1589.4 677,1589.4",
			to=in1];
		fork10 -> cmpi0	[from=out2,
			pos="e,730.48,1492 704.31,1559 712.33,1559 719,1559 719,1559 719,1559 719,1492 719,1492 719,1492 720.15,1492 720.15,1492",
			to=in1];
		buffer19	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer19,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="677,1483",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		fork10 -> buffer19	[from=out1,
			pos="e,677,1501.3 677,1541.4 677,1541.4 677,1512.8 677,1512.8",
			to=in1];
		trunci0	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7",
			label=trunci0,
			latency=0,
			mlir_op="arith.trunci",
			op=trunc_op,
			out="out1:6",
			pos="763,1411",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0284];
		buffer19 -> trunci0	[from=out1,
			pos="e,727.58,1417 708.7,1483 713.16,1483 716.27,1483 716.27,1483 716.27,1483 716.27,1417 716.27,1417 716.27,1417 717.4,1417 717.4,1417",
			to=in1];
		cond_br0	[bbID=3,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:6 in2?:1",
			label=cond_br0,
			mlir_op="handshake.cond_br",
			out="out1+:6 out2-:6",
			pos="786,1262.5",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		trunci0 -> cond_br0	[from=out1,
			pos="e,784.18,1280.8 784.18,1395.9 784.18,1395.9 784.18,1292.3 784.18,1292.3",
			to=in1];
		cond_br0 -> mux4	[color=blue,
			from=out1,
			pos="e,808.47,1919 819.75,1268 823.74,1268 826.43,1268 826.43,1268 826.43,1268 826.43,1919 826.43,1919 826.43,1919 819.99,1919 819.99,\
1919",
			to=in2];
		fork11	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork11,
			mlir_op="handshake.fork",
			out="out1:1 out2:1 out3:1 out4:1",
			pos="677,1339",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		buffer17 -> fork11	[from=out1,
			pos="e,677,1357.4 677,1392.8 677,1392.8 677,1368.9 677,1368.9",
			to=in1];
		fork11 -> cond_br0	[from=out1,
			pos="e,768.34,1280.6 704.41,1339 731.31,1339 768.34,1339 768.34,1339 768.34,1339 768.34,1292.1 768.34,1292.1",
			to=in2];
		buffer9	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer9,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="519,1118.5",
			shape=box,
			slots=4,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork11 -> buffer9	[from=out3,
			pos="e,547.25,1124 653.75,1320.7 653.75,1268.7 653.75,1124 653.75,1124 653.75,1124 558.76,1124 558.76,1124",
			to=in1];
		fork11 -> cond_br1	[from=out2,
			pos="e,664.62,1064.8 664.62,1320.7 664.62,1320.7 664.62,1076.3 664.62,1076.3",
			to=in2];
		buffer15	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer15,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="703,1262.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.86806];
		fork11 -> buffer15	[from=out4,
			pos="e,687.87,1280.8 687.87,1320.9 687.87,1320.9 687.87,1292.3 687.87,1292.3",
			to=in1];
		buffer9 -> cond_br3	[from=out1,
			pos="e,538.91,187 541.29,1100.3 541.29,970.27 541.29,187 541.29,187 541.29,187 541.05,187 541.05,187",
			to=in2];
		cond_br1 -> mux1	[color=blue,
			from=out1,
			pos="e,679.75,992.91 679.75,1028.3 679.75,1028.3 679.75,1004.4 679.75,1004.4",
			to=in2];
		buffer15 -> cond_br5	[from=out1,
			pos="e,705.38,1208.9 705.38,1244.3 705.38,1244.3 705.38,1220.4 705.38,1220.4",
			to=in2];
		cond_br5 -> control_merge1	[color=blue,
			from=out1,
			pos="e,730.69,1136.9 730.69,1172.3 730.69,1172.3 730.69,1148.4 730.69,1148.4",
			style=dashed,
			to=in1];
	}
	subgraph cluster4 {
		graph [bb="920,8,1004,228.5",
			label=block4,
			lheight=0.23,
			lp="962,216.25",
			lwidth=0.51
		];
		buffer6	[bbID=5,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:32",
			label=buffer6,
			mlir_op="handshake.buffer",
			out="out1:32",
			pos="956,178",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		d_return0	[II=1,
			bbID=5,
			delay="1.412 1.397 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=gold,
			height=0.5,
			in="in1:32",
			label=d_return0,
			latency=0,
			mlir_op="handshake.d_return",
			op=ret_op,
			out="out1:32",
			pos="962,106",
			shape=box,
			style=filled,
			type=Operator,
			width=0.95139];
		buffer6 -> d_return0	[from=out1,
			pos="e,956,124.41 956,159.83 956,159.83 956,135.93 956,135.93",
			to=in1];
		end0	[bbID=5,
			delay="1.397 0.000 1.397 1.409 100.000 100.000 100.000 100.000",
			fillcolor=gold,
			height=0.5,
			in="in1:0*e in2:0*e in3:0*e in4:0*e in5:0*e in6:32",
			label=end0,
			mlir_op="handshake.end",
			out="out1:32",
			pos="969,34",
			shape=box,
			style=filled,
			type=Exit,
			width=0.75];
		d_return0 -> end0	[from=out1,
			pos="e,969,52.413 969,87.831 969,87.831 969,63.927 969,63.927",
			to=in6];
	}
	subgraph cluster1 {
		graph [bb="134,876.5,367,1313",
			label=block1,
			lheight=0.23,
			lp="250.5,1300.8",
			lwidth=0.51
		];
		mux0	[bbID=2,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:6 in3:6",
			label=mux0,
			mlir_op="handshake.mux",
			out="out1:6",
			pos="197,1190.5",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		buffer12	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer12,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="173,1118.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		mux0 -> buffer12	[from=out1,
			pos="e,187.13,1136.9 187.13,1172.3 187.13,1172.3 187.13,1148.4 187.13,1148.4",
			to=in1];
		fork1	[bbID=2,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork1,
			mlir_op="handshake.fork",
			out="out1:6 out2:6",
			pos="242,1046.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		buffer12 -> fork1	[from=out1,
			pos="e,217.58,1064.9 204.45,1118 211.83,1118 217.58,1118 217.58,1118 217.58,1118 217.58,1076.4 217.58,1076.4",
			to=in1];
		extsi6	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi6,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="242,974.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork1 -> extsi6	[from=out2,
			pos="e,233,991.92 233,1028.3 233,1028.3 233,1003.4 233,1003.4",
			to=in1];
		LSQ_load0	[II=1,
			bbID=2,
			delay="0.000 0.000 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=LSQ_load0,
			latency=5,
			mlir_op="handshake.lsq_load",
			op=lsq_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="320,902.5",
			shape=box,
			style=filled,
			type=Operator,
			width=1.0868];
		extsi6 -> LSQ_load0	[from=out1,
			pos="e,280.54,902 242,956.21 242,934.73 242,902 242,902 242,902 269.03,902 269.03,902",
			to=in2];
		control_merge0	[bbID=2,
			delay="0.000 1.397 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1:0 in2:0",
			label=control_merge0,
			mlir_op="handshake.control_merge",
			out="out1:0 out2?:1",
			pos="250,1262.5",
			shape=box,
			style="filled, dashed",
			type=CntrlMerge,
			width=1.4201];
		control_merge0 -> mux0	[from=out2,
			pos="e,211.44,1208.9 211.44,1244.3 211.44,1244.3 211.44,1220.4 211.44,1220.4",
			to=in1];
		fork2	[bbID=2,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:0",
			label=fork2,
			mlir_op="handshake.fork",
			out="out1:0 out2:0 out3:0",
			pos="293,1190.5",
			shape=box,
			style="filled, dashed",
			type=Fork,
			width=0.75];
		control_merge0 -> fork2	[from=out1,
			pos="e,277.71,1208.9 277.71,1244.3 277.71,1244.3 277.71,1220.4 277.71,1220.4",
			style=dashed,
			to=in1];
		buffer11	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:0",
			label=buffer11,
			mlir_op="handshake.buffer",
			out="out1:0",
			pos="254,1118.5",
			shape=box,
			slots=1,
			style="filled, dashed",
			transparent=false,
			type=Buffer,
			width=0.86806];
		fork2 -> buffer11	[from=out2,
			pos="e,275.63,1136.9 275.63,1172.3 275.63,1172.3 275.63,1148.4 275.63,1148.4",
			style=dashed,
			to=in1];
		buffer0	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:0",
			label=buffer0,
			mlir_op="handshake.buffer",
			out="out1:0",
			pos="331,1118.5",
			shape=box,
			slots=1,
			style="filled, dashed",
			transparent=false,
			type=Buffer,
			width=0.77431];
		fork2 -> buffer0	[from=out3,
			pos="e,308.75,1136.9 308.75,1172.3 308.75,1172.3 308.75,1148.4 308.75,1148.4",
			style=dashed,
			to=in1];
		constant1	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:1",
			label=constant1,
			mlir_op="handshake.constant",
			out="out1:1",
			pos="323,1046.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x00000000",
			width=0.94097];
		buffer11 -> constant1	[from=out1,
			pos="e,296.12,1064.9 285.5,1118 291.59,1118 296.12,1118 296.12,1118 296.12,1118 296.12,1076.4 296.12,1076.4",
			style=dashed,
			to=in1];
		extsi1	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:1",
			label=extsi1,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:6",
			pos="326,974.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant1 -> extsi1	[from=out1,
			pos="e,324.97,992.91 324.97,1028.3 324.97,1028.3 324.97,1004.4 324.97,1004.4",
			to=in1];
	}
	subgraph cluster3 {
		graph [bb="1088,588.5,1505,1313",
			label=block3,
			lheight=0.23,
			lp="1296.5,1300.8",
			lwidth=0.51
		];
		fork12	[bbID=4,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork12,
			mlir_op="handshake.fork",
			out="out1:6 out2:6",
			pos="1134,1190.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		extsi2	[II=1,
			bbID=4,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi2,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="1295,1118.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork12 -> extsi2	[from=out1,
			pos="e,1295,1136.9 1161.3,1190 1207.2,1190 1295,1190 1295,1190 1295,1190 1295,1148.4 1295,1148.4",
			to=in1];
		extsi17	[II=1,
			bbID=4,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi17,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="1134,1118.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		fork12 -> extsi17	[from=out2,
			pos="e,1143,1136.4 1143,1172.3 1143,1172.3 1143,1147.9 1143,1147.9",
			to=in1];
		addi3	[II=1,
			bbID=4,
			delay="1.927 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7 in2:7",
			label=addi3,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:7",
			pos="1350,1046.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		extsi2 -> addi3	[from=out1,
			pos="e,1323.3,1056.5 1323.3,1108.8 1323.3,1108.8 1323.3,1068 1323.3,1068",
			to=in1];
		LSQ_store1	[II=1,
			bbID=4,
			delay="0.000 0.000 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=LSQ_store1,
			latency=0,
			mlir_op="handshake.lsq_store",
			op=lsq_store_op,
			out="out1:32 out2:32",
			portId=1,
			pos="1137,1046.5",
			shape=box,
			style=filled,
			type=Operator,
			width=1.1285];
		extsi17 -> LSQ_store1	[from=out1,
			pos="e,1134,1064.9 1134,1100.3 1134,1100.3 1134,1076.4 1134,1076.4",
			to=in2];
		buffer20	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer20,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="1350,974.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		addi3 -> buffer20	[from=out1,
			pos="e,1350,992.91 1350,1028.3 1350,1028.3 1350,1004.4 1350,1004.4",
			to=in1];
		fork13	[bbID=4,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:32",
			label=fork13,
			mlir_op="handshake.fork",
			out="out1:32 out2:32",
			pos="1217,1118.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		fork13 -> LSQ_store1	[from=out2,
			pos="e,1177.9,1046 1195.9,1100.2 1195.9,1078.7 1195.9,1046 1195.9,1046 1195.9,1046 1189.4,1046 1189.4,1046",
			to=in1];
		cond_br11	[bbID=4,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:32 in2?:1",
			label=cond_br11,
			mlir_op="handshake.cond_br",
			out="out1+:32 out2-:32",
			pos="1217,614.5",
			shape=box,
			style=filled,
			type=Branch,
			width=1.0243];
		fork13 -> cond_br11	[from=out1,
			pos="e,1217,632.98 1217,1100.3 1217,1100.3 1217,644.49 1217,644.49",
			to=in1];
		source2	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source2,
			mlir_op="handshake.source",
			out="out1:0",
			pos="1468,1118.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant8	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:6",
			label=constant8,
			mlir_op="handshake.constant",
			out="out1:6",
			pos="1446,1046.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x0000001e",
			width=0.94097];
		source2 -> constant8	[from=out1,
			pos="e,1459.4,1064.9 1459.4,1100.3 1459.4,1100.3 1459.4,1076.4 1459.4,1076.4",
			style=dashed,
			to=in1];
		extsi3	[II=1,
			bbID=4,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi3,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="1437,974.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant8 -> extsi3	[from=out1,
			pos="e,1441,992.41 1441,1028.3 1441,1028.3 1441,1003.9 1441,1003.9",
			to=in1];
		buffer10	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer10,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="1430,902.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		extsi3 -> buffer10	[from=out1,
			pos="e,1432.7,920.91 1432.7,956.33 1432.7,956.33 1432.7,932.43 1432.7,932.43",
			to=in1];
		cmpi1	[II=1,
			bbID=4,
			delay="1.998 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7 in2:7",
			label=cmpi1,
			latency=0,
			mlir_op="arith.cmpi<",
			op=icmp_ult_op,
			out="out1:1",
			pos="1399,830.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.95727];
		buffer10 -> cmpi1	[from=out1,
			pos="e,1416.1,846.46 1416.1,884.33 1416.1,884.33 1416.1,857.97 1416.1,857.97",
			to=in2];
		source3	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source3,
			mlir_op="handshake.source",
			out="out1:0",
			pos="1383,1262.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant9	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:2",
			label=constant9,
			mlir_op="handshake.constant",
			out="out1:2",
			pos="1383,1190.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x00000001",
			width=0.94097];
		source3 -> constant9	[from=out1,
			pos="e,1383,1208.9 1383,1244.3 1383,1244.3 1383,1220.4 1383,1220.4",
			style=dashed,
			to=in1];
		extsi18	[II=1,
			bbID=4,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:2",
			label=extsi18,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="1383,1118.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		constant9 -> extsi18	[from=out1,
			pos="e,1383,1136.9 1383,1172.3 1383,1172.3 1383,1148.4 1383,1148.4",
			to=in1];
		extsi18 -> addi3	[from=out1,
			pos="e,1363.4,1063.1 1363.4,1102.9 1363.4,1102.9 1363.4,1074.6 1363.4,1074.6",
			to=in2];
		fork14	[bbID=4,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:7",
			label=fork14,
			mlir_op="handshake.fork",
			out="out1:7 out2:7",
			pos="1350,902.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		buffer20 -> fork14	[from=out1,
			pos="e,1350,920.91 1350,956.33 1350,956.33 1350,932.43 1350,932.43",
			to=in1];
		trunci1	[II=1,
			bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7",
			label=trunci1,
			latency=0,
			mlir_op="arith.trunci",
			op=trunc_op,
			out="out1:6",
			pos="1346,758.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0284];
		fork14 -> trunci1	[from=out1,
			pos="e,1343.8,776.59 1343.8,884.26 1343.8,884.26 1343.8,788.1 1343.8,788.1",
			to=in1];
		fork14 -> cmpi1	[from=out2,
			pos="e,1370.8,841.07 1370.8,884.33 1370.8,884.33 1370.8,852.58 1370.8,852.58",
			to=in1];
		cond_br2	[bbID=4,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:6 in2?:1",
			label=cond_br2,
			mlir_op="handshake.cond_br",
			out="out1+:6 out2-:6",
			pos="1345,686.5",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		trunci1 -> cond_br2	[from=out1,
			pos="e,1345,704.91 1345,740.33 1345,740.33 1345,716.43 1345,716.43",
			to=in1];
		fork15	[bbID=4,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork15,
			mlir_op="handshake.fork",
			out="out1:1 out2:1 out3:1",
			pos="1264,758.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		cmpi1 -> fork15	[from=out1,
			pos="e,1276.5,776.91 1364.2,830 1328,830 1276.5,830 1276.5,830 1276.5,830 1276.5,788.43 1276.5,788.43",
			to=in1];
		fork15 -> cond_br2	[from=out1,
			pos="e,1311,680 1291.4,758 1295.1,758 1297.6,758 1297.6,758 1297.6,758 1297.6,680 1297.6,680 1297.6,680 1299.5,680 1299.5,680",
			to=in2];
		cond_br10	[bbID=4,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:0 in2?:1",
			label=cond_br10,
			mlir_op="handshake.cond_br",
			out="out1+:0 out2-:0",
			pos="1161,686.5",
			shape=box,
			style="filled, dashed",
			type=Branch,
			width=1.0243];
		fork15 -> cond_br10	[from=out2,
			pos="e,1193.9,704.91 1236.7,758 1217,758 1193.9,758 1193.9,758 1193.9,758 1193.9,716.43 1193.9,716.43",
			to=in2];
		buffer7	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer7,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="1264,686.5",
			shape=box,
			slots=2,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork15 -> buffer7	[from=out3,
			pos="e,1264,704.91 1264,740.33 1264,740.33 1264,716.43 1264,716.43",
			to=in1];
		buffer7 -> cond_br11	[from=out1,
			pos="e,1245,632.91 1245,668.33 1245,668.33 1245,644.43 1245,644.43",
			to=in2];
	}
	fork0 -> control_merge0	[from=out1,
		pos="e,250,1280.7 111.41,1411 158.56,1411 250,1411 250,1411 250,1411 250,1292.2 250,1292.2",
		style=dashed,
		to=in2];
	extsi0 -> mux0	[from=out1,
		pos="e,184.44,1208.9 117.17,1262 146.42,1262 184.44,1262 184.44,1262 184.44,1262 184.44,1220.4 184.44,1220.4",
		to=in3];
	LSQ1	[bbID=0,
		bbcount=1,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fifoDepth=16,
		fillcolor=coral,
		height=0.5,
		in="in1:0*c0 in2:32*l0a in3:32*s0a in4:32*s0d",
		label=LSQ1,
		ldcount=1,
		loadOffsets="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		loadPorts="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		memory=s,
		mlir_op="handshake.lsq",
		numLoads="{1}",
		numStores="{1}",
		out="out1:32*l0d out2:0*e",
		pos="883,106",
		shape=box,
		stcount=1,
		storeOffsets="{{1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		storePorts="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		style=filled,
		type=LSQ,
		width=0.75];
	LSQ_store0 -> LSQ1	[from=out2,
		mem_address=true,
		pos="e,892.58,124.48 817.1,184 850.67,184 892.58,184 892.58,184 892.58,184 892.58,136 892.58,136",
		to=in3];
	LSQ_store0 -> LSQ1	[from=out1,
		mem_address=false,
		pos="e,875.17,124.38 816.91,172 844.22,172 875.17,172 875.17,172 875.17,172 875.17,135.9 875.17,135.9",
		to=in4];
	mem_controller1	[bbID=0,
		bbcount=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=coral,
		height=0.5,
		in="in1:32*l0a",
		label=mem_controller1,
		ldcount=1,
		memory=p,
		mlir_op="handshake.mem_controller",
		out="out1:32*l0d out2:0*e",
		pos="913,326.5",
		shape=box,
		stcount=0,
		style=filled,
		type=MC,
		width=1.5347];
	mc_load2 -> mem_controller1	[from=out2,
		mem_address=true,
		pos="e,933.42,344.82 643.46,380.05 643.46,373.63 643.46,368 643.46,368 643.46,368 933.42,368 933.42,368 933.42,368 933.42,356.34 933.42,\
356.34",
		to=in1];
	mem_controller0	[bbID=0,
		bbcount=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=coral,
		height=0.5,
		in="in1:32*l0a",
		label=mem_controller0,
		ldcount=1,
		memory=r,
		mlir_op="handshake.mem_controller",
		out="out1:32*l0d out2:0*e",
		pos="911,614.5",
		shape=box,
		stcount=0,
		style=filled,
		type=MC,
		width=1.5347];
	mc_load1 -> mem_controller0	[from=out2,
		mem_address=true,
		pos="e,855.42,620 785.94,668.33 785.94,648.64 785.94,620 785.94,620 785.94,620 843.9,620 843.9,620",
		to=in1];
	fork7 -> LSQ1	[from=out1,
		pos="e,855.72,115 817.27,1046 832.3,1046 847.94,1046 847.94,1046 847.94,1046 847.94,115 847.94,115 847.94,115 848.72,115 848.72,115",
		style=dashed,
		to=in1];
	mem_controller2	[bbID=0,
		bbcount=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=coral,
		height=0.5,
		in="in1:32*l0a",
		label=mem_controller2,
		ldcount=1,
		memory=a,
		mlir_op="handshake.mem_controller",
		out="out1:32*l0d out2:0*e",
		pos="919,398.5",
		shape=box,
		stcount=0,
		style=filled,
		type=MC,
		width=1.5347];
	mc_load0 -> mem_controller2	[from=out2,
		mem_address=true,
		pos="e,932.08,416.87 736.35,476 801.08,476 932.08,476 932.08,476 932.08,476 932.08,428.38 932.08,428.38",
		to=in1];
	LSQ_load1 -> LSQ1	[from=out2,
		mem_address=true,
		pos="e,855.57,106 832.29,308.08 832.29,255.08 832.29,106 832.29,106 832.29,106 844.05,106 844.05,106",
		to=in2];
	cond_br3 -> fork13	[from=out2,
		pos="e,1192,1100.2 538.61,178 545.44,178 550.58,178 550.58,178 550.58,178 550.58,1082 550.58,1082 550.58,1082 1192,1082 1192,1082 1192,\
1082 1192,1088.7 1192,1088.7",
		to=in1];
	sink0	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:6",
		label=sink0,
		mlir_op="handshake.sink",
		pos="885,1190.5",
		shape=box,
		style=filled,
		type=Sink,
		width=0.75];
	cond_br0 -> sink0	[from=out2,
		pos="e,885,1208.7 819.79,1256 848.47,1256 885,1256 885,1256 885,1256 885,1220.3 885,1220.3",
		to=in1];
	cond_br1 -> fork12	[from=out2,
		pos="e,1125,1172.1 690.29,1064.5 690.29,1094.2 690.29,1150 690.29,1150 690.29,1150 1125,1150 1125,1150 1125,1150 1125,1160.6 1125,1160.6",
		to=in1];
	cond_br5 -> cond_br10	[from=out2,
		pos="e,1181.8,704.96 737.09,1172.2 737.09,1168.2 737.09,1165 737.09,1165 737.09,1165 1181.8,1165 1181.8,1165 1181.8,1165 1181.8,716.48 \
1181.8,716.48",
		style=dashed,
		to=in1];
	fork1 -> mux1	[from=out1,
		pos="e,651.87,992.67 251,1028.2 251,1019.1 251,1010 251,1010 251,1010 651.87,1010 651.87,1010 651.87,1010 651.87,1004.2 651.87,1004.2",
		to=in3];
	LSQ_load0 -> mux2	[from=out1,
		pos="e,544.08,124.26 359.55,908 423.88,908 544.08,908 544.08,908 544.08,908 544.08,135.77 544.08,135.77",
		to=in3];
	LSQ0	[bbID=0,
		bbcount=1,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fifoDepth=16,
		fillcolor=coral,
		height=0.5,
		in="in1:0*c0 in2:32*l0a in3:32*s0a in4:32*s0d",
		label=LSQ0,
		ldcount=1,
		loadOffsets="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		loadPorts="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		memory=q,
		mlir_op="handshake.lsq",
		numLoads="{1}",
		numStores="{1}",
		out="out1:32*l0d out2:0*e",
		pos="1030,974.5",
		shape=box,
		stcount=1,
		storeOffsets="{{1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		storePorts="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		style=filled,
		type=LSQ,
		width=0.75];
	LSQ_load0 -> LSQ0	[from=out2,
		mem_address=true,
		pos="e,1021,956.05 336.98,920.82 336.98,931.94 336.98,944 336.98,944 336.98,944 1021,944 1021,944 1021,944 1021,945.21 1021,945.21",
		to=in2];
	fork2 -> LSQ0	[from=out1,
		pos="e,1030,992.77 314.37,1172.3 314.37,1164.9 314.37,1158 314.37,1158 314.37,1158 1030,1158 1030,1158 1030,1158 1030,1004.3 1030,1004.3",
		style=dashed,
		to=in1];
	buffer0 -> control_merge1	[from=out1,
		pos="e,724.28,1136.8 339.44,1136.8 339.44,1140.4 339.44,1143 339.44,1143 339.44,1143 724.28,1143 724.28,1143 724.28,1143 724.28,1142.4 \
724.28,1142.4",
		style=dashed,
		to=in2];
	extsi1 -> mux4	[from=out1,
		pos="e,769.75,1901 358.99,974 380.6,974 404.87,974 404.87,974 404.87,974 404.87,1892 404.87,1892 404.87,1892 769.75,1892 769.75,1892 \
769.75,1892 769.75,1892.9 769.75,1892.9",
		to=in3];
	LSQ_store1 -> LSQ0	[from=out2,
		mem_address=true,
		pos="e,1057.3,980 1105.6,1028.3 1105.6,1008.6 1105.6,980 1105.6,980 1105.6,980 1068.8,980 1068.8,980",
		to=in3];
	LSQ_store1 -> LSQ0	[from=out1,
		mem_address=false,
		pos="e,1057.3,968 1114.9,1028.3 1114.9,1005.1 1114.9,968 1114.9,968 1114.9,968 1068.8,968 1068.8,968",
		to=in4];
	cond_br11 -> buffer6	[from=out2,
		pos="e,984.09,178 1185.1,596.02 1185.1,512.94 1185.1,178 1185.1,178 1185.1,178 995.6,178 995.6,178",
		to=in1];
	sink3	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:32",
		label=sink3,
		mlir_op="handshake.sink",
		pos="1217,542.5",
		shape=box,
		style=filled,
		type=Sink,
		width=0.75];
	cond_br11 -> sink3	[from=out1,
		pos="e,1217,560.91 1217,596.33 1217,596.33 1217,572.43 1217,572.43",
		to=in1];
	cond_br2 -> mux0	[color=blue,
		from=out1,
		pos="e,220.17,1172.3 1311.3,692 1306.6,692 1303.3,692 1303.3,692 1303.3,692 1303.3,1091 1303.3,1091 1303.3,1091 220.17,1091 220.17,1091 \
220.17,1091 220.17,1160.7 220.17,1160.7",
		to=in2];
	sink1	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:6",
		label=sink1,
		mlir_op="handshake.sink",
		pos="1612,614.5",
		shape=box,
		style=filled,
		type=Sink,
		width=0.75];
	cond_br2 -> sink1	[from=out2,
		pos="e,1612,632.91 1378.8,686 1450.7,686 1612,686 1612,686 1612,686 1612,644.43 1612,644.43",
		to=in1];
	cond_br10 -> control_merge0	[color=blue,
		from=out1,
		pos="e,289.42,1244.2 1185.9,704.76 1185.9,799 1185.9,1226 1185.9,1226 1185.9,1226 289.42,1226 289.42,1226 289.42,1226 289.42,1232.7 289.42,\
1232.7",
		style=dashed,
		to=in1];
	sink2	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:0",
		label=sink2,
		mlir_op="handshake.sink",
		pos="1540,614.5",
		shape=box,
		style="filled, dashed",
		type=Sink,
		width=0.75];
	cond_br10 -> sink2	[from=out2,
		pos="e,1540,632.67 1189,668.25 1189,659.12 1189,650 1189,650 1189,650 1540,650 1540,650 1540,650 1540,644.18 1540,644.18",
		style=dashed,
		to=in1];
	mem_controller0 -> mc_load1	[from=out1,
		mem_address=false,
		pos="e,781.87,668.29 855.49,608 820.49,608 781.87,608 781.87,608 781.87,608 781.87,656.78 781.87,656.78",
		to=in1];
	mem_controller0 -> end0	[from=out2,
		pos="e,996.26,34 966.4,614 1001,614 1039,614 1039,614 1039,614 1039,34 1039,34 1039,34 1007.8,34 1007.8,34",
		style=dashed,
		to=in1];
	mem_controller1 -> mc_load2	[from=out1,
		mem_address=false,
		pos="e,627,380.23 898.58,344.68 898.58,350.75 898.58,356 898.58,356 898.58,356 627,356 627,356 627,356 627,368.72 627,368.72",
		to=in1];
	mem_controller1 -> end0	[from=out2,
		pos="e,941.59,40 918.87,308.14 918.87,244.91 918.87,40 918.87,40 918.87,40 930.08,40 930.08,40",
		style=dashed,
		to=in2];
	LSQ0 -> end0	[from=out2,
		pos="e,996.19,25 1048,956.38 1048,825.11 1048,25 1048,25 1048,25 1007.7,25 1007.7,25",
		style=dashed,
		to=in3];
	LSQ0 -> LSQ_load0	[from=out1,
		mem_address=false,
		pos="e,315.02,920.68 1012,956.23 1012,944.71 1012,932 1012,932 1012,932 315.02,932 315.02,932 315.02,932 315.02,930.87 315.02,930.87",
		to=in1];
	LSQ1 -> LSQ_load1	[from=out1,
		mem_address=false,
		pos="e,824.46,308.11 855.79,97 840.5,97 824.46,97 824.46,97 824.46,97 824.46,296.59 824.46,296.59",
		to=in1];
	LSQ1 -> end0	[from=out2,
		pos="e,941.79,28 883,87.515 883,64.449 883,28 883,28 883,28 930.28,28 930.28,28",
		style=dashed,
		to=in4];
	mem_controller2 -> mc_load0	[from=out1,
		mem_address=false,
		pos="e,736.2,464 897.92,416.75 897.92,436.13 897.92,464 897.92,464 897.92,464 747.72,464 747.72,464",
		to=in1];
	mem_controller2 -> end0	[from=out2,
		pos="e,996.29,43 974.5,398 1002.2,398 1030,398 1030,398 1030,398 1030,43 1030,43 1030,43 1007.8,43 1007.8,43",
		style=dashed,
		to=in5];
}
