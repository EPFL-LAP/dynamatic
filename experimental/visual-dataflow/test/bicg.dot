digraph G {
	graph [bb="0,0,1545.2,1982.5",
		compound=true,
		splines=spline
	];
	node [label="\N"];
	subgraph cluster0 {
		graph [bb="1407.2,1241,1525.2,1538",
			label=block0,
			lheight=0.23,
			lp="1466.2,1525.8",
			lwidth=0.51
		];
		start_0	[bbID=1,
			control=true,
			height=0.5,
			in="in1:0",
			label=start_0,
			mlir_op="handshake.arg",
			out="out1:0",
			pos="1466.2,1487.5",
			shape=diamond,
			style=dashed,
			type=Entry,
			width=1.4141];
		fork0	[bbID=1,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:0",
			label=fork0,
			mlir_op="handshake.fork",
			out="out1:0 out2:0",
			pos="1449.2,1415.5",
			shape=box,
			style="filled, dashed",
			type=Fork,
			width=0.75];
		start_0 -> fork0	[from=out1,
			pos="e,1453.4,1433.8 1462.3,1470.6 1460.4,1463 1458.2,1453.6 1456,1444.8",
			style=dashed,
			to=in1];
		constant0	[bbID=1,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:1",
			label=constant0,
			mlir_op="handshake.constant",
			out="out1:1",
			pos="1449.2,1343.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x00000000",
			width=0.94097];
		fork0 -> constant0	[from=out2,
			pos="e,1449.2,1361.6 1449.2,1397.2 1449.2,1389.9 1449.2,1381.2 1449.2,1373",
			style=dashed,
			to=in1];
		extsi0	[II=1,
			bbID=1,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:1",
			label=extsi0,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:6",
			pos="1448.2,1267",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant0 -> extsi0	[from=out1,
			pos="e,1448.4,1285.4 1448.9,1325.2 1448.8,1316.8 1448.7,1306.5 1448.5,1296.9",
			to=in1];
	}
	subgraph cluster2 {
		graph [bb="692.16,8,1096.2,1974.5",
			label=block2,
			lheight=0.23,
			lp="894.16,1962.2",
			lwidth=0.51
		];
		mux4	[bbID=3,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:6 in3:6",
			label=mux4,
			mlir_op="handshake.mux",
			out="out1:6",
			pos="1044.2,1924",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		fork3	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork3,
			mlir_op="handshake.fork",
			out="out1:6 out2:6 out3:6",
			pos="1028.2,1852",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		mux4 -> fork3	[from=out1,
			pos="e,1032.1,1870.1 1040.2,1905.7 1038.5,1898.3 1036.5,1889.5 1034.6,1881.3",
			to=in1];
		extsi7	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi7,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:13",
			pos="839.16,1780",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork3 -> extsi7	[from=out1,
			pos="e,864.67,1791.8 1000.7,1841.6 970.91,1831.3 921.91,1814.1 880.16,1798 878.43,1797.3 876.66,1796.6 874.88,1795.9",
			to=in1];
		extsi8	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi8,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="1015.2,1780",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork3 -> extsi8	[from=out2,
			pos="e,1018.3,1798.1 1024.9,1833.7 1023.6,1826.3 1021.9,1817.5 1020.4,1809.3",
			to=in1];
		buffer4	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer4,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="1040.2,1636",
			shape=box,
			slots=2,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork3 -> buffer4	[from=out3,
			pos="e,1045.9,1654.2 1040.5,1833.8 1046.8,1823.8 1053.9,1810.8 1057.2,1798 1068.8,1752.4 1058,1697.6 1049,1665.1",
			to=in1];
		buffer21	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:13",
			label=buffer21,
			mlir_op="handshake.buffer",
			out="out1:13",
			pos="812.16,1343.5",
			shape=box,
			slots=3,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		extsi7 -> buffer21	[from=out1,
			pos="e,819.37,1361.8 845,1761.9 852.8,1738 866.2,1693.3 871.16,1654 884.37,1549.1 844.01,1426.2 823.44,1372.3",
			to=in1];
		buffer2	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer2,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="1012.2,1708",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		extsi8 -> buffer2	[from=out1,
			pos="e,1012.9,1726.1 1014.4,1761.7 1014.1,1754.4 1013.7,1745.7 1013.4,1737.5",
			to=in1];
		extsi9	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi9,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="963.16,614.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		buffer4 -> extsi9	[from=out1,
			pos="e,969.44,632.66 1049.5,1617.5 1062.9,1590.6 1086.2,1537 1086.2,1488.5 1086.2,1488.5 1086.2,1488.5 1086.2,1342.5 1086.2,1134.5 1088.5,\
1079.5 1043.2,876.5 1023.8,789.97 990.03,690.53 973.23,643.25",
			to=in1];
		fork4	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:32",
			label=fork4,
			mlir_op="handshake.fork",
			out="out1:32 out2:32 out3:32",
			pos="930.16,470.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		extsi9 -> fork4	[from=out1,
			pos="e,934.15,488.69 959.18,596.37 953.6,572.38 943.4,528.49 936.7,499.66",
			to=in1];
		buffer13	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:32",
			label=buffer13,
			mlir_op="handshake.buffer",
			out="out1:32",
			pos="735.16,398.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.86806];
		fork4 -> buffer13	[from=out1,
			pos="e,766.63,408.72 902.75,453.78 896.43,450.48 889.65,447.18 883.16,444.5 873.2,440.39 817.61,423.76 777.48,411.91",
			to=in1];
		LSQ_store0	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=LSQ_store0,
			latency=0,
			mlir_op="handshake.lsq_store",
			op=lsq_store_op,
			out="out1:32 out2:32",
			portId=1,
			pos="741.16,178",
			shape=box,
			style=filled,
			type=Operator,
			width=1.1285];
		fork4 -> LSQ_store0	[from=out2,
			pos="e,779.14,196.36 940.78,452.06 946.26,442.04 952.36,429.01 955.16,416.5 965.65,369.66 978.73,350.31 955.16,308.5 936.84,276 846.72,\
228.8 789.43,201.26",
			to=in2];
		mc_load2	[II=1,
			bbID=3,
			delay="1.412 1.409 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=mc_load2,
			latency=2,
			mlir_op="handshake.mc_load",
			op=mc_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="911.16,398.5",
			shape=box,
			style=filled,
			type=Operator,
			width=0.97222];
		fork4 -> mc_load2	[from=out3,
			pos="e,915.8,416.6 925.46,452.2 923.44,444.74 921.02,435.82 918.75,427.47",
			to=in2];
		buffer16	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer16,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="1003.2,902.5",
			shape=box,
			slots=4,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.86806];
		mux2	[bbID=3,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:32 in3:32",
			label=mux2,
			mlir_op="handshake.mux",
			out="out1:32",
			pos="1038.2,106",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		buffer16 -> mux2	[from=out1,
			pos="e,1026.3,124.28 1004.5,884.1 1007.8,839.5 1016.2,717.39 1016.2,615.5 1016.2,615.5 1016.2,615.5 1016.2,325.5 1016.2,288.7 1001.3,\
195.72 1010.2,160 1012.4,151.15 1016.3,142.15 1020.6,134.14",
			to=in1];
		buffer8	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:32",
			label=buffer8,
			mlir_op="handshake.buffer",
			out="out1:32",
			pos="1005.2,34",
			shape=box,
			slots=2,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		mux2 -> buffer8	[from=out1,
			pos="e,1013.2,52.104 1030,87.697 1026.4,80.067 1022.1,70.916 1018.1,62.396",
			to=in1];
		mux1	[bbID=3,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:6 in3:6",
			label=mux1,
			mlir_op="handshake.mux",
			out="out1:6",
			pos="952.16,974.5",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		fork5	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork5,
			mlir_op="handshake.fork",
			out="out1:6 out2:6 out3:6",
			pos="851.16,902.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		mux1 -> fork5	[from=out1,
			pos="e,876.06,920.76 926.93,956.02 914.3,947.26 898.84,936.54 885.17,927.08",
			to=in1];
		extsi10	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi10,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="919.16,830.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		fork5 -> extsi10	[from=out2,
			pos="e,903.93,847.17 867.97,884.2 876.4,875.52 886.74,864.87 895.92,855.42",
			to=in1];
		buffer14	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer14,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="832.16,830.5",
			shape=box,
			slots=2,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.86806];
		fork5 -> buffer14	[from=out3,
			pos="e,836.8,848.6 846.46,884.2 844.44,876.74 842.02,867.82 839.75,859.47",
			to=in1];
		buffer18	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer18,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="751.16,830.5",
			shape=box,
			slots=2,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		fork5 -> buffer18	[from=out1,
			pos="e,775.82,848.76 826.18,884.02 813.8,875.35 798.66,864.75 785.23,855.35",
			to=in1];
		muli2	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12 in2:12",
			label=muli2,
			latency=4,
			mlir_op="arith.muli",
			op=mul_op,
			out="out1:12",
			pos="879.16,758.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		extsi10 -> muli2	[from=out1,
			pos="e,888.57,775.97 909.68,812.91 905.05,804.8 899.36,794.85 894.16,785.75",
			to=in1];
		extsi11	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi11,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="787.16,758.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		buffer14 -> extsi11	[from=out1,
			pos="e,797.84,776.12 821.03,812.2 815.89,804.2 809.67,794.52 803.97,785.65",
			to=in1];
		mc_load1	[II=1,
			bbID=3,
			delay="1.412 1.409 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=mc_load1,
			latency=2,
			mlir_op="handshake.mc_load",
			op=mc_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="785.16,686.5",
			shape=box,
			style=filled,
			type=Operator,
			width=0.97222];
		extsi11 -> mc_load1	[from=out1,
			pos="e,785.65,704.6 786.66,740.2 786.46,732.91 786.21,724.23 785.97,716.04",
			to=in2];
		control_merge1	[bbID=3,
			delay="0.000 1.397 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1:0 in2:0",
			label=control_merge1,
			mlir_op="handshake.control_merge",
			out="out1:0 out2?:1",
			pos="921.16,1118.5",
			shape=box,
			style="filled, dashed",
			type=CntrlMerge,
			width=1.4201];
		fork6	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork6,
			mlir_op="handshake.fork",
			out="out1:1 out2:1 out3:1",
			pos="1007.2,1046.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		control_merge1 -> fork6	[from=out2,
			pos="e,985.85,1064.8 942.42,1100.2 952.86,1091.7 965.62,1081.3 977.04,1072",
			to=in1];
		fork7	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:0",
			label=fork7,
			mlir_op="handshake.fork",
			out="out1:0 out2:0",
			pos="935.16,1046.5",
			shape=box,
			style="filled, dashed",
			type=Fork,
			width=0.75];
		control_merge1 -> fork7	[from=out1,
			pos="e,931.74,1064.6 924.62,1100.2 926.09,1092.8 927.85,1084 929.51,1075.8",
			style=dashed,
			to=in1];
		fork6 -> mux4	[from=out2,
			pos="e,1016.9,1917.2 1005.5,1064.6 1002.8,1088.7 996.09,1133.6 981.16,1169 966.2,1204.4 952.89,1208 933.16,1241 911.33,1277.5 904.55,\
1286.2 888.16,1325.5 835.71,1451.1 825.11,1484.8 797.16,1618 788.99,1657 787.16,1667.2 787.16,1707 787.16,1781 787.16,1781 787.16,\
1781 787.16,1839.5 832.97,1841.7 884.16,1870 923.09,1891.6 972.23,1906.2 1005.7,1914.5",
			to=in1];
		fork6 -> buffer16	[from=out3,
			pos="e,1003.6,920.61 1006.7,1028.1 1006,1004.1 1004.8,960.64 1004,931.92",
			to=in1];
		fork6 -> mux1	[from=out1,
			pos="e,965.6,992.6 993.56,1028.2 987.24,1020.1 979.58,1010.4 972.57,1001.5",
			to=in1];
		buffer3	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:0",
			label=buffer3,
			mlir_op="handshake.buffer",
			out="out1:0",
			pos="865.16,974.5",
			shape=box,
			slots=2,
			style="filled, dashed",
			transparent=false,
			type=Buffer,
			width=0.77431];
		fork7 -> buffer3	[from=out2,
			pos="e,882.26,992.6 917.85,1028.2 909.55,1019.9 899.44,1009.8 890.3,1000.6",
			style=dashed,
			to=in1];
		source0	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source0,
			mlir_op="handshake.source",
			out="out1:0",
			pos="734.16,1852",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant6	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:6",
			label=constant6,
			mlir_op="handshake.constant",
			out="out1:6",
			pos="734.16,1780",
			shape=box,
			style=filled,
			type=Constant,
			value="0x0000001e",
			width=0.94097];
		source0 -> constant6	[from=out1,
			pos="e,734.16,1798.1 734.16,1833.7 734.16,1826.4 734.16,1817.7 734.16,1809.5",
			style=dashed,
			to=in1];
		fork8	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork8,
			mlir_op="handshake.fork",
			out="out1:6 out2:6",
			pos="738.16,1708",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		constant6 -> fork8	[from=out1,
			pos="e,737.18,1726.1 735.15,1761.7 735.56,1754.4 736.06,1745.7 736.53,1737.5",
			to=in1];
		extsi12	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi12,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:12",
			pos="738.16,1195",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		fork8 -> extsi12	[from=out1,
			pos="e,738.16,1213.1 738.16,1689.5 738.16,1662.7 738.16,1609.9 738.16,1565 738.16,1565 738.16,1565 738.16,1342.5 738.16,1301.6 738.16,\
1254.2 738.16,1224.6",
			to=in1];
		buffer5	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer5,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="834.16,1636",
			shape=box,
			slots=1,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork8 -> buffer5	[from=out2,
			pos="e,810.37,1654.3 761.89,1689.7 773.77,1681 788.35,1670.4 801.29,1661",
			to=in1];
		extsi12 -> muli2	[from=out1,
			pos="e,853.1,769.73 733.92,1177 727.52,1149.8 716.16,1094.8 716.16,1047.5 716.16,1047.5 716.16,1047.5 716.16,973.5 716.16,901.91 668.23,\
869.79 711.16,812.5 745.31,766.92 780.14,794.58 834.16,776.5 836.86,775.6 839.64,774.63 842.43,773.64",
			to=in2];
		extsi13	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi13,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="926.16,1564",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		buffer5 -> extsi13	[from=out1,
			pos="e,906.79,1579.7 856.9,1617.7 869.23,1608.3 884.59,1596.6 897.71,1586.6",
			to=in1];
		cmpi0	[II=1,
			bbID=3,
			delay="1.998 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7 in2:7",
			label=cmpi0,
			latency=0,
			mlir_op="arith.cmpi<",
			op=icmp_ult_op,
			out="out1:1",
			pos="926.16,1487.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.95727];
		extsi13 -> cmpi0	[from=out1,
			pos="e,926.16,1505.9 926.16,1545.7 926.16,1537.3 926.16,1527 926.16,1517.4",
			to=in2];
		source1	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source1,
			mlir_op="handshake.source",
			out="out1:0",
			pos="927.16,1924",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant7	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:2",
			label=constant7,
			mlir_op="handshake.constant",
			out="out1:2",
			pos="927.16,1852",
			shape=box,
			style=filled,
			type=Constant,
			value="0x00000001",
			width=0.94097];
		source1 -> constant7	[from=out1,
			pos="e,927.16,1870.1 927.16,1905.7 927.16,1898.4 927.16,1889.7 927.16,1881.5",
			style=dashed,
			to=in1];
		extsi14	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:2",
			label=extsi14,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="927.16,1780",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		constant7 -> extsi14	[from=out1,
			pos="e,927.16,1798.1 927.16,1833.7 927.16,1826.4 927.16,1817.7 927.16,1809.5",
			to=in1];
		buffer1	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer1,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="932.16,1708",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		extsi14 -> buffer1	[from=out1,
			pos="e,930.94,1726.1 928.39,1761.7 928.91,1754.4 929.53,1745.7 930.12,1737.5",
			to=in1];
		extsi15	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:12",
			label=extsi15,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:13",
			pos="879.16,686.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		muli2 -> extsi15	[from=out1,
			pos="e,879.16,704.6 879.16,740.2 879.16,732.91 879.16,724.23 879.16,716.04",
			to=in1];
		addi2	[II=1,
			bbID=3,
			delay="2.047 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:13 in2:13",
			label=addi2,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:13",
			pos="879.16,614.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		extsi15 -> addi2	[from=out1,
			pos="e,879.16,632.6 879.16,668.2 879.16,660.91 879.16,652.23 879.16,644.04",
			to=in2];
		buffer21 -> addi2	[from=out1,
			pos="e,895.64,630.27 809.17,1325.3 801.43,1277.7 782.6,1140.2 802.16,1028.5 808.02,994.99 806.64,982.85 828.16,956.5 847.59,932.71 862.58,\
938.93 887.16,920.5 925.16,892 946.97,891.96 966.16,848.5 988.09,798.84 959.59,729.95 926.16,668.5 920.25,657.64 911.74,647.14 903.58,\
638.39",
			to=in1];
		extsi16	[II=1,
			bbID=3,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:13",
			label=extsi16,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="860.16,542.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		addi2 -> extsi16	[from=out1,
			pos="e,864.85,560.78 874.56,596.55 872.54,589.1 870.1,580.14 867.82,571.72",
			to=in1];
		mc_load0	[II=1,
			bbID=3,
			delay="1.412 1.409 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=mc_load0,
			latency=2,
			mlir_op="handshake.mc_load",
			op=mc_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="839.16,470.5",
			shape=box,
			style=filled,
			type=Operator,
			width=0.97222];
		extsi16 -> mc_load0	[from=out1,
			pos="e,844.29,488.6 854.97,524.2 852.73,516.74 850.05,507.82 847.55,499.47",
			to=in2];
		fork9	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:32",
			label=fork9,
			mlir_op="handshake.fork",
			out="out1:32 out2:32",
			pos="831.16,398.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		mc_load0 -> fork9	[from=out1,
			pos="e,833.11,416.6 837.18,452.2 836.35,444.91 835.36,436.23 834.42,428.04",
			to=in1];
		muli0	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=muli0,
			latency=4,
			mlir_op="arith.muli",
			op=mul_op,
			out="out1:32",
			pos="829.16,326.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork9 -> muli0	[from=out2,
			pos="e,829.65,344.6 830.66,380.2 830.46,372.91 830.21,364.23 829.97,356.04",
			to=in2];
		muli1	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=muli1,
			latency=4,
			mlir_op="arith.muli",
			op=mul_op,
			out="out1:32",
			pos="913.16,326.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork9 -> muli1	[from=out1,
			pos="e,895.89,342.24 851.43,380.2 862.31,370.91 875.84,359.36 887.46,349.44",
			to=in1];
		LSQ_load1	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=LSQ_load1,
			latency=5,
			mlir_op="handshake.lsq_load",
			op=lsq_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="739.16,326.5",
			shape=box,
			style=filled,
			type=Operator,
			width=1.0868];
		buffer13 -> LSQ_load1	[from=out1,
			pos="e,738.18,344.6 736.15,380.2 736.56,372.91 737.06,364.23 737.53,356.04",
			to=in2];
		addi0	[II=1,
			bbID=3,
			delay="2.287 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=addi0,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:32",
			pos="741.16,254.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		LSQ_load1 -> addi0	[from=out1,
			pos="e,740.67,272.6 739.65,308.2 739.86,300.91 740.11,292.23 740.34,284.04",
			to=in1];
		mc_load1 -> muli0	[from=out1,
			pos="e,816.35,343.19 785.16,668.01 785.16,641.21 785.16,588.37 785.16,543.5 785.16,543.5 785.16,543.5 785.16,469.5 785.16,429.7 781.84,\
418.01 795.16,380.5 798.63,370.73 804.2,360.92 809.83,352.44",
			to=in1];
		muli0 -> addi0	[from=out1,
			pos="e,759.07,269.75 810.92,311 798.45,301.08 781.72,287.76 767.76,276.66",
			to=in2];
		addi0 -> LSQ_store0	[from=out1,
			pos="e,741.16,196.44 741.16,236.22 741.16,227.82 741.16,217.49 741.16,207.93",
			to=in1];
		mc_load2 -> muli1	[from=out1,
			pos="e,912.67,344.6 911.65,380.2 911.86,372.91 912.11,364.23 912.34,356.04",
			to=in2];
		addi1	[II=1,
			bbID=3,
			delay="2.287 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:32 in2:32",
			label=addi1,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:32",
			pos="966.16,254.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		muli1 -> addi1	[from=out1,
			pos="e,954.18,271.32 925.18,309.62 931.76,300.93 940.04,289.99 947.44,280.22",
			to=in2];
		buffer8 -> addi1	[from=out1,
			pos="e,969.22,236.35 1002.1,52.368 995.35,89.975 979.41,179.24 971.22,225.15",
			to=in1];
		cond_br3	[bbID=3,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:32 in2?:1",
			label=cond_br3,
			mlir_op="handshake.cond_br",
			out="out1+:32 out2-:32",
			pos="1052.2,178",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		addi1 -> cond_br3	[from=out1,
			pos="e,1032,196.47 982.74,239.14 994.27,229.15 1009.9,215.57 1023.5,203.85",
			to=in1];
		addi5	[II=1,
			bbID=3,
			delay="1.927 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7 in2:7",
			label=addi5,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:7",
			pos="963.16,1636",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		buffer1 -> addi5	[from=out1,
			pos="e,955.8,1653.6 939.82,1689.7 943.25,1682 947.37,1672.6 951.19,1664",
			to=in2];
		buffer2 -> addi5	[from=out1,
			pos="e,974.46,1653.1 1000,1689.7 994.3,1681.5 987.32,1671.5 980.99,1662.5",
			to=in1];
		fork10	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:7",
			label=fork10,
			mlir_op="handshake.fork",
			out="out1:7 out2:7",
			pos="1009.2,1564",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		addi5 -> fork10	[from=out1,
			pos="e,997.91,1582.1 973.83,1618.8 979.13,1610.7 985.67,1600.7 991.68,1591.6",
			to=in1];
		buffer19	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer19,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="1010.2,1487.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		fork10 -> buffer19	[from=out1,
			pos="e,1009.9,1505.9 1009.4,1545.7 1009.5,1537.3 1009.6,1527 1009.8,1517.4",
			to=in1];
		fork10 -> cmpi0	[from=out2,
			pos="e,938.63,1504.7 982.03,1547 977.92,1544.2 973.83,1541.1 970.16,1538 961.56,1530.6 953.07,1521.6 945.87,1513.3",
			to=in1];
		trunci0	[II=1,
			bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7",
			label=trunci0,
			latency=0,
			mlir_op="arith.trunci",
			op=trunc_op,
			out="out1:6",
			pos="1010.2,1415.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0284];
		buffer19 -> trunci0	[from=out1,
			pos="e,1010.2,1433.6 1010.2,1469.2 1010.2,1461.9 1010.2,1453.2 1010.2,1445",
			to=in1];
		cond_br0	[bbID=3,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:6 in2?:1",
			label=cond_br0,
			mlir_op="handshake.cond_br",
			out="out1+:6 out2-:6",
			pos="1022.2,1267",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		trunci0 -> cond_br0	[from=out1,
			pos="e,1020.7,1285.4 1011.6,1397.1 1013.6,1372.3 1017.4,1326.6 1019.8,1296.7",
			to=in1];
		buffer17	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer17,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="924.16,1415.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		cmpi0 -> buffer17	[from=out1,
			pos="e,924.65,1433.6 925.66,1469.2 925.46,1461.9 925.21,1453.2 924.97,1445",
			to=in1];
		fork11	[bbID=3,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork11,
			mlir_op="handshake.fork",
			out="out1:1 out2:1 out3:1 out4:1",
			pos="924.16,1343.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		buffer17 -> fork11	[from=out1,
			pos="e,924.16,1361.6 924.16,1397.2 924.16,1389.9 924.16,1381.2 924.16,1373",
			to=in1];
		fork11 -> cond_br0	[from=out1,
			pos="e,1004.2,1285.4 951.3,1327.4 956.35,1324.3 961.5,1320.9 966.16,1317.5 976.33,1310.1 986.83,1301.2 995.95,1293",
			to=in2];
		buffer9	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer9,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="1038.2,1118.5",
			shape=box,
			slots=4,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork11 -> buffer9	[from=out3,
			pos="e,1029.3,1136.9 933.1,1325 952.87,1286.3 1000.4,1193.3 1024.2,1146.9",
			to=in1];
		cond_br1	[bbID=3,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:6 in2?:1",
			label=cond_br1,
			mlir_op="handshake.cond_br",
			out="out1+:6 out2-:6",
			pos="856.16,1046.5",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		fork11 -> cond_br1	[from=out2,
			pos="e,851.04,1065 926.15,1325.1 928.95,1291.7 929.95,1218.3 891.16,1177 881.72,1166.9 869.79,1179.8 861.16,1169 840.34,1143 843.27,1103 \
848.59,1076",
			to=in2];
		buffer15	[bbID=3,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer15,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="849.16,1267",
			shape=box,
			slots=1,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.86806];
		fork11 -> buffer15	[from=out4,
			pos="e,864.92,1285.3 904.39,1325.2 901.59,1322.7 898.78,1320 896.16,1317.5 888.37,1309.9 880.14,1301.5 872.78,1293.7",
			to=in1];
		cond_br0 -> mux4	[color=blue,
			from=out1,
			pos="e,1053.1,1905.6 1030.9,1285.1 1043.7,1311.9 1066.2,1365.9 1066.2,1414.5 1066.2,1488.5 1066.2,1488.5 1066.2,1488.5 1066.2,1586.1 \
1087.2,1609.4 1087.2,1707 1087.2,1781 1087.2,1781 1087.2,1781 1087.2,1822.2 1070.4,1867.3 1057.8,1895.3",
			to=in2];
		buffer9 -> cond_br3	[from=out1,
			pos="e,1051.2,196.13 1040.1,1100.3 1041.3,1090 1042.5,1076.5 1043.2,1064.5 1051.9,897.16 1047.2,855.06 1047.2,687.5 1047.2,687.5 1047.2,\
687.5 1047.2,325.5 1047.2,284.53 1049.1,237.15 1050.6,207.62",
			to=in2];
		cond_br3 -> mux2	[color=blue,
			from=out1,
			pos="e,1041.6,124.1 1048.7,159.7 1047.2,152.32 1045.5,143.52 1043.8,135.25",
			to=in2];
		buffer18 -> cond_br1	[from=out1,
			pos="e,846.9,1028.4 759.03,848.53 772.73,878.03 801.98,940.46 828.16,992.5 832.43,1001 837.22,1010.2 841.62,1018.5",
			to=in1];
		cond_br1 -> mux1	[color=blue,
			from=out1,
			pos="e,928.37,992.85 879.89,1028.2 891.77,1019.5 906.35,1008.9 919.29,999.46",
			to=in2];
		cond_br5	[bbID=3,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:0 in2?:1",
			label=cond_br5,
			mlir_op="handshake.cond_br",
			out="out1+:0 out2-:0",
			pos="848.16,1195",
			shape=box,
			style="filled, dashed",
			type=Branch,
			width=0.93056];
		buffer3 -> cond_br5	[from=out1,
			pos="e,838.39,1177 841.59,992.92 831.07,1002.2 819.79,1014.5 814.16,1028.5 795.36,1075.1 816.99,1133.5 833.33,1167",
			style=dashed,
			to=in1];
		buffer15 -> cond_br5	[from=out1,
			pos="e,848.4,1213.1 848.91,1248.7 848.81,1241.4 848.68,1232.7 848.57,1224.5",
			to=in2];
		cond_br5 -> control_merge1	[color=blue,
			from=out1,
			pos="e,904.07,1136.9 865.09,1176.7 874.33,1167.3 885.94,1155.4 896.2,1145",
			style=dashed,
			to=in1];
	}
	subgraph cluster4 {
		graph [bb="384.16,8,468.16,228.5",
			label=block4,
			lheight=0.23,
			lp="426.16,216.25",
			lwidth=0.51
		];
		buffer6	[bbID=5,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:32",
			label=buffer6,
			mlir_op="handshake.buffer",
			out="out1:32",
			pos="423.16,178",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.77431];
		d_return0	[II=1,
			bbID=5,
			delay="1.412 1.397 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=gold,
			height=0.5,
			in="in1:32",
			label=d_return0,
			latency=0,
			mlir_op="handshake.d_return",
			op=ret_op,
			out="out1:32",
			pos="426.16,106",
			shape=box,
			style=filled,
			type=Operator,
			width=0.95139];
		buffer6 -> d_return0	[from=out1,
			pos="e,425.43,124.1 423.9,159.7 424.21,152.41 424.58,143.73 424.94,135.54",
			to=in1];
		end0	[bbID=5,
			delay="1.397 0.000 1.397 1.409 100.000 100.000 100.000 100.000",
			fillcolor=gold,
			height=0.5,
			in="in1:0*e in2:0*e in3:0*e in4:0*e in5:0*e in6:32",
			label=end0,
			mlir_op="handshake.end",
			out="out1:32",
			pos="433.16,34",
			shape=box,
			style=filled,
			type=Exit,
			width=0.75];
		d_return0 -> end0	[from=out1,
			pos="e,431.45,52.104 427.89,87.697 428.62,80.407 429.49,71.726 430.3,63.536",
			to=in6];
	}
	subgraph cluster1 {
		graph [bb="1166.2,876.5,1399.2,1317.5",
			label=block1,
			lheight=0.23,
			lp="1282.7,1305.2",
			lwidth=0.51
		];
		mux0	[bbID=2,
			delay="1.412 1.397 0.000 1.412 1.397 1.412 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1?:1 in2:6 in3:6",
			label=mux0,
			mlir_op="handshake.mux",
			out="out1:6",
			pos="1266.2,1195",
			shape=box,
			style=filled,
			type=Mux,
			width=0.75];
		buffer12	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:6",
			label=buffer12,
			mlir_op="handshake.buffer",
			out="out1:6",
			pos="1205.2,1118.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		mux0 -> buffer12	[from=out1,
			pos="e,1219.4,1136.9 1252,1176.7 1244.4,1167.5 1235,1155.9 1226.5,1145.6",
			to=in1];
		fork1	[bbID=2,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork1,
			mlir_op="handshake.fork",
			out="out1:6 out2:6",
			pos="1205.2,1046.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		buffer12 -> fork1	[from=out1,
			pos="e,1205.2,1064.6 1205.2,1100.2 1205.2,1092.9 1205.2,1084.2 1205.2,1076",
			to=in1];
		extsi6	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi6,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="1249.2,974.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork1 -> extsi6	[from=out2,
			pos="e,1239,991.64 1216,1028.2 1221.1,1020.1 1227.3,1010.2 1233,1001.3",
			to=in1];
		LSQ_load0	[II=1,
			bbID=2,
			delay="0.000 0.000 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=LSQ_load0,
			latency=5,
			mlir_op="handshake.lsq_load",
			op=lsq_load_op,
			out="out1:32 out2:32",
			portId=0,
			pos="1251.2,902.5",
			shape=box,
			style=filled,
			type=Operator,
			width=1.0868];
		extsi6 -> LSQ_load0	[from=out1,
			pos="e,1250.7,920.6 1249.7,956.2 1249.9,948.91 1250.1,940.23 1250.3,932.04",
			to=in2];
		control_merge0	[bbID=2,
			delay="0.000 1.397 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lightblue,
			height=0.5,
			in="in1:0 in2:0",
			label=control_merge0,
			mlir_op="handshake.control_merge",
			out="out1:0 out2?:1",
			pos="1303.2,1267",
			shape=box,
			style="filled, dashed",
			type=CntrlMerge,
			width=1.4201];
		control_merge0 -> mux0	[from=out2,
			pos="e,1275.2,1213.1 1294,1248.7 1289.9,1241 1285,1231.7 1280.5,1223.1",
			to=in1];
		fork2	[bbID=2,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:0",
			label=fork2,
			mlir_op="handshake.fork",
			out="out1:0 out2:0 out3:0",
			pos="1351.2,1195",
			shape=box,
			style="filled, dashed",
			type=Fork,
			width=0.75];
		control_merge0 -> fork2	[from=out1,
			pos="e,1339.4,1213.1 1315,1248.7 1320.4,1240.8 1326.9,1231.3 1333,1222.5",
			style=dashed,
			to=in1];
		buffer11	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:0",
			label=buffer11,
			mlir_op="handshake.buffer",
			out="out1:0",
			pos="1286.2,1118.5",
			shape=box,
			slots=1,
			style="filled, dashed",
			transparent=false,
			type=Buffer,
			width=0.86806];
		fork2 -> buffer11	[from=out2,
			pos="e,1299.4,1136.8 1333.4,1176.7 1330.9,1174.2 1328.5,1171.6 1326.2,1169 1319.5,1161.6 1312.7,1153.4 1306.5,1145.7",
			style=dashed,
			to=in1];
		buffer0	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:0",
			label=buffer0,
			mlir_op="handshake.buffer",
			out="out1:0",
			pos="1363.2,1118.5",
			shape=box,
			slots=1,
			style="filled, dashed",
			transparent=false,
			type=Buffer,
			width=0.77431];
		fork2 -> buffer0	[from=out3,
			pos="e,1360.3,1136.9 1353.9,1176.7 1355.3,1168.2 1357,1157.8 1358.5,1148.1",
			style=dashed,
			to=in1];
		constant1	[bbID=2,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:1",
			label=constant1,
			mlir_op="handshake.constant",
			out="out1:1",
			pos="1323.2,1046.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x00000000",
			width=0.94097];
		buffer11 -> constant1	[from=out1,
			pos="e,1314.1,1064.6 1295.3,1100.2 1299.4,1092.5 1304.3,1083.2 1308.8,1074.6",
			style=dashed,
			to=in1];
		extsi1	[II=1,
			bbID=2,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:1",
			label=extsi1,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:6",
			pos="1343.2,974.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant1 -> extsi1	[from=out1,
			pos="e,1338.3,992.6 1328.1,1028.2 1330.2,1020.7 1332.8,1011.8 1335.2,1003.5",
			to=in1];
	}
	subgraph cluster3 {
		graph [bb="96.158,444.5,512.16,1169",
			label=block3,
			lheight=0.23,
			lp="304.16,1156.8",
			lwidth=0.51
		];
		fork12	[bbID=4,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:6",
			label=fork12,
			mlir_op="handshake.fork",
			out="out1:6 out2:6",
			pos="394.16,1046.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		extsi2	[II=1,
			bbID=4,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi2,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="306.16,974.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		fork12 -> extsi2	[from=out1,
			pos="e,324.11,989.78 372.41,1028.2 360.45,1018.7 345.51,1006.8 332.85,996.73",
			to=in1];
		extsi17	[II=1,
			bbID=4,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi17,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:32",
			pos="394.16,974.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		fork12 -> extsi17	[from=out2,
			pos="e,394.16,992.6 394.16,1028.2 394.16,1020.9 394.16,1012.2 394.16,1004",
			to=in1];
		addi3	[II=1,
			bbID=4,
			delay="1.927 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7 in2:7",
			label=addi3,
			latency=0,
			mlir_op="arith.addi",
			op=add_op,
			out="out1:7",
			pos="275.16,902.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.87197];
		extsi2 -> addi3	[from=out1,
			pos="e,282.59,920.29 298.65,956.55 295.23,948.82 291.08,939.46 287.23,930.77",
			to=in1];
		LSQ_store1	[II=1,
			bbID=4,
			delay="0.000 0.000 0.000 100.000 100.000 100.000 100.000 100.000",
			fillcolor=coral,
			height=0.5,
			in="in1:32 in2:32",
			label=LSQ_store1,
			latency=0,
			mlir_op="handshake.lsq_store",
			op=lsq_store_op,
			out="out1:32 out2:32",
			portId=1,
			pos="463.16,902.5",
			shape=box,
			style=filled,
			type=Operator,
			width=1.1285];
		extsi17 -> LSQ_store1	[from=out1,
			pos="e,445.95,920.96 409.47,957.96 417.82,949.49 428.38,938.79 437.91,929.11",
			to=in2];
		fork13	[bbID=4,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:32",
			label=fork13,
			mlir_op="handshake.fork",
			out="out1:32 out2:32",
			pos="477.16,974.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		fork13 -> LSQ_store1	[from=out2,
			pos="e,466.58,920.6 473.7,956.2 472.22,948.82 470.46,940.02 468.81,931.75",
			to=in1];
		cond_br11	[bbID=4,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:32 in2?:1",
			label=cond_br11,
			mlir_op="handshake.cond_br",
			out="out1+:32 out2-:32",
			pos="403.16,470.5",
			shape=box,
			style=filled,
			type=Branch,
			width=1.0243];
		fork13 -> cond_br11	[from=out1,
			pos="e,403.16,488.99 449.79,957.86 436.45,948.75 421.53,935.98 413.16,920.5 394.23,885.48 403.16,871.3 403.16,831.5 403.16,831.5 403.16,\
831.5 403.16,613.5 403.16,574.24 403.16,528.88 403.16,500.19",
			to=in1];
		source2	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source2,
			mlir_op="handshake.source",
			out="out1:0",
			pos="133.16,974.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant8	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:6",
			label=constant8,
			mlir_op="handshake.constant",
			out="out1:6",
			pos="179.16,902.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x0000001e",
			width=0.94097];
		source2 -> constant8	[from=out1,
			pos="e,167.92,920.6 144.53,956.2 149.71,948.31 155.96,938.8 161.71,930.05",
			style=dashed,
			to=in1];
		extsi3	[II=1,
			bbID=4,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:6",
			label=extsi3,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="193.16,830.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.91462];
		constant8 -> extsi3	[from=out1,
			pos="e,189.74,848.6 182.62,884.2 184.09,876.82 185.85,868.02 187.51,859.75",
			to=in1];
		buffer10	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer10,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="196.16,758.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		extsi3 -> buffer10	[from=out1,
			pos="e,195.43,776.6 193.9,812.2 194.21,804.91 194.58,796.23 194.94,788.04",
			to=in1];
		source3	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=gainsboro,
			height=0.5,
			label=source3,
			mlir_op="handshake.source",
			out="out1:0",
			pos="218.16,1118.5",
			shape=box,
			style="filled, dashed",
			type=Source,
			width=0.80556];
		constant9	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=plum,
			height=0.5,
			in="in1:2",
			label=constant9,
			mlir_op="handshake.constant",
			out="out1:2",
			pos="218.16,1046.5",
			shape=box,
			style=filled,
			type=Constant,
			value="0x00000001",
			width=0.94097];
		source3 -> constant9	[from=out1,
			pos="e,218.16,1064.6 218.16,1100.2 218.16,1092.9 218.16,1084.2 218.16,1076",
			style=dashed,
			to=in1];
		extsi18	[II=1,
			bbID=4,
			delay="0.672 0.672 1.397 1.397 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:2",
			label=extsi18,
			latency=0,
			mlir_op="arith.extsi",
			op=sext_op,
			out="out1:7",
			pos="218.16,974.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0426];
		constant9 -> extsi18	[from=out1,
			pos="e,218.16,992.6 218.16,1028.2 218.16,1020.9 218.16,1012.2 218.16,1004",
			to=in1];
		extsi18 -> addi3	[from=out1,
			pos="e,262.4,919.17 231.38,957.26 238.46,948.57 247.32,937.69 255.22,927.99",
			to=in2];
		buffer20	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:7",
			label=buffer20,
			mlir_op="handshake.buffer",
			out="out1:7",
			pos="275.16,830.5",
			shape=box,
			slots=1,
			style=filled,
			transparent=false,
			type=Buffer,
			width=0.86806];
		addi3 -> buffer20	[from=out1,
			pos="e,275.16,848.6 275.16,884.2 275.16,876.91 275.16,868.23 275.16,860.04",
			to=in1];
		fork14	[bbID=4,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:7",
			label=fork14,
			mlir_op="handshake.fork",
			out="out1:7 out2:7",
			pos="275.16,758.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		buffer20 -> fork14	[from=out1,
			pos="e,275.16,776.6 275.16,812.2 275.16,804.91 275.16,796.23 275.16,788.04",
			to=in1];
		trunci1	[II=1,
			bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7",
			label=trunci1,
			latency=0,
			mlir_op="arith.trunci",
			op=trunc_op,
			out="out1:6",
			pos="303.16,614.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=1.0284];
		fork14 -> trunci1	[from=out1,
			pos="e,299.78,632.61 278.59,740.09 283.34,716 291.97,672.25 297.63,643.53",
			to=in1];
		cmpi1	[II=1,
			bbID=4,
			delay="1.998 1.397 1.400 1.409 100.000 100.000 100.000 100.000",
			fillcolor=moccasin,
			height=0.5,
			in="in1:7 in2:7",
			label=cmpi1,
			latency=0,
			mlir_op="arith.cmpi<",
			op=icmp_ult_op,
			out="out1:1",
			pos="221.16,686.5",
			shape=oval,
			style=filled,
			type=Operator,
			width=0.95727];
		fork14 -> cmpi1	[from=out2,
			pos="e,233.61,703.64 261.81,740.2 255.41,731.9 247.63,721.81 240.59,712.69",
			to=in1];
		cond_br2	[bbID=4,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:6 in2?:1",
			label=cond_br2,
			mlir_op="handshake.cond_br",
			out="out1+:6 out2-:6",
			pos="303.16,542.5",
			shape=box,
			style=filled,
			type=Branch,
			width=0.93056];
		trunci1 -> cond_br2	[from=out1,
			pos="e,303.16,560.6 303.16,596.2 303.16,588.91 303.16,580.23 303.16,572.04",
			to=in1];
		buffer10 -> cmpi1	[from=out1,
			pos="e,215.05,704.6 202.34,740.2 205.03,732.65 208.26,723.62 211.27,715.18",
			to=in2];
		fork15	[bbID=4,
			delay="0.000 0.100 0.100 100.000 100.000 100.000 100.000 100.000",
			fillcolor=lavender,
			height=0.5,
			in="in1:1",
			label=fork15,
			mlir_op="handshake.fork",
			out="out1:1 out2:1 out3:1",
			pos="221.16,614.5",
			shape=box,
			style=filled,
			type=Fork,
			width=0.75];
		cmpi1 -> fork15	[from=out1,
			pos="e,221.16,632.6 221.16,668.2 221.16,660.91 221.16,652.23 221.16,644.04",
			to=in1];
		fork15 -> cond_br2	[from=out1,
			pos="e,282.84,560.85 241.43,596.2 251.28,587.78 263.31,577.52 274.12,568.29",
			to=in2];
		cond_br10	[bbID=4,
			delay="0.000 1.409 1.411 1.412 1.400 1.412 100.000 100.000",
			fillcolor=tan2,
			height=0.5,
			in="in1:0 in2?:1",
			label=cond_br10,
			mlir_op="handshake.cond_br",
			out="out1+:0 out2-:0",
			pos="141.16,542.5",
			shape=box,
			style="filled, dashed",
			type=Branch,
			width=1.0243];
		fork15 -> cond_br10	[from=out2,
			pos="e,160.98,560.85 201.38,596.2 191.77,587.78 180.04,577.52 169.49,568.29",
			to=in2];
		buffer7	[bbID=4,
			delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
			fillcolor=lightgreen,
			height=0.5,
			in="in1:1",
			label=buffer7,
			mlir_op="handshake.buffer",
			out="out1:1",
			pos="224.16,542.5",
			shape=box,
			slots=2,
			style=filled,
			transparent=true,
			type=Buffer,
			width=0.77431];
		fork15 -> buffer7	[from=out3,
			pos="e,223.43,560.6 221.9,596.2 222.21,588.91 222.58,580.23 222.94,572.04",
			to=in1];
		buffer7 -> cond_br11	[from=out1,
			pos="e,365.79,484.6 252.35,528.29 255.31,526.98 258.29,525.69 261.16,524.5 292.15,511.62 327.52,498.41 355.2,488.41",
			to=in2];
	}
	mem_controller0	[bbID=0,
		bbcount=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=coral,
		height=0.5,
		in="in1:32*l0a",
		label=mem_controller0,
		ldcount=1,
		memory=r,
		mlir_op="handshake.mem_controller",
		out="out1:32*l0d out2:0*e",
		pos="629.16,614.5",
		shape=box,
		stcount=0,
		style=filled,
		type=MC,
		width=1.5347];
	mem_controller0 -> mc_load1	[from=out1,
		mem_address=false,
		pos="e,752.13,668.02 673.82,632.88 695.18,642.05 720.6,653.39 741.79,663.2",
		to=in1];
	mem_controller0 -> end0	[from=out2,
		pos="e,447.32,52.149 639.39,596.13 657.39,563.05 689.72,490.19 655.16,444.5 627.57,408.03 590.43,446.77 556.16,416.5 497.94,365.08 488.16,\
333.18 488.16,255.5 488.16,255.5 488.16,255.5 488.16,177 488.16,136.55 485.04,125.2 469.16,88 465.25,78.836 459.66,69.596 454.06,\
61.455",
		style=dashed,
		to=in1];
	mem_controller1	[bbID=0,
		bbcount=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=coral,
		height=0.5,
		in="in1:32*l0a",
		label=mem_controller1,
		ldcount=1,
		memory=p,
		mlir_op="handshake.mem_controller",
		out="out1:32*l0d out2:0*e",
		pos="618.16,326.5",
		shape=box,
		stcount=0,
		style=filled,
		type=MC,
		width=1.5347];
	mem_controller1 -> mc_load2	[from=out1,
		mem_address=false,
		pos="e,875.7,380.37 673.66,339.1 681.58,340.96 689.59,342.82 697.16,344.5 772.36,361.19 795.89,358.17 864.73,377.25",
		to=in1];
	mem_controller1 -> end0	[from=out2,
		pos="e,460.62,42.047 616.96,308.05 613.17,265.45 598,154.74 540.16,88 522.19,67.268 494.2,53.807 471.36,45.64",
		style=dashed,
		to=in2];
	LSQ0	[bbID=0,
		bbcount=1,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fifoDepth=16,
		fillcolor=coral,
		height=0.5,
		in="in1:0*c0 in2:32*l0a in3:32*s0a in4:32*s0d",
		label=LSQ0,
		ldcount=1,
		loadOffsets="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		loadPorts="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		memory=q,
		mlir_op="handshake.lsq",
		numLoads="{1}",
		numStores="{1}",
		out="out1:32*l0d out2:0*e",
		pos="1169.2,830.5",
		shape=box,
		stcount=1,
		storeOffsets="{{1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		storePorts="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		style=filled,
		type=LSQ,
		width=0.75];
	LSQ0 -> LSQ_load0	[from=out1,
		mem_address=false,
		pos="e,1236.8,884.2 1195.4,848.85 1206,857.18 1218.1,867.33 1228.3,876.48",
		to=in1];
	LSQ0 -> end0	[from=out2,
		pos="e,460.33,36.394 1165.7,812.09 1160.8,785.4 1152.2,732.69 1152.2,687.5 1152.2,687.5 1152.2,687.5 1152.2,253.5 1152.2,210.6 1161,187.66 \
1128.2,160 1053.2,96.755 776.27,167.13 688.16,124 668.66,114.46 673.87,99.003 655.16,88 597.03,53.816 518.08,41.659 471.68,37.35",
		style=dashed,
		to=in3];
	LSQ1	[bbID=0,
		bbcount=1,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fifoDepth=16,
		fillcolor=coral,
		height=0.5,
		in="in1:0*c0 in2:32*l0a in3:32*s0a in4:32*s0d",
		label=LSQ1,
		ldcount=1,
		loadOffsets="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		loadPorts="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		memory=s,
		mlir_op="handshake.lsq",
		numLoads="{1}",
		numStores="{1}",
		out="out1:32*l0d out2:0*e",
		pos="619.16,106",
		shape=box,
		stcount=1,
		storeOffsets="{{1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		storePorts="{{0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0}}",
		style=filled,
		type=LSQ,
		width=0.75];
	LSQ1 -> LSQ_load1	[from=out1,
		mem_address=false,
		pos="e,725.76,308.32 626.65,124.4 640.13,155.1 669.95,220.55 701.16,272.5 706.52,281.43 712.94,290.78 718.96,299.11",
		to=in1];
	LSQ1 -> end0	[from=out2,
		pos="e,460.55,44.619 591.88,93.498 587.31,91.627 582.61,89.735 578.16,88 542.07,73.928 500.51,58.852 471.16,48.39",
		style=dashed,
		to=in4];
	mem_controller2	[bbID=0,
		bbcount=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=coral,
		height=0.5,
		in="in1:32*l0a",
		label=mem_controller2,
		ldcount=1,
		memory=a,
		mlir_op="handshake.mem_controller",
		out="out1:32*l0d out2:0*e",
		pos="620.16,398.5",
		shape=box,
		stcount=0,
		style=filled,
		type=MC,
		width=1.5347];
	mem_controller2 -> mc_load0	[from=out1,
		mem_address=false,
		pos="e,803.87,456.5 675.59,415.38 711.97,426.59 758.9,441.58 793.2,452.95",
		to=in1];
	mem_controller2 -> end0	[from=out2,
		pos="e,460.62,50.103 591.5,380.15 578.48,370.99 563.86,358.7 554.16,344.5 530.76,310.26 526.16,296.97 526.16,255.5 526.16,255.5 526.16,\
255.5 526.16,177 526.16,136.03 524.94,122.05 502.16,88 493.87,75.617 481.73,64.908 469.93,56.422",
		style=dashed,
		to=in5];
	fork0 -> control_merge0	[from=out1,
		pos="e,1320.5,1285.4 1431.8,1397.1 1406.2,1371.3 1357.8,1322.9 1328.3,1293.2",
		style=dashed,
		to=in2];
	extsi0 -> mux0	[from=out1,
		pos="e,1293.6,1205.7 1426.6,1252.9 1419.3,1248.8 1411,1244.4 1403.2,1241 1365.5,1224.7 1354.1,1225.9 1315.2,1213 1311.7,1211.8 1308,1210.6 \
1304.4,1209.4",
		to=in3];
	fork1 -> mux1	[from=out1,
		pos="e,979.42,983.04 1178.1,1038 1132.9,1025.5 1042.1,1000.4 990.44,986.09",
		to=in3];
	fork2 -> LSQ0	[from=out1,
		pos="e,1167.8,848.86 1378.5,1186.3 1386.9,1182.5 1395.3,1177 1400.2,1169 1433.7,1114.2 1416.3,1068.7 1366.2,1028.5 1309.6,983.16 1258.6,\
1043.5 1207.2,992.5 1171.8,957.45 1166.9,896.02 1167.4,860.02",
		style=dashed,
		to=in1];
	LSQ_load0 -> LSQ0	[from=out2,
		mem_address=true,
		pos="e,1183.6,848.85 1225,884.2 1214.4,875.87 1202.3,865.72 1192,856.57",
		to=in2];
	LSQ_load0 -> mux2	[from=out1,
		pos="e,1065.6,112.83 1249.9,884.02 1248.2,857.23 1245.2,804.41 1245.2,759.5 1245.2,759.5 1245.2,759.5 1245.2,253.5 1245.2,171.81 1136.4,\
131.58 1076.6,115.62",
		to=in3];
	extsi1 -> mux4	[from=out1,
		pos="e,1071.4,1921.2 1373.4,981.93 1429.8,995.87 1545.2,1034.6 1545.2,1117.5 1545.2,1781 1545.2,1781 1545.2,1781 1545.2,1877 1200.1,1911.5 \
1082.7,1920.4",
		to=in3];
	buffer0 -> control_merge1	[from=out1,
		pos="e,942,1137 1355.4,1136.8 1348,1151.1 1335.3,1169.1 1317.2,1173 1300.5,1176.5 1026.8,1176.5 1010.2,1173 988.53,1168.4 967.29,1155.8 \
950.99,1143.9",
		style=dashed,
		to=in2];
	fork7 -> LSQ1	[from=out1,
		pos="e,646.43,122.4 962.34,1030.9 1012.4,1003 1114.2,941.78 1114.2,903.5 1114.2,903.5 1114.2,903.5 1114.2,253.5 1114.2,211.1 1126.9,188.14 \
1095.2,160 1023.7,96.62 765.25,147.91 657.59,125.18",
		style=dashed,
		to=in1];
	mc_load0 -> mem_controller2	[from=out2,
		mem_address=true,
		pos="e,668.87,416.97 803.86,459.77 770.36,449.67 719.52,433.57 679.77,420.55",
		to=in1];
	LSQ_load1 -> LSQ1	[from=out2,
		mem_address=true,
		pos="e,618.56,124.45 699.77,309.43 683.31,300.81 665.43,288.6 654.16,272.5 625.3,231.29 619.39,171.13 618.64,135.83",
		to=in2];
	mc_load1 -> mem_controller0	[from=out2,
		mem_address=true,
		pos="e,661.99,632.89 750.01,672.17 726.9,662.42 696.62,648.96 672.11,637.61",
		to=in1];
	LSQ_store0 -> LSQ1	[from=out2,
		mem_address=true,
		pos="e,643.33,124.26 704.75,159.52 688.3,150.6 669.04,139.63 652.91,130.03",
		to=in3];
	LSQ_store0 -> LSQ1	[from=out1,
		mem_address=false,
		pos="e,646.53,119.65 716.62,159.52 699.38,149.01 676.15,135.67 656.64,125.07",
		to=in4];
	mc_load2 -> mem_controller1	[from=out2,
		mem_address=true,
		pos="e,673.6,343.25 876.1,386.51 870.11,384.33 863.98,382.2 858.16,380.5 783.75,358.81 760.46,361.75 684.65,345.65",
		to=in1];
	sink0	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:6",
		label=sink0,
		mlir_op="handshake.sink",
		pos="1131.2,1195",
		shape=box,
		style=filled,
		type=Sink,
		width=0.75];
	cond_br0 -> sink0	[from=out2,
		pos="e,1104.3,1213.3 1049.4,1248.5 1063.1,1239.7 1080,1228.8 1094.9,1219.3",
		to=in1];
	cond_br3 -> fork13	[from=out2,
		pos="e,504.52,964.67 1056.9,196.44 1063.9,223.74 1076.2,278.34 1076.2,325.5 1076.2,759.5 1076.2,759.5 1076.2,759.5 1076.2,822.39 1023.3,\
822.18 966.16,848.5 904.17,877.07 881.59,860.85 815.16,876.5 705.24,902.4 577.69,941.52 515.38,961.23",
		to=in1];
	cond_br1 -> fork12	[from=out2,
		pos="e,421.23,1046.5 822.18,1046.5 692.31,1046.5 562.45,1046.5 432.58,1046.5",
		to=in1];
	cond_br5 -> cond_br10	[from=out2,
		pos="e,103.87,551.47 814.48,1183.2 805.09,1180.7 794.81,1178.3 785.16,1177 765.26,1174.3 79.228,1179.6 62.158,1169 10.634,1137.1 0.1582,\
1108.1 0.1582,1047.5 0.1582,1047.5 0.1582,1047.5 0.1582,685.5 0.1582,644.53 -2.3729,627.72 24.158,596.5 41.816,575.72 69.297,562.7 \
93.19,554.77",
		style=dashed,
		to=in1];
	LSQ_store1 -> LSQ0	[from=out2,
		mem_address=true,
		pos="e,1141.8,837.33 504,895.59 547.45,890.11 617.89,881.98 679.16,876.5 861.96,860.14 909.82,876.78 1091.2,848.5 1104,846.49 1118,843.24 \
1130.7,840.12",
		to=in3];
	LSQ_store1 -> LSQ0	[from=out1,
		mem_address=false,
		pos="e,1141.9,841.6 504.05,897.18 550.95,891.79 629.63,882.54 697.16,876.5 879.96,860.14 927.82,876.78 1109.2,848.5 1116.3,847.39 1123.7,\
845.9 1130.9,844.26",
		to=in4];
	cond_br2 -> mux0	[color=blue,
		from=out1,
		pos="e,1239,1188.1 269.33,557.74 197.89,588.31 38.158,659.57 38.158,685.5 38.158,975.5 38.158,975.5 38.158,975.5 38.158,1082.2 85.193,\
1120.4 180.16,1169 204.57,1181.5 1139.8,1174.6 1167.2,1177 1187.3,1178.8 1209.6,1182.5 1227.9,1185.9",
		to=in2];
	sink1	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:6",
		label=sink1,
		mlir_op="handshake.sink",
		pos="619.16,470.5",
		shape=box,
		style=filled,
		type=Sink,
		width=0.75];
	cond_br2 -> sink1	[from=out2,
		pos="e,591.93,485.23 337.03,537.9 388.36,531.86 488.79,517.69 581.02,488.74",
		to=in1];
	cond_br10 -> control_merge0	[color=blue,
		from=out1,
		pos="e,1278.1,1248.5 127.37,560.71 108.29,586.32 76.158,636.7 76.158,685.5 76.158,1047.5 76.158,1047.5 76.158,1047.5 76.158,1118.6 115.71,\
1139 180.16,1169 205.02,1180.6 1140.9,1169.1 1167.2,1177 1178.4,1180.4 1232.3,1216.9 1268.8,1242.1",
		style=dashed,
		to=in1];
	sink2	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:0",
		label=sink2,
		mlir_op="handshake.sink",
		pos="547.16,470.5",
		shape=box,
		style="filled, dashed",
		type=Sink,
		width=0.75];
	cond_br10 -> sink2	[from=out2,
		pos="e,519.68,487.26 178.33,526.89 181.29,526 184.26,525.18 187.16,524.5 326.69,491.61 373.49,530.63 508.91,490.56",
		style=dashed,
		to=in1];
	sink3	[bbID=0,
		delay="0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000",
		fillcolor=gainsboro,
		height=0.5,
		in="in1:32",
		label=sink3,
		mlir_op="handshake.sink",
		pos="458.16,398.5",
		shape=box,
		style=filled,
		type=Sink,
		width=0.75];
	cond_br11 -> sink3	[from=out1,
		pos="e,444.72,416.6 416.75,452.2 423.08,444.14 430.74,434.39 437.74,425.48",
		to=in1];
	cond_br11 -> buffer6	[from=out2,
		pos="e,421.97,196.21 404.35,452.2 407.68,403.86 417.1,267.03 421.2,207.39",
		to=in1];
}
