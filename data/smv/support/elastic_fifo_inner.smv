MODULE elastic_fifo_inner_dataless(ins, ins_valid, outs, outs_ready, SIZE)
VAR full : boolean;
VAR empty : boolean;

VAR tail : integer;
VAR head : integer;

VAR memory : array 0..SIZE-1 of DATA_TYPE;

DEFINE read_en := outs_ready & !empty;
DEFINE write_en := ins_valid and (!full or outs_ready)

ASSIGN
init(tail) := 0;
next(tail) := case
                write_en : (tail + 1) mod (SIZE): 
                TRUE : tail;
              esac;
ASSIGN
init(head) := 0;
next(head) := case
                read_en : (head + 1) mod (SIZE): 
                TRUE : head;
              esac;

DEFINE new_memory[i] := case
                          i = tail : ins;
                          TRUE : memory;
                        esac;
ASSIGN
init(memory) := [0];
next(memory) := case
                  write_en : new_memory;
                  TRUE : memory;
                esac;

ASSIGN
init(full) := FALSE;
next(full) := case
                write_en & !read_en : 
                  case
                    (tail + 1) mod SIZE = head : TRUE;
                    TRUE : full;
                  esac;
                !write_en & read_en : FALSE;
                TRUE : full;
              esac;
ASSIGN
init(empty) := TRUE;
next(empty) := case
                !write_en & read_en : 
                  case
                    (head + 1) mod SIZE = tail : TRUE;
                    TRUE : empty;
                  esac;
                write_en & !read_en : FALSE;
                TRUE : empty;
              esac;

DEFINE ins_ready := !full & outs_ready;
DEFINE outs_valid := !empty;
DEFINE outs := memory[head];
